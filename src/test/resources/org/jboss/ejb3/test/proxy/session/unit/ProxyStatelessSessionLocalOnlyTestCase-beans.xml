<deployment xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="urn:jboss:bean-deployer:2.0 bean-deployer_2_0.xsd"
  xmlns="urn:jboss:bean-deployer:2.0">

  <!-- 
    
    JNDI 
    
    The requisite Naming Server
    
  -->
  <bean name="NameServer" class="org.jnp.server.SingletonNamingServer" />

  <!-- 
    
    JNDI Registrars
    
    
    The JNDI Registrar is responsible for all JNDI Bindings for
    an EJB.  Its constructor takes the following arguments, in order:
    
    javax.naming.Context (JNDI Context into which to bind objects)
    org.jboss.ejb3.proxy.spi.registry.ProxyFactoryRegistry (Implementation of ProxyFactoryRegistry)
    String statelessSessionProxyObjectFactoryType The JNDI ObjectFactory implementation to use for SLSB
    ...more later when SFSB, @Service, MDB Implemented
    
  -->

  <!-- SLSB JNDI Registrar -->
  <bean name="org.jboss.ejb3.JndiRegistrar.Session.SLSBJndiRegistrar"
    class="org.jboss.ejb3.proxy.jndiregistrar.JndiStatelessSessionRegistrar">
    <constructor>
      <parameter>
        <inject bean="org.jboss.ejb3.JndiContext" />
      </parameter>
      <parameter>
        org.jboss.ejb3.proxy.objectfactory.session.stateless.StatelessSessionProxyObjectFactory
      </parameter>
    </constructor>
    <depends>NameServer</depends>
  </bean>

  <!-- JNDI Registrar Configuration -->
  <bean name="org.jboss.ejb3.JndiContext"
    class="javax.naming.InitialContext" />

  <!-- 
    
    Remoting
    
  -->

  <!-- Remoting  Configuration -->
  <bean name="ServerConfiguration"
    class="org.jboss.remoting.ServerConfiguration">
    <property name="invocationHandlers">
      <map keyClass="java.lang.String" valueClass="java.lang.String">
        <entry>
          <key>AOP</key>
          <value>
            org.jboss.aspects.remoting.AOPRemotingInvocationHandler
          </value>
        </entry>
      </map>
    </property>
  </bean>

  <!-- Remoting Connector -->
  <bean name="Connector"
    class="org.jboss.remoting.transport.Connector">
    <property name="invokerLocator">socket://0.0.0.0:3874</property>
    <property name="serverConfiguration">
      <inject bean="ServerConfiguration" />
    </property>
  </bean>

</deployment>