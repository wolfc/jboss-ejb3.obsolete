//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2009.06.08 at 07:12:16 PM IST
//

package org.jboss.ejb3.metadata.spi.jboss;

import java.util.List;

import org.jboss.ejb3.metadata.spi.javaee.DescriptionMetaData;
import org.jboss.ejb3.metadata.spi.javaee.IdMetaData;

/**
 * Element for specifying the remote jndi binding for a bean as well
 *             as the client interceptor stack
 *
 *
 * <p>Java class for remote-bindingType complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="remote-bindingType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="description" type="{http://java.sun.com/xml/ns/javaee}descriptionType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="jndi-name" type="{http://java.sun.com/xml/ns/javaee}jndi-nameType" minOccurs="0"/>
 *         &lt;element name="client-bind-url" type="{http://www.jboss.com/xml/ns/javaee}client-bind-urlType" minOccurs="0"/>
 *         &lt;element name="interceptor-stack" type="{http://www.jboss.com/xml/ns/javaee}interceptor-stackType" minOccurs="0"/>
 *         &lt;element name="proxy-factory" type="{http://www.jboss.com/xml/ns/javaee}proxy-factoryType" minOccurs="0"/>
 *         &lt;element name="invoker-name" type="{http://www.jboss.com/xml/ns/javaee}invoker-nameType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
public interface RemoteBindingMetaData extends IdMetaData
{

   /**
    * Gets the value of the description property.
    *
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the description property.
    *
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getDescription().add(newItem);
    * </pre>
    *
    *
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link DescriptionMetaData }
    *
    *
    */
   List<DescriptionMetaData> getDescription();

   /**
    *
    * @return Returns the jndi name of this remote jndi binding
    *
    */
   String getJndiName();

   /**
    * Sets the jndi name of this remote jndi binding
    *
    * @param jndiName
    *
    */
   void setJndiName(String jndiName);

   /**
    *
    * @return Returns the client bind URL of this remote jndi binding
    *
    */
   String getClientBindUrl();

   /**
    * Sets the client bind URL of this remote jndi binding
    *
    * @param clientBindURL
    *
    */
   void setClientBindUrl(String clientBindURL);

   /**
    *
    * @return Returns the client AOP interceptor stack name of this remote jndi binding
    *
    */
   String getInterceptorStack();

   /**
    * Sets the client AOP interceptor stack name for this remote jndi binding
    *
    * @param interceptorStack
    *
    */
   void setInterceptorStack(String interceptorStack);

   /**
    *
    * @return Returns the fully qualified class name of the proxy factory
    *
    */
   String getProxyFactory();

   /**
    * Sets the fully qualified name of the proxy factory class
    *
    * @param proxyFactoryClass
    *
    */
   void setProxyFactory(String proxyFactoryClass);

   /**
    *
    * @return Returns the name of the invoker (remoting Connector) to be used
    *
    */
   String getInvokerName();

   /**
    * Sets the name of the invoker (remoting Connector) to be used
    *
    * @param invokerName
    *
    */
   void setInvokerName(String value);

}
