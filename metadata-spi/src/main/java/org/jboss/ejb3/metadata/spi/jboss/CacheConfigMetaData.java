//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2009.06.08 at 07:12:16 PM IST
//

package org.jboss.ejb3.metadata.spi.jboss;

/**
 * Element for specifying the class used to provide the caching mechanism for a bean,
 *             and the cache parameters
 *
 *
 * <p>Java class for cache-configType complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="cache-configType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="cache-value" type="{http://www.jboss.com/xml/ns/javaee}cache-valueType" minOccurs="0"/>
 *         &lt;element name="cache-max-size" type="{http://www.jboss.com/xml/ns/javaee}cache-max-sizeType" minOccurs="0"/>
 *         &lt;element name="idle-timeout-seconds" type="{http://www.jboss.com/xml/ns/javaee}idle-timeout-secondsType" minOccurs="0"/>
 *         &lt;element name="remove-timeout-seconds" type="{http://www.jboss.com/xml/ns/javaee}remove-timeout-secondsType" minOccurs="0"/>
 *         &lt;element name="cache-name" type="{http://www.jboss.com/xml/ns/javaee}cache-nameType" minOccurs="0"/>
 *         &lt;element name="persistence-manager" type="{http://www.jboss.com/xml/ns/javaee}persistence-managerType" minOccurs="0"/>
 *         &lt;element name="replication-is-passivation" type="{http://www.jboss.com/xml/ns/javaee}replication-is-passivationType" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
public interface CacheConfigMetaData
{

   /**
    *
    * @return Returns the cache value
    *
    */
   String getCacheValue();

   /**
    * Sets the cache value
    *
    * @param cacheValue
    *
    */
   void setCacheValue(String cacheValue);

   /**
    *
    * @return Returns the max size of the cache
    * This represents the maximum cache entries before entry(s) are evicted
    *
    */
   int getCacheMaxSize();

   /**
    * Sets the max size of the cache. This is the maximum cache entries
    * before entry(s) are evicted
    *
    * @param maxSize The max size of the cache
    *
    */
   void setCacheMaxSize(int maxSize);

   /**
    *
    * @return Returns the number of seconds before an idle entry is evicted
    *
    */
   long getIdleTimeoutSeconds();

   /**
    * Sets the number of seconds before an idle entry is evicted
    *
    * @param idleTimeoutSeconds Number of seconds before an idle entry is evicted
    *
    */
   void setIdleTimeoutSeconds(long value);

   /**
    *
    * @return Returns the number of seconds before an idle entry is removed
    *
    */
   long getRemoveTimeoutSeconds();

   /**
    * Sets the number of seconds before an idle entry is removed
    *
    * @param removeTimeoutSeconds Number of seconds before an idle entry is removed
    *
    */
   void setRemoveTimeoutSeconds(long removeTimeoutSeconds);

   /**
    *
    * @return Returns the cache name
    *
    *
    */
   String getCacheName();

   /**
    * Sets the cache name
    *
    * @param cacheName The cache name
    *
    */
   void setCacheName(String cacheName);

   /**
    * @return Returns the fully qualified classname of the persistence manager
    * for this cache
    *
    */
   String getPersistenceManager();

   /**
    * Sets the fully qualified classname of the persistence manager
    * for this cache
    *
    * @param persistenceManagerClass Fully qualified classname of the persistence manager
    * for this cache
    *
    */
   void setPersistenceManager(String persistenceManagerClass);

   /**
    *
    * @return
    *
    */
   String getReplicationIsPassivation();

   /**
    * Sets the value of the replicationIsPassivation property.
    *
    * @param value
    *     
    *
    */
   void setReplicationIsPassivation(String value);

}
