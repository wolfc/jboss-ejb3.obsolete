//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.06.08 at 07:12:16 PM IST 
//

package org.jboss.ejb3.metadata.spi.jboss;

import java.util.List;

import org.jboss.ejb3.metadata.spi.javaee.DescriptionMetaData;
import org.jboss.ejb3.metadata.spi.javaee.DisplayNameMetaData;
import org.jboss.ejb3.metadata.spi.javaee.IconType;
import org.jboss.ejb3.metadata.spi.javaee.LifecycleCallbackMetaData;

/**
 * <p>Java class for generic-beanType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="generic-beanType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;group ref="{http://www.jboss.com/xml/ns/javaee}descriptionGroup"/>
 *         &lt;element name="ejb-name" type="{http://java.sun.com/xml/ns/javaee}ejb-nameType"/>
 *         &lt;element name="mapped-name" type="{http://java.sun.com/xml/ns/javaee}jndi-nameType" minOccurs="0"/>
 *         &lt;group ref="{http://www.jboss.com/xml/ns/javaee}jndiEnvironmentRefsGroup"/>
 *         &lt;element name="security-identity" type="{http://www.jboss.com/xml/ns/javaee}security-identityType" minOccurs="0"/>
 *         &lt;element name="jndi-name" type="{http://java.sun.com/xml/ns/javaee}jndi-nameType" minOccurs="0"/>
 *         &lt;element name="home-jndi-name" type="{http://java.sun.com/xml/ns/javaee}jndi-nameType" minOccurs="0"/>
 *         &lt;element name="local-jndi-name" type="{http://www.jboss.com/xml/ns/javaee}local-jndi-nameType" minOccurs="0"/>
 *         &lt;element name="local-home-jndi-name" type="{http://java.sun.com/xml/ns/javaee}jndi-nameType" minOccurs="0"/>
 *         &lt;element name="jndi-binding-policy" type="{http://www.jboss.com/xml/ns/javaee}jndi-binding-policyType" minOccurs="0"/>
 *         &lt;element name="security-domain" type="{http://www.jboss.com/xml/ns/javaee}security-domainType" minOccurs="0"/>
 *         &lt;element name="method-attributes" type="{http://www.jboss.com/xml/ns/javaee}method-attributesType" minOccurs="0"/>
 *         &lt;element name="depends" type="{http://www.jboss.com/xml/ns/javaee}dependsType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="annotation" type="{http://www.jboss.com/xml/ns/javaee}annotationType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="ignore-dependency" type="{http://www.jboss.com/xml/ns/javaee}ignore-dependencyType" minOccurs="0"/>
 *         &lt;element name="aop-domain-name" type="{http://www.jboss.com/xml/ns/javaee}aop-domain-nameType" minOccurs="0"/>
 *         &lt;element name="pool-config" type="{http://www.jboss.com/xml/ns/javaee}pool-configType" minOccurs="0"/>
 *         &lt;element name="jndi-ref" type="{http://www.jboss.com/xml/ns/javaee}jndi-refType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="port-component" type="{http://www.jboss.com/xml/ns/javaee}port-componentType" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
public interface GenericBeanMetaData
{

   /**
    * Gets the value of the description property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the description property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getDescription().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link DescriptionMetaData }
    * 
    * 
    */
   List<DescriptionMetaData> getDescription();

   /**
    * Gets the value of the displayName property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the displayName property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getDisplayName().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link DisplayNameMetaData }
    * 
    * 
    */
   List<DisplayNameMetaData> getDisplayName();

   /**
    * Gets the value of the icon property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the icon property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getIcon().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link IconType }
    * 
    * 
    */
   List<IconType> getIcon();

   /**
    * Gets the value of the ejbName property.
    * 
    * @return
    *     possible object is
    *     {@link EjbNameType }
    *     
    */
   String getEjbName();

   /**
    * Sets the value of the ejbName property.
    * 
    * @param value
    *     allowed object is
    *     {@link EjbNameType }
    *     
    */
   void setEjbName(String value);

   /**
    * Gets the value of the mappedName property.
    * 
    * @return
    *     possible object is
    *     {@link JndiNameType }
    *     
    */
   String getMappedName();

   /**
    * Sets the value of the mappedName property.
    * 
    * @param value
    *     allowed object is
    *     {@link JndiNameType }
    *     
    */
   void setMappedName(String value);

   /**
    * Gets the value of the envEntry property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the envEntry property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getEnvEntry().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link JBossEnvEntryMetaData }
    * 
    * 
    */
   List<JBossEnvEntryMetaData> getEnvEntry();

   /**
    * Gets the value of the ejbRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the ejbRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getEjbRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link JBossEjbRefMetaData }
    * 
    * 
    */
   List<JBossEjbRefMetaData> getEjbRef();

   /**
    * Gets the value of the ejbLocalRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the ejbLocalRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getEjbLocalRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link JBossEjbLocalRefMetaData }
    * 
    * 
    */
   List<JBossEjbLocalRefMetaData> getEjbLocalRef();

   /**
    * Gets the value of the serviceRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the serviceRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getServiceRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link ServiceRefMetaData }
    * 
    * 
    */
   List<ServiceRefMetaData> getServiceRef();

   /**
    * Gets the value of the resourceRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the resourceRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getResourceRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link JBossResourceRefMetaData }
    * 
    * 
    */
   List<JBossResourceRefMetaData> getResourceRef();

   /**
    * Gets the value of the resourceEnvRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the resourceEnvRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getResourceEnvRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link JBossResourceEnvRefMetaData }
    * 
    * 
    */
   List<JBossResourceEnvRefMetaData> getResourceEnvRef();

   /**
    * Gets the value of the messageDestinationRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the messageDestinationRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getMessageDestinationRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link JBossMessageDestinationRefMetaData }
    * 
    * 
    */
   List<JBossMessageDestinationRefMetaData> getMessageDestinationRef();

   /**
    * Gets the value of the persistenceContextRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the persistenceContextRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getPersistenceContextRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link JBossPersistenceContextRefMetaData }
    * 
    * 
    */
   List<JBossPersistenceContextRefMetaData> getPersistenceContextRef();

   /**
    * Gets the value of the persistenceUnitRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the persistenceUnitRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getPersistenceUnitRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link JBossPersistenceUnitRefMetaData }
    * 
    * 
    */
   List<JBossPersistenceUnitRefMetaData> getPersistenceUnitRef();

   /**
    * Gets the value of the postConstruct property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the postConstruct property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getPostConstruct().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link LifecycleCallbackMetaData }
    * 
    * 
    */
   List<LifecycleCallbackMetaData> getPostConstruct();

   /**
    * Gets the value of the preDestroy property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the preDestroy property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getPreDestroy().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link LifecycleCallbackMetaData }
    * 
    * 
    */
   List<LifecycleCallbackMetaData> getPreDestroy();

   /**
    * Gets the value of the securityIdentity property.
    * 
    * @return
    *     possible object is
    *     {@link JBossSecurityIdentityMetaData }
    *     
    */
   JBossSecurityIdentityMetaData getSecurityIdentity();

   /**
    * Sets the value of the securityIdentity property.
    * 
    * @param value
    *     allowed object is
    *     {@link JBossSecurityIdentityMetaData }
    *     
    */
   void setSecurityIdentity(JBossSecurityIdentityMetaData value);

   /**
    * Gets the value of the jndiName property.
    * 
    * @return
    *     possible object is
    *     {@link JndiNameType }
    *     
    */
   String getJndiName();

   /**
    * Sets the value of the jndiName property.
    * 
    * @param value
    *     allowed object is
    *     {@link JndiNameType }
    *     
    */
   void setJndiName(String value);

   /**
    * Gets the value of the homeJndiName property.
    * 
    * @return
    *     possible object is
    *     {@link JndiNameType }
    *     
    */
   String getHomeJndiName();

   /**
    * Sets the value of the homeJndiName property.
    * 
    * @param value
    *     allowed object is
    *     {@link JndiNameType }
    *     
    */
   void setHomeJndiName(String value);

   /**
    * Gets the value of the localJndiName property.
    * 
    * @return
    *     possible object is
    *     {@link LocalJndiNameType }
    *     
    */
   String getLocalJndiName();

   /**
    * Sets the value of the localJndiName property.
    * 
    * @param value
    *     allowed object is
    *     {@link LocalJndiNameType }
    *     
    */
   void setLocalJndiName(String value);

   /**
    * Gets the value of the localHomeJndiName property.
    * 
    * @return
    *     possible object is
    *     {@link JndiNameType }
    *     
    */
   String getLocalHomeJndiName();

   /**
    * Sets the value of the localHomeJndiName property.
    * 
    * @param value
    *     allowed object is
    *     {@link JndiNameType }
    *     
    */
   void setLocalHomeJndiName(String value);

   /**
    * Gets the value of the jndiBindingPolicy property.
    * 
    * @return
    *     possible object is
    *     {@link JndiBindingPolicyType }
    *     
    */
   String getJndiBindingPolicy();

   /**
    * Sets the value of the jndiBindingPolicy property.
    * 
    * @param value
    *     allowed object is
    *     {@link JndiBindingPolicyType }
    *     
    */
   void setJndiBindingPolicy(String value);

   /**
    * Gets the value of the securityDomain property.
    * 
    * @return
    *     possible object is
    *     {@link SecurityDomainType }
    *     
    */
   String getSecurityDomain();

   /**
    * Sets the value of the securityDomain property.
    * 
    * @param value
    *     allowed object is
    *     {@link SecurityDomainType }
    *     
    */
   void setSecurityDomain(String value);

   /**
    * Gets the value of the methodAttributes property.
    * 
    * @return
    *     possible object is
    *     {@link MethodAttributesMetaData }
    *     
    */
   MethodAttributesMetaData getMethodAttributes();

   /**
    * Sets the value of the methodAttributes property.
    * 
    * @param value
    *     allowed object is
    *     {@link MethodAttributesMetaData }
    *     
    */
   void setMethodAttributes(MethodAttributesMetaData value);

   /**
    * Gets the value of the depends property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the depends property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getDepends().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link DependsType }
    * 
    * 
    */
   List<String> getDepends();

   /**
    * Gets the value of the annotation property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the annotation property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getAnnotation().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link AnnotationMetaData }
    * 
    * 
    */
   List<AnnotationMetaData> getAnnotation();

   /**
    * Gets the value of the ignoreDependency property.
    * 
    * @return
    *     possible object is
    *     {@link IgnoreDependencyMetaData }
    *     
    */
   IgnoreDependencyMetaData getIgnoreDependency();

   /**
    * Sets the value of the ignoreDependency property.
    * 
    * @param value
    *     allowed object is
    *     {@link IgnoreDependencyMetaData }
    *     
    */
   void setIgnoreDependency(IgnoreDependencyMetaData value);

   /**
    * Gets the value of the aopDomainName property.
    * 
    * @return
    *     possible object is
    *     {@link AopDomainNameType }
    *     
    */
   String getAopDomainName();

   /**
    * Sets the value of the aopDomainName property.
    * 
    * @param value
    *     allowed object is
    *     {@link AopDomainNameType }
    *     
    */
   void setAopDomainName(String value);

   /**
    * Gets the value of the poolConfig property.
    * 
    * @return
    *     possible object is
    *     {@link PoolConfigMetaData }
    *     
    */
   PoolConfigMetaData getPoolConfig();

   /**
    * Sets the value of the poolConfig property.
    * 
    * @param value
    *     allowed object is
    *     {@link PoolConfigMetaData }
    *     
    */
   void setPoolConfig(PoolConfigMetaData value);

   /**
    * Gets the value of the jndiRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the jndiRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getJndiRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link JndiRefMetaData }
    * 
    * 
    */
   List<JndiRefMetaData> getJndiRef();

   /**
    * Gets the value of the portComponent property.
    * 
    * @return
    *     possible object is
    *     {@link PortComponentMetaData }
    *     
    */
   PortComponentMetaData getPortComponent();

   /**
    * Sets the value of the portComponent property.
    * 
    * @param value
    *     allowed object is
    *     {@link PortComponentMetaData }
    *     
    */
   void setPortComponent(PortComponentMetaData value);

}
