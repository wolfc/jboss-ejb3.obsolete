//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.06.08 at 07:12:16 PM IST 
//

package org.jboss.ejb3.metadata.spi.javaee;

import java.util.List;

/**
 * 
 * 
 * 	The session-beanType declares an session bean. The
 * 	declaration consists of:
 * 
 * 	    - an optional description
 * 	    - an optional display name
 * 	    - an optional icon element that contains a small and a large
 * 	      icon file name
 * 	    - a name assigned to the enterprise bean
 * 	      in the deployment description
 *             - an optional mapped-name element that can be used to provide
 *               vendor-specific deployment information such as the physical
 *               jndi-name of the session bean's remote home/business interface.
 *               This element is not required to be supported by all
 *               implementations. Any use of this element is non-portable.
 *             - the names of all the remote or local business interfaces,
 *               if any
 * 	    - the names of the session bean's remote home and
 * 	      remote interfaces, if any
 * 	    - the names of the session bean's local home and
 * 	      local interfaces, if any
 * 	    - the name of the session bean's web service endpoint
 * 	      interface, if any
 * 	    - the session bean's implementation class
 * 	    - the session bean's state management type
 *             - an optional declaration of the session bean's timeout method.
 * 	    - the optional session bean's transaction management type.
 *               If it is not present, it is defaulted to Container.
 *             - an optional list of the session bean class and/or
 *               superclass around-invoke methods.
 * 	    - an optional declaration of the bean's
 * 	      environment entries
 * 	    - an optional declaration of the bean's EJB references
 * 	    - an optional declaration of the bean's local
 * 	      EJB references
 * 	    - an optional declaration of the bean's web
 * 	      service references
 * 	    - an optional declaration of the security role
 * 	      references
 * 	    - an optional declaration of the security identity
 * 	      to be used for the execution of the bean's methods
 * 	    - an optional declaration of the bean's resource
 * 	      manager connection factory references
 * 	    - an optional declaration of the bean's resource
 * 	      environment references.
 * 	    - an optional declaration of the bean's message
 * 	      destination references
 * 
 * 	The elements that are optional are "optional" in the sense
 * 	that they are omitted when if lists represented by them are
 * 	empty.
 * 
 * 	Either both the local-home and the local elements or both
 * 	the home and the remote elements must be specified for the
 * 	session bean.
 * 
 * 	The service-endpoint element may only be specified if the
 * 	bean is a stateless session bean.
 * 
 *       
 * 
 * <p>Java class for session-beanType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="session-beanType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;group ref="{http://java.sun.com/xml/ns/javaee}descriptionGroup"/>
 *         &lt;element name="ejb-name" type="{http://java.sun.com/xml/ns/javaee}ejb-nameType"/>
 *         &lt;element name="mapped-name" type="{http://java.sun.com/xml/ns/javaee}xsdStringType" minOccurs="0"/>
 *         &lt;element name="home" type="{http://java.sun.com/xml/ns/javaee}homeType" minOccurs="0"/>
 *         &lt;element name="remote" type="{http://java.sun.com/xml/ns/javaee}remoteType" minOccurs="0"/>
 *         &lt;element name="local-home" type="{http://java.sun.com/xml/ns/javaee}local-homeType" minOccurs="0"/>
 *         &lt;element name="local" type="{http://java.sun.com/xml/ns/javaee}localType" minOccurs="0"/>
 *         &lt;element name="business-local" type="{http://java.sun.com/xml/ns/javaee}fully-qualified-classType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="business-remote" type="{http://java.sun.com/xml/ns/javaee}fully-qualified-classType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="service-endpoint" type="{http://java.sun.com/xml/ns/javaee}fully-qualified-classType" minOccurs="0"/>
 *         &lt;element name="ejb-class" type="{http://java.sun.com/xml/ns/javaee}ejb-classType" minOccurs="0"/>
 *         &lt;element name="session-type" type="{http://java.sun.com/xml/ns/javaee}session-typeType" minOccurs="0"/>
 *         &lt;element name="timeout-method" type="{http://java.sun.com/xml/ns/javaee}named-methodType" minOccurs="0"/>
 *         &lt;element name="init-method" type="{http://java.sun.com/xml/ns/javaee}init-methodType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="remove-method" type="{http://java.sun.com/xml/ns/javaee}remove-methodType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="transaction-type" type="{http://java.sun.com/xml/ns/javaee}transaction-typeType" minOccurs="0"/>
 *         &lt;element name="around-invoke" type="{http://java.sun.com/xml/ns/javaee}around-invokeType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;group ref="{http://java.sun.com/xml/ns/javaee}jndiEnvironmentRefsGroup"/>
 *         &lt;element name="post-activate" type="{http://java.sun.com/xml/ns/javaee}lifecycle-callbackType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="pre-passivate" type="{http://java.sun.com/xml/ns/javaee}lifecycle-callbackType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="security-role-ref" type="{http://java.sun.com/xml/ns/javaee}security-role-refType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="security-identity" type="{http://java.sun.com/xml/ns/javaee}security-identityType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
public interface SessionBeanMetaData
{

   /**
    * Gets the value of the description property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the description property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getDescription().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link DescriptionMetaData }
    * 
    * 
    */
   List<DescriptionMetaData> getDescription();

   /**
    * Gets the value of the displayName property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the displayName property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getDisplayName().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link DisplayNameMetaData }
    * 
    * 
    */
   List<DisplayNameMetaData> getDisplayName();

   /**
    * Gets the value of the icon property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the icon property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getIcon().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link IconType }
    * 
    * 
    */
   List<IconType> getIcon();

   /**
    * Gets the value of the ejbName property.
    * 
    * @return
    *     possible object is
    *     {@link EjbNameType }
    *     
    */
   String getEjbName();

   /**
    * Sets the value of the ejbName property.
    * 
    * @param value
    *     allowed object is
    *     {@link EjbNameType }
    *     
    */
   void setEjbName(String value);

   /**
    * Gets the value of the mappedName property.
    * 
    * @return
    *     possible object is
    *     {@link XsdStringType }
    *     
    */
   String getMappedName();

   /**
    * Sets the value of the mappedName property.
    * 
    * @param value
    *     allowed object is
    *     {@link XsdStringType }
    *     
    */
   void setMappedName(String value);

   /**
    * Gets the value of the home property.
    * 
    * @return
    *     possible object is
    *     {@link HomeType }
    *     
    */
   String getHome();

   /**
    * Sets the value of the home property.
    * 
    * @param value
    *     allowed object is
    *     {@link HomeType }
    *     
    */
   void setHome(String value);

   /**
    * Gets the value of the remote property.
    * 
    * @return
    *     possible object is
    *     {@link RemoteType }
    *     
    */
   String getRemote();

   /**
    * Sets the value of the remote property.
    * 
    * @param value
    *     allowed object is
    *     {@link RemoteType }
    *     
    */
   void setRemote(String value);

   /**
    * Gets the value of the localHome property.
    * 
    * @return
    *     possible object is
    *     {@link LocalHomeType }
    *     
    */
   String getLocalHome();

   /**
    * Sets the value of the localHome property.
    * 
    * @param value
    *     allowed object is
    *     {@link LocalHomeType }
    *     
    */
   void setLocalHome(String value);

   /**
    * Gets the value of the local property.
    * 
    * @return
    *     possible object is
    *     {@link LocalType }
    *     
    */
   String getLocal();

   /**
    * Sets the value of the local property.
    * 
    * @param value
    *     allowed object is
    *     {@link LocalType }
    *     
    */
   void setLocal(String value);

   /**
    * Gets the value of the businessLocal property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the businessLocal property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getBusinessLocal().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link FullyQualifiedClassType }
    * 
    * 
    */
   List<String> getBusinessLocal();

   /**
    * Gets the value of the businessRemote property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the businessRemote property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getBusinessRemote().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link FullyQualifiedClassType }
    * 
    * 
    */
   List<String> getBusinessRemote();

   /**
    * Gets the value of the serviceEndpoint property.
    * 
    * @return
    *     possible object is
    *     {@link FullyQualifiedClassType }
    *     
    */
   String getServiceEndpoint();

   /**
    * Sets the value of the serviceEndpoint property.
    * 
    * @param value
    *     allowed object is
    *     {@link FullyQualifiedClassType }
    *     
    */
   void setServiceEndpoint(String value);

   /**
    * Gets the value of the ejbClass property.
    * 
    * @return
    *     possible object is
    *     {@link EjbClassType }
    *     
    */
   String getEjbClass();

   /**
    * Sets the value of the ejbClass property.
    * 
    * @param value
    *     allowed object is
    *     {@link EjbClassType }
    *     
    */
   void setEjbClass(String value);

   /**
    * Gets the value of the sessionType property.
    * 
    * @return
    *     possible object is
    *     {@link SessionTypeType }
    *     
    */
   String getSessionType();

   /**
    * Sets the value of the sessionType property.
    * 
    * @param value
    *     allowed object is
    *     {@link SessionTypeType }
    *     
    */
   void setSessionType(String value);

   /**
    * Gets the value of the timeoutMethod property.
    * 
    * @return
    *     possible object is
    *     {@link NamedMethodMetaData }
    *     
    */
   NamedMethodMetaData getTimeoutMethod();

   /**
    * Sets the value of the timeoutMethod property.
    * 
    * @param value
    *     allowed object is
    *     {@link NamedMethodMetaData }
    *     
    */
   void setTimeoutMethod(NamedMethodMetaData value);

   /**
    * Gets the value of the initMethod property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the initMethod property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getInitMethod().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link InitMethodMetaData }
    * 
    * 
    */
   List<InitMethodMetaData> getInitMethod();

   /**
    * Gets the value of the removeMethod property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the removeMethod property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getRemoveMethod().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link RemoveMethodMetaData }
    * 
    * 
    */
   List<RemoveMethodMetaData> getRemoveMethod();

   /**
    * Gets the value of the transactionType property.
    * 
    * @return
    *     possible object is
    *     {@link TransactionTypeType }
    *     
    */
   String getTransactionType();

   /**
    * Sets the value of the transactionType property.
    * 
    * @param value
    *     allowed object is
    *     {@link TransactionTypeType }
    *     
    */
   void setTransactionType(String value);

   /**
    * Gets the value of the aroundInvoke property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the aroundInvoke property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getAroundInvoke().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link AroundInvokeMetaData }
    * 
    * 
    */
   List<AroundInvokeMetaData> getAroundInvoke();

   /**
    * Gets the value of the envEntry property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the envEntry property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getEnvEntry().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link EnvEntryMetaData }
    * 
    * 
    */
   List<EnvEntryMetaData> getEnvEntry();

   /**
    * Gets the value of the ejbRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the ejbRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getEjbRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link EjbRefMetaData }
    * 
    * 
    */
   List<EjbRefMetaData> getEjbRef();

   /**
    * Gets the value of the ejbLocalRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the ejbLocalRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getEjbLocalRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link EjbLocalRefMetaData }
    * 
    * 
    */
   List<EjbLocalRefMetaData> getEjbLocalRef();

   /**
    * Gets the value of the serviceRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the serviceRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getServiceRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link ServiceRefMetaData }
    * 
    * 
    */
   List<ServiceRefMetaData> getServiceRef();

   /**
    * Gets the value of the resourceRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the resourceRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getResourceRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link ResourceRefMetaData }
    * 
    * 
    */
   List<ResourceRefMetaData> getResourceRef();

   /**
    * Gets the value of the resourceEnvRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the resourceEnvRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getResourceEnvRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link ResourceEnvRefMetaData }
    * 
    * 
    */
   List<ResourceEnvRefMetaData> getResourceEnvRef();

   /**
    * Gets the value of the messageDestinationRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the messageDestinationRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getMessageDestinationRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link MessageDestinationRefType }
    * 
    * 
    */
   // TODO: Revisit, we need this
   //List<MessageDestinationRefType> getMessageDestinationRef();
   /**
    * Gets the value of the persistenceContextRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the persistenceContextRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getPersistenceContextRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link PersistenceContextRefMetaData }
    * 
    * 
    */
   List<PersistenceContextRefMetaData> getPersistenceContextRef();

   /**
    * Gets the value of the persistenceUnitRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the persistenceUnitRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getPersistenceUnitRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link PersistenceUnitRefMetaData }
    * 
    * 
    */
   List<PersistenceUnitRefMetaData> getPersistenceUnitRef();

   /**
    * Gets the value of the postConstruct property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the postConstruct property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getPostConstruct().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link LifecycleCallbackMetaData }
    * 
    * 
    */
   List<LifecycleCallbackMetaData> getPostConstruct();

   /**
    * Gets the value of the preDestroy property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the preDestroy property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getPreDestroy().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link LifecycleCallbackMetaData }
    * 
    * 
    */
   List<LifecycleCallbackMetaData> getPreDestroy();

   /**
    * Gets the value of the postActivate property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the postActivate property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getPostActivate().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link LifecycleCallbackMetaData }
    * 
    * 
    */
   List<LifecycleCallbackMetaData> getPostActivate();

   /**
    * Gets the value of the prePassivate property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the prePassivate property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getPrePassivate().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link LifecycleCallbackMetaData }
    * 
    * 
    */
   List<LifecycleCallbackMetaData> getPrePassivate();

   /**
    * Gets the value of the securityRoleRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the securityRoleRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getSecurityRoleRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link SecurityRoleRefMetaData }
    * 
    * 
    */
   List<SecurityRoleRefMetaData> getSecurityRoleRef();

   /**
    * Gets the value of the securityIdentity property.
    * 
    * @return
    *     possible object is
    *     {@link SecurityIdentityMetaData }
    *     
    */
   SecurityIdentityMetaData getSecurityIdentity();

   /**
    * Sets the value of the securityIdentity property.
    * 
    * @param value
    *     allowed object is
    *     {@link SecurityIdentityMetaData }
    *     
    */
   void setSecurityIdentity(SecurityIdentityMetaData value);

   /**
    * Gets the value of the id property.
    * 
    * @return
    *     possible object is
    *     {@link java.lang.String }
    *     
    */
   java.lang.String getId();

   /**
    * Sets the value of the id property.
    * 
    * @param value
    *     allowed object is
    *     {@link java.lang.String }
    *     
    */
   void setId(java.lang.String value);

}
