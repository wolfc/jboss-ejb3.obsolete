//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2009.06.08 at 07:12:16 PM IST
//

package org.jboss.ejb3.metadata.spi.jboss;

import org.jboss.ejb3.metadata.spi.javaee.IdMetaData;

/**
 *  The method element is used to specify attributes for one method or all
 *             those matching a pattern startingstring*.
 *
 * <p>Java class for methodType complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="methodType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="method-name" type="{http://java.sun.com/xml/ns/javaee}method-nameType"/>
 *         &lt;element name="read-only" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="idempotent" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="transaction-timeout" type="{http://www.jboss.com/xml/ns/javaee}transaction-timeoutType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
public interface JBossMethodMetaData extends IdMetaData
{

   /**
    *
    * @return Returns the name of the method
    *
    */
   String getMethodName();

   /**
    * Sets the method name
    *
    * @param methodName The name of the method
    *
    */
   void setMethodName(String methodName);

   /**
    *
    * @return  Returns true if the method is read-only, else returns false
    *
    */
   boolean isReadOnly();

   /**
    * Set to true if the method is read-only. Else set to false.
    *
    * @param isReadOnly True if the method is read-only, else false
    *
    */
   void setReadOnly(boolean isReadOnly);

   /**
    * @return  Returns true if the method is idempotent, else returns false
    *
    */
   Boolean isIdempotent();

   /**
    * Set to true if the method is idempotent. Else set to false.
    *
    * @param isIdempotent True if the method is idempotent, else false
    *
    */
   void setIdempotent(Boolean isIdempotent);

   /**
    *
    * @return Returns the transaction timeout (if any) associated with this
    * method. Returns null if there is no transaction timeout configured for
    * this method
    *
    */
   String getTransactionTimeout();

   /**
    * Sets the transaction timeout for this method
    *
    * @param transactionTimeout The transaction timeout of this method
    *
    */
   void setTransactionTimeout(String transactionTimeout);

}
