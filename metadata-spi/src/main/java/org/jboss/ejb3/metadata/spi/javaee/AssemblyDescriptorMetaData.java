//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.06.08 at 07:12:16 PM IST 
//

package org.jboss.ejb3.metadata.spi.javaee;

import java.util.List;

/**
 * 
 * 
 * 	The assembly-descriptorType defines
 * 	application-assembly information.
 * 
 * 	The application-assembly information consists of the
 * 	following parts: the definition of security roles, the
 * 	definition of method permissions, the definition of
 * 	transaction attributes for enterprise beans with
 * 	container-managed transaction demarcation, the definition
 *         of interceptor bindings, a list of
 * 	methods to be excluded from being invoked, and a list of
 *         exception types that should be treated as application exceptions.
 * 
 * 	All the parts are optional in the sense that they are
 * 	omitted if the lists represented by them are empty.
 * 
 * 	Providing an assembly-descriptor in the deployment
 * 	descriptor is optional for the ejb-jar file producer.
 * 
 *       
 * 
 * <p>Java class for assembly-descriptorType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="assembly-descriptorType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="security-role" type="{http://java.sun.com/xml/ns/javaee}security-roleType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="method-permission" type="{http://java.sun.com/xml/ns/javaee}method-permissionType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="container-transaction" type="{http://java.sun.com/xml/ns/javaee}container-transactionType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="interceptor-binding" type="{http://java.sun.com/xml/ns/javaee}interceptor-bindingType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="message-destination" type="{http://java.sun.com/xml/ns/javaee}message-destinationType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="exclude-list" type="{http://java.sun.com/xml/ns/javaee}exclude-listType" minOccurs="0"/>
 *         &lt;element name="application-exception" type="{http://java.sun.com/xml/ns/javaee}application-exceptionType" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
public interface AssemblyDescriptorMetaData
{

   /**
    * Gets the value of the securityRole property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the securityRole property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getSecurityRole().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link SecurityRoleMetaData }
    * 
    * 
    */
   List<SecurityRoleMetaData> getSecurityRole();

   /**
    * Gets the value of the methodPermission property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the methodPermission property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getMethodPermission().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link MethodPermissionMetaData }
    * 
    * 
    */
   List<MethodPermissionMetaData> getMethodPermission();

   /**
    * Gets the value of the containerTransaction property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the containerTransaction property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getContainerTransaction().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link ContainerTransactionMetaData }
    * 
    * 
    */
   List<ContainerTransactionMetaData> getContainerTransaction();

   /**
    * Gets the value of the interceptorBinding property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the interceptorBinding property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getInterceptorBinding().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link InterceptorBindingMetaData }
    * 
    * 
    */
   List<InterceptorBindingMetaData> getInterceptorBinding();

   /**
    * Gets the value of the messageDestination property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the messageDestination property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getMessageDestination().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link MessageDestinationMetaData }
    * 
    * 
    */
   List<MessageDestinationMetaData> getMessageDestination();

   /**
    * Gets the value of the excludeList property.
    * 
    * @return
    *     possible object is
    *     {@link ExcludeListMetaData }
    *     
    */
   ExcludeListMetaData getExcludeList();

   /**
    * Sets the value of the excludeList property.
    * 
    * @param value
    *     allowed object is
    *     {@link ExcludeListMetaData }
    *     
    */
   void setExcludeList(ExcludeListMetaData value);

   /**
    * Gets the value of the applicationException property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the applicationException property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getApplicationException().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link ApplicationExceptionMetaData }
    * 
    * 
    */
   List<ApplicationExceptionMetaData> getApplicationException();

   /**
    * Gets the value of the id property.
    * 
    * @return
    *     possible object is
    *     {@link java.lang.String }
    *     
    */
   java.lang.String getId();

   /**
    * Sets the value of the id property.
    * 
    * @param value
    *     allowed object is
    *     {@link java.lang.String }
    *     
    */
   void setId(java.lang.String value);

}
