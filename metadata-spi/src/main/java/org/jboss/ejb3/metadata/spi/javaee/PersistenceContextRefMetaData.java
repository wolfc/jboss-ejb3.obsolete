//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.06.08 at 07:12:16 PM IST 
//

package org.jboss.ejb3.metadata.spi.javaee;

import java.util.List;

/**
 * 
 * 	
 * 
 * 	  The persistence-context-ref element contains a declaration
 * 	  of Deployment Component's reference to a persistence context
 * 	  associated within a Deployment Component's
 * 	  environment. It consists of:
 * 
 * 		  - an optional description
 * 		  - the persistence context reference name
 * 		  - an optional persistence unit name.  If not specified,
 *                     the default persistence unit is assumed.
 * 		  - an optional specification as to whether
 * 		    the persistence context type is Transaction or
 * 		    Extended.  If not specified, Transaction is assumed.
 *                   - an optional list of persistence properties
 * 		  - optional injection targets
 * 
 * 	  Examples:
 * 
 *             <persistence-context-ref>
 *               <persistence-context-ref-name>myPersistenceContext
 *               </persistence-context-ref-name>
 *             </persistence-context-ref>
 * 
 *             <persistence-context-ref>
 *               <persistence-context-ref-name>myPersistenceContext
 *                 </persistence-context-ref-name>
 *               <persistence-unit-name>PersistenceUnit1
 *                 </persistence-unit-name>
 *               <persistence-context-type>Extended</persistence-context-type>
 *             </persistence-context-ref>
 * 
 * 	  
 *       
 * 
 * <p>Java class for persistence-context-refType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="persistence-context-refType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="description" type="{http://java.sun.com/xml/ns/javaee}descriptionType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="persistence-context-ref-name" type="{http://java.sun.com/xml/ns/javaee}jndi-nameType"/>
 *         &lt;element name="persistence-unit-name" type="{http://java.sun.com/xml/ns/javaee}string" minOccurs="0"/>
 *         &lt;element name="persistence-context-type" type="{http://java.sun.com/xml/ns/javaee}persistence-context-typeType" minOccurs="0"/>
 *         &lt;element name="persistence-property" type="{http://java.sun.com/xml/ns/javaee}propertyType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;group ref="{http://java.sun.com/xml/ns/javaee}resourceGroup"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
public interface PersistenceContextRefMetaData
{

   /**
    * Gets the value of the description property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the description property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getDescription().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link DescriptionMetaData }
    * 
    * 
    */
   List<DescriptionMetaData> getDescription();

   /**
    * Gets the value of the persistenceContextRefName property.
    * 
    * @return
    *     possible object is
    *     {@link JndiNameType }
    *     
    */
   String getPersistenceContextRefName();

   /**
    * Sets the value of the persistenceContextRefName property.
    * 
    * @param value
    *     allowed object is
    *     {@link JndiNameType }
    *     
    */
   void setPersistenceContextRefName(String value);

   /**
    * Gets the value of the persistenceUnitName property.
    * 
    * @return
    *     possible object is
    *     {@link com.sun.java.xml.ns.javaee.String }
    *     
    */
   String getPersistenceUnitName();

   /**
    * Sets the value of the persistenceUnitName property.
    * 
    * @param value
    *     allowed object is
    *     {@link com.sun.java.xml.ns.javaee.String }
    *     
    */
   void setPersistenceUnitName(String value);

   /**
    * Gets the value of the persistenceContextType property.
    * 
    * @return
    *     possible object is
    *     {@link PersistenceContextTypeType }
    *     
    */
   String getPersistenceContextType();

   /**
    * Sets the value of the persistenceContextType property.
    * 
    * @param value
    *     allowed object is
    *     {@link PersistenceContextTypeType }
    *     
    */
   void setPersistenceContextType(String value);

   /**
    * Gets the value of the persistenceProperty property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the persistenceProperty property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getPersistenceProperty().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link PropertyMetaData }
    * 
    * 
    */
   List<PropertyMetaData> getPersistenceProperty();

   /**
    * Gets the value of the mappedName property.
    * 
    * @return
    *     possible object is
    *     {@link XsdStringType }
    *     
    */
   String getMappedName();

   /**
    * Sets the value of the mappedName property.
    * 
    * @param value
    *     allowed object is
    *     {@link XsdStringType }
    *     
    */
   void setMappedName(String value);

   /**
    * Gets the value of the injectionTarget property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the injectionTarget property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getInjectionTarget().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link InjectionTargetMetaData }
    * 
    * 
    */
   List<InjectionTargetMetaData> getInjectionTarget();

   /**
    * Gets the value of the id property.
    * 
    * @return
    *     possible object is
    *     {@link java.lang.String }
    *     
    */
   java.lang.String getId();

   /**
    * Sets the value of the id property.
    * 
    * @param value
    *     allowed object is
    *     {@link java.lang.String }
    *     
    */
   void setId(java.lang.String value);

}
