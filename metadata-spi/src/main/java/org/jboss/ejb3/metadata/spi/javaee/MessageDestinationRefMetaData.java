//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.06.08 at 07:12:16 PM IST 
//

package org.jboss.ejb3.metadata.spi.javaee;

import java.util.List;

/**
 * 
 * 	
 * 
 * 	  The message-destination-ref element contains a declaration
 * 	  of Deployment Component's reference to a message destination
 * 	  associated with a resource in Deployment Component's
 * 	  environment. It consists of:
 * 
 * 		  - an optional description
 * 		  - the message destination reference name
 * 		  - an optional message destination type
 * 		  - an optional specification as to whether
 * 		    the destination is used for
 * 		    consuming or producing messages, or both.
 * 		    if not specified, "both" is assumed.
 * 		  - an optional link to the message destination
 * 		  - optional injection targets
 * 
 * 	  The message destination type must be supplied unless an
 * 	  injection target is specified, in which case the type
 * 	  of the target is used.  If both are specified, the type
 * 	  must be assignment compatible with the type of the injection
 * 	  target.
 * 
 * 	  Examples:
 * 
 * 	  <message-destination-ref>
 * 		  <message-destination-ref-name>jms/StockQueue
 * 		  </message-destination-ref-name>
 * 		  <message-destination-type>javax.jms.Queue
 * 		  </message-destination-type>
 * 		  <message-destination-usage>Consumes
 * 		  </message-destination-usage>
 * 		  <message-destination-link>CorporateStocks
 * 		  </message-destination-link>
 * 	  </message-destination-ref>
 * 
 * 	  
 *       
 * 
 * <p>Java class for message-destination-refType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="message-destination-refType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="description" type="{http://java.sun.com/xml/ns/javaee}descriptionType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="message-destination-ref-name" type="{http://java.sun.com/xml/ns/javaee}jndi-nameType"/>
 *         &lt;element name="message-destination-type" type="{http://java.sun.com/xml/ns/javaee}message-destination-typeType" minOccurs="0"/>
 *         &lt;element name="message-destination-usage" type="{http://java.sun.com/xml/ns/javaee}message-destination-usageType" minOccurs="0"/>
 *         &lt;element name="message-destination-link" type="{http://java.sun.com/xml/ns/javaee}message-destination-linkType" minOccurs="0"/>
 *         &lt;group ref="{http://java.sun.com/xml/ns/javaee}resourceGroup"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
public interface MessageDestinationRefMetaData
{

   /**
    * Gets the value of the description property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the description property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getDescription().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link DescriptionMetaData }
    * 
    * 
    */
   List<DescriptionMetaData> getDescription();

   /**
    * Gets the value of the messageDestinationRefName property.
    * 
    * @return
    *     possible object is
    *     {@link JndiNameType }
    *     
    */
   String getMessageDestinationRefName();

   /**
    * Sets the value of the messageDestinationRefName property.
    * 
    * @param value
    *     allowed object is
    *     {@link JndiNameType }
    *     
    */
   void setMessageDestinationRefName(String value);

   /**
    * Gets the value of the messageDestinationType property.
    * 
    * @return
    *     possible object is
    *     {@link MessageDestinationTypeType }
    *     
    */
   String getMessageDestinationType();

   /**
    * Sets the value of the messageDestinationType property.
    * 
    * @param value
    *     allowed object is
    *     {@link MessageDestinationTypeType }
    *     
    */
   void setMessageDestinationType(String value);

   /**
    * Gets the value of the messageDestinationUsage property.
    * 
    * @return
    *     possible object is
    *     {@link MessageDestinationUsageType }
    *     
    */
   String getMessageDestinationUsage();

   /**
    * Sets the value of the messageDestinationUsage property.
    * 
    * @param value
    *     allowed object is
    *     {@link MessageDestinationUsageType }
    *     
    */
   void setMessageDestinationUsage(String value);

   /**
    * Gets the value of the messageDestinationLink property.
    * 
    * @return
    *     possible object is
    *     {@link MessageDestinationLinkType }
    *     
    */
   String getMessageDestinationLink();

   /**
    * Sets the value of the messageDestinationLink property.
    * 
    * @param value
    *     allowed object is
    *     {@link MessageDestinationLinkType }
    *     
    */
   void setMessageDestinationLink(String value);

   /**
    * Gets the value of the mappedName property.
    * 
    * @return
    *     possible object is
    *     {@link XsdStringType }
    *     
    */
   String getMappedName();

   /**
    * Sets the value of the mappedName property.
    * 
    * @param value
    *     allowed object is
    *     {@link XsdStringType }
    *     
    */
   void setMappedName(String value);

   /**
    * Gets the value of the injectionTarget property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the injectionTarget property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getInjectionTarget().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link InjectionTargetMetaData }
    * 
    * 
    */
   List<InjectionTargetMetaData> getInjectionTarget();

   /**
    * Gets the value of the id property.
    * 
    * @return
    *     possible object is
    *     {@link java.lang.String }
    *     
    */
   java.lang.String getId();

   /**
    * Sets the value of the id property.
    * 
    * @param value
    *     allowed object is
    *     {@link java.lang.String }
    *     
    */
   void setId(java.lang.String value);

}
