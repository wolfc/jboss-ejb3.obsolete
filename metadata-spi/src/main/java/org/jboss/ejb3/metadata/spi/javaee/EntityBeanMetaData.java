//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.06.08 at 07:12:16 PM IST 
//

package org.jboss.ejb3.metadata.spi.javaee;

import java.util.List;

/**
 * 
 * 
 * 	The entity-beanType declares an entity bean. The declaration
 * 	consists of:
 * 
 * 	    - an optional description
 * 	    - an optional display name
 * 	    - an optional icon element that contains a small and a large
 * 	      icon file name
 * 	    - a unique name assigned to the enterprise bean
 * 	      in the deployment descriptor
 *             - an optional mapped-name element that can be used to provide
 *               vendor-specific deployment information such as the physical
 *               jndi-name of the entity bean's remote home interface. This
 *               element is not required to be supported by all implementations.
 *               Any use of this element is non-portable.
 * 	    - the names of the entity bean's remote home
 * 	      and remote interfaces, if any
 * 	    - the names of the entity bean's local home and local
 * 	      interfaces, if any
 * 	    - the entity bean's implementation class
 * 	    - the optional entity bean's persistence management type. If
 *               this element is not specified it is defaulted to Container.
 * 	    - the entity bean's primary key class name
 * 	    - an indication of the entity bean's reentrancy
 * 	    - an optional specification of the
 * 	      entity bean's cmp-version
 * 	    - an optional specification of the entity bean's
 * 	      abstract schema name
 * 	    - an optional list of container-managed fields
 * 	    - an optional specification of the primary key
 * 	      field
 * 	    - an optional declaration of the bean's environment
 * 	      entries
 * 	    - an optional declaration of the bean's EJB
 * 	      references
 * 	    - an optional declaration of the bean's local
 * 	      EJB references
 * 	    - an optional declaration of the bean's web
 * 	      service references
 * 	    - an optional declaration of the security role
 * 	      references
 * 	    - an optional declaration of the security identity
 * 	      to be used for the execution of the bean's methods
 * 	    - an optional declaration of the bean's
 * 	      resource manager connection factory references
 * 	    - an optional declaration of the bean's
 * 	      resource environment references
 * 	    - an optional declaration of the bean's message
 * 	      destination references
 * 	    - an optional set of query declarations
 * 	      for finder and select methods for an entity
 * 	      bean with cmp-version 2.x.
 * 
 * 	The optional abstract-schema-name element must be specified
 * 	for an entity bean with container-managed persistence and
 * 	cmp-version 2.x.
 * 
 * 	The optional primkey-field may be present in the descriptor
 * 	if the entity's persistence-type is Container.
 * 
 * 	The optional cmp-version element may be present in the
 * 	descriptor if the entity's persistence-type is Container. If
 * 	the persistence-type is Container and the cmp-version
 * 	element is not specified, its value defaults to 2.x.
 * 
 * 	The optional home and remote elements must be specified if
 * 	the entity bean cmp-version is 1.x.
 * 
 * 	The optional home and remote elements must be specified if
 * 	the entity bean has a remote home and remote interface.
 * 
 * 	The optional local-home and local elements must be specified
 * 	if the entity bean has a local home and local interface.
 * 
 * 	Either both the local-home and the local elements or both
 * 	the home and the remote elements must be specified.
 * 
 * 	The optional query elements must be present if the
 * 	persistence-type is Container and the cmp-version is 2.x and
 * 	query methods other than findByPrimaryKey have been defined
 * 	for the entity bean.
 * 
 * 	The other elements that are optional are "optional" in the
 * 	sense that they are omitted if the lists represented by them
 * 	are empty.
 * 
 * 	At least one cmp-field element must be present in the
 * 	descriptor if the entity's persistence-type is Container and
 * 	the cmp-version is 1.x, and none must not be present if the
 * 	entity's persistence-type is Bean.
 * 
 *       
 * 
 * <p>Java class for entity-beanType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="entity-beanType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;group ref="{http://java.sun.com/xml/ns/javaee}descriptionGroup"/>
 *         &lt;element name="ejb-name" type="{http://java.sun.com/xml/ns/javaee}ejb-nameType"/>
 *         &lt;element name="mapped-name" type="{http://java.sun.com/xml/ns/javaee}xsdStringType" minOccurs="0"/>
 *         &lt;element name="home" type="{http://java.sun.com/xml/ns/javaee}homeType" minOccurs="0"/>
 *         &lt;element name="remote" type="{http://java.sun.com/xml/ns/javaee}remoteType" minOccurs="0"/>
 *         &lt;element name="local-home" type="{http://java.sun.com/xml/ns/javaee}local-homeType" minOccurs="0"/>
 *         &lt;element name="local" type="{http://java.sun.com/xml/ns/javaee}localType" minOccurs="0"/>
 *         &lt;element name="ejb-class" type="{http://java.sun.com/xml/ns/javaee}ejb-classType"/>
 *         &lt;element name="persistence-type" type="{http://java.sun.com/xml/ns/javaee}persistence-typeType"/>
 *         &lt;element name="prim-key-class" type="{http://java.sun.com/xml/ns/javaee}fully-qualified-classType"/>
 *         &lt;element name="reentrant" type="{http://java.sun.com/xml/ns/javaee}true-falseType"/>
 *         &lt;element name="cmp-version" type="{http://java.sun.com/xml/ns/javaee}cmp-versionType" minOccurs="0"/>
 *         &lt;element name="abstract-schema-name" type="{http://java.sun.com/xml/ns/javaee}java-identifierType" minOccurs="0"/>
 *         &lt;element name="cmp-field" type="{http://java.sun.com/xml/ns/javaee}cmp-fieldType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="primkey-field" type="{http://java.sun.com/xml/ns/javaee}string" minOccurs="0"/>
 *         &lt;group ref="{http://java.sun.com/xml/ns/javaee}jndiEnvironmentRefsGroup"/>
 *         &lt;element name="security-role-ref" type="{http://java.sun.com/xml/ns/javaee}security-role-refType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="security-identity" type="{http://java.sun.com/xml/ns/javaee}security-identityType" minOccurs="0"/>
 *         &lt;element name="query" type="{http://java.sun.com/xml/ns/javaee}queryType" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
public interface EntityBeanMetaData
{

   /**
    * Gets the value of the description property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the description property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getDescription().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link DescriptionMetaData }
    * 
    * 
    */
   List<DescriptionMetaData> getDescription();

   /**
    * Gets the value of the displayName property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the displayName property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getDisplayName().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link DisplayNameMetaData }
    * 
    * 
    */
   List<DisplayNameMetaData> getDisplayName();

   /**
    * Gets the value of the icon property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the icon property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getIcon().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link IconType }
    * 
    * 
    */
   List<IconType> getIcon();

   /**
    * Gets the value of the ejbName property.
    * 
    * @return
    *     possible object is
    *     {@link EjbNameType }
    *     
    */
   String getEjbName();

   /**
    * Sets the value of the ejbName property.
    * 
    * @param value
    *     allowed object is
    *     {@link EjbNameType }
    *     
    */
   void setEjbName(String value);

   /**
    * Gets the value of the mappedName property.
    * 
    * @return
    *     possible object is
    *     {@link XsdStringType }
    *     
    */
   String getMappedName();

   /**
    * Sets the value of the mappedName property.
    * 
    * @param value
    *     allowed object is
    *     {@link XsdStringType }
    *     
    */
   void setMappedName(String value);

   /**
    * Gets the value of the home property.
    * 
    * @return
    *     possible object is
    *     {@link HomeType }
    *     
    */
   String getHome();

   /**
    * Sets the value of the home property.
    * 
    * @param value
    *     allowed object is
    *     {@link HomeType }
    *     
    */
   void setHome(String value);

   /**
    * Gets the value of the remote property.
    * 
    * @return
    *     possible object is
    *     {@link RemoteType }
    *     
    */
   String getRemote();

   /**
    * Sets the value of the remote property.
    * 
    * @param value
    *     allowed object is
    *     {@link RemoteType }
    *     
    */
   void setRemote(String value);

   /**
    * Gets the value of the localHome property.
    * 
    * @return
    *     possible object is
    *     {@link LocalHomeType }
    *     
    */
   String getLocalHome();

   /**
    * Sets the value of the localHome property.
    * 
    * @param value
    *     allowed object is
    *     {@link LocalHomeType }
    *     
    */
   void setLocalHome(String value);

   /**
    * Gets the value of the local property.
    * 
    * @return
    *     possible object is
    *     {@link LocalType }
    *     
    */
   String getLocal();

   /**
    * Sets the value of the local property.
    * 
    * @param value
    *     allowed object is
    *     {@link LocalType }
    *     
    */
   void setLocal(String value);

   /**
    * Gets the value of the ejbClass property.
    * 
    * @return
    *     possible object is
    *     {@link EjbClassType }
    *     
    */
   String getEjbClass();

   /**
    * Sets the value of the ejbClass property.
    * 
    * @param value
    *     allowed object is
    *     {@link EjbClassType }
    *     
    */
   void setEjbClass(String value);

   /**
    * Gets the value of the persistenceType property.
    * 
    * @return
    *     possible object is
    *     {@link PersistenceTypeType }
    *     
    */
   String getPersistenceType();

   /**
    * Sets the value of the persistenceType property.
    * 
    * @param value
    *     allowed object is
    *     {@link PersistenceTypeType }
    *     
    */
   void setPersistenceType(String value);

   /**
    * Gets the value of the primKeyClass property.
    * 
    * @return
    *     possible object is
    *     {@link FullyQualifiedClassType }
    *     
    */
   String getPrimKeyClass();

   /**
    * Sets the value of the primKeyClass property.
    * 
    * @param value
    *     allowed object is
    *     {@link FullyQualifiedClassType }
    *     
    */
   void setPrimKeyClass(String value);

   /**
    * Gets the value of the reentrant property.
    * 
    * @return
    *     possible object is
    *     {@link TrueFalseType }
    *     
    */
   boolean getReentrant();

   /**
    * Sets the value of the reentrant property.
    * 
    * @param value
    *     allowed object is
    *     {@link TrueFalseType }
    *     
    */
   void setReentrant(boolean value);

   /**
    * Gets the value of the cmpVersion property.
    * 
    * @return
    *     possible object is
    *     {@link CmpVersionType }
    *     
    */
   String getCmpVersion();

   /**
    * Sets the value of the cmpVersion property.
    * 
    * @param value
    *     allowed object is
    *     {@link CmpVersionType }
    *     
    */
   void setCmpVersion(String value);

   /**
    * Gets the value of the abstractSchemaName property.
    * 
    * @return
    *     possible object is
    *     {@link JavaIdentifierType }
    *     
    */
   String getAbstractSchemaName();

   /**
    * Sets the value of the abstractSchemaName property.
    * 
    * @param value
    *     allowed object is
    *     {@link JavaIdentifierType }
    *     
    */
   void setAbstractSchemaName(String value);

   /**
    * Gets the value of the cmpField property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the cmpField property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getCmpField().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link CmpFieldMetaData }
    * 
    * 
    */
   List<CmpFieldMetaData> getCmpField();

   /**
    * Gets the value of the primkeyField property.
    * 
    * @return
    *     possible object is
    *     {@link com.sun.java.xml.ns.javaee.String }
    *     
    */
   String getPrimkeyField();

   /**
    * Sets the value of the primkeyField property.
    * 
    * @param value
    *     allowed object is
    *     {@link com.sun.java.xml.ns.javaee.String }
    *     
    */
   void setPrimkeyField(String value);

   /**
    * Gets the value of the envEntry property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the envEntry property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getEnvEntry().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link EnvEntryMetaData }
    * 
    * 
    */
   List<EnvEntryMetaData> getEnvEntry();

   /**
    * Gets the value of the ejbRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the ejbRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getEjbRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link EjbRefMetaData }
    * 
    * 
    */
   List<EjbRefMetaData> getEjbRef();

   /**
    * Gets the value of the ejbLocalRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the ejbLocalRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getEjbLocalRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link EjbLocalRefMetaData }
    * 
    * 
    */
   List<EjbLocalRefMetaData> getEjbLocalRef();

   /**
    * Gets the value of the serviceRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the serviceRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getServiceRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link ServiceRefMetaData }
    * 
    * 
    */
   List<ServiceRefMetaData> getServiceRef();

   /**
    * Gets the value of the resourceRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the resourceRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getResourceRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link ResourceRefMetaData }
    * 
    * 
    */
   List<ResourceRefMetaData> getResourceRef();

   /**
    * Gets the value of the resourceEnvRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the resourceEnvRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getResourceEnvRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link ResourceEnvRefMetaData }
    * 
    * 
    */
   List<ResourceEnvRefMetaData> getResourceEnvRef();

   /**
    * Gets the value of the messageDestinationRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the messageDestinationRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getMessageDestinationRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link MessageDestinationRefMetaData }
    * 
    * 
    */
   List<MessageDestinationRefMetaData> getMessageDestinationRef();

   /**
    * Gets the value of the persistenceContextRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the persistenceContextRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getPersistenceContextRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link PersistenceContextRefMetaData }
    * 
    * 
    */
   List<PersistenceContextRefMetaData> getPersistenceContextRef();

   /**
    * Gets the value of the persistenceUnitRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the persistenceUnitRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getPersistenceUnitRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link PersistenceUnitRefMetaData }
    * 
    * 
    */
   List<PersistenceUnitRefMetaData> getPersistenceUnitRef();

   /**
    * Gets the value of the postConstruct property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the postConstruct property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getPostConstruct().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link LifecycleCallbackMetaData }
    * 
    * 
    */
   List<LifecycleCallbackMetaData> getPostConstruct();

   /**
    * Gets the value of the preDestroy property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the preDestroy property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getPreDestroy().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link LifecycleCallbackMetaData }
    * 
    * 
    */
   List<LifecycleCallbackMetaData> getPreDestroy();

   /**
    * Gets the value of the securityRoleRef property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the securityRoleRef property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getSecurityRoleRef().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link SecurityRoleRefMetaData }
    * 
    * 
    */
   List<SecurityRoleRefMetaData> getSecurityRoleRef();

   /**
    * Gets the value of the securityIdentity property.
    * 
    * @return
    *     possible object is
    *     {@link SecurityIdentityMetaData }
    *     
    */
   SecurityIdentityMetaData getSecurityIdentity();

   /**
    * Sets the value of the securityIdentity property.
    * 
    * @param value
    *     allowed object is
    *     {@link SecurityIdentityMetaData }
    *     
    */
   void setSecurityIdentity(SecurityIdentityMetaData value);

   /**
    * Gets the value of the query property.
    * 
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the query property.
    * 
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getQuery().add(newItem);
    * </pre>
    * 
    * 
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link QueryMetaData }
    * 
    * 
    */
   List<QueryMetaData> getQuery();

   /**
    * Gets the value of the id property.
    * 
    * @return
    *     possible object is
    *     {@link java.lang.String }
    *     
    */
   java.lang.String getId();

   /**
    * Sets the value of the id property.
    * 
    * @param value
    *     allowed object is
    *     {@link java.lang.String }
    *     
    */
   void setId(java.lang.String value);

}
