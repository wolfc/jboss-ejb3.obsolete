//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2009.06.08 at 07:12:16 PM IST
//

package org.jboss.ejb3.metadata.spi.javaee;

import java.util.List;

/**
 *  Represents the metadata for the resource-ref element
 *
 *
 * 	  The resource-refType contains a declaration of a
 * 	  Deployment Component's reference to an external resource. It
 * 	  consists of an optional description, the resource manager
 * 	  connection factory reference name, an optional indication of
 * 	  the resource manager connection factory type expected by the
 * 	  Deployment Component code, an optional type of authentication
 * 	  (Application or Container), and an optional specification of
 * 	  the shareability of connections obtained from the resource
 * 	  (Shareable or Unshareable).
 *
 * 	  It also includes optional elements to define injection of
 * 	  the named resource into fields or JavaBeans properties.
 *
 * 	  The connection factory type must be supplied unless an
 * 	  injection target is specified, in which case the type
 * 	  of the target is used.  If both are specified, the type
 * 	  must be assignment compatible with the type of the injection
 * 	  target.
 *
 * 	  Example:
 *
 * 	  <resource-ref>
 * 	      <res-ref-name>jdbc/EmployeeAppDB</res-ref-name>
 * 	      <res-type>javax.sql.DataSource</res-type>
 * 	      <res-auth>Container</res-auth>
 * 	      <res-sharing-scope>Shareable</res-sharing-scope>
 * 	  </resource-ref>
 *
 *
 *
 *
 * <p>Java class for resource-refType complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="resource-refType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="description" type="{http://java.sun.com/xml/ns/javaee}descriptionType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="res-ref-name" type="{http://java.sun.com/xml/ns/javaee}jndi-nameType"/>
 *         &lt;element name="res-type" type="{http://java.sun.com/xml/ns/javaee}fully-qualified-classType" minOccurs="0"/>
 *         &lt;element name="res-auth" type="{http://java.sun.com/xml/ns/javaee}res-authType" minOccurs="0"/>
 *         &lt;element name="res-sharing-scope" type="{http://java.sun.com/xml/ns/javaee}res-sharing-scopeType" minOccurs="0"/>
 *         &lt;group ref="{http://java.sun.com/xml/ns/javaee}resourceGroup"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
public interface ResourceRefMetaData extends IdMetaData
{

   /**
    * Gets the value of the description property.
    *
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the description property.
    *
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getDescription().add(newItem);
    * </pre>
    *
    *
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link DescriptionMetaData }
    *
    *
    */
   List<DescriptionMetaData> getDescription();

   /**
    * @return Returns the resource reference name
    *
    */
   String getResRefName();

   /**
    * Sets the resource reference name
    *
    * @param resourceRefName The resource ref name
    *
    */
   void setResRefName(String resourceRefName);

   /**
    * @return Returns the fully qualified classname of the resource ref type
    *
    */
   String getResType();

   /**
    * Sets the fully qualified classname of the resource reference type
    *
    * @param resourceRefType Fully qualified classname of the resource ref type
    *
    */
   void setResType(String resourceRefType);

   /**
    *
    * @return Returns the resource authentication type of this resource reference
    *
    */
   ResourceAuthenticationType getResAuth();

   /**
    * Sets the resource authentication type of this resource reference
    *
    * @param resAuthType The resource authentication type
    *
    */
   void setResAuth(ResourceAuthenticationType resAuthType);

   /**
    *
    * @return Returns the resource sharing scope type of this resource reference
    */
   ResourceSharingScopeType getResSharingScope();

   /**
    * Sets the resource sharing scope type
    *
    * @param resourceSharingScope The resource sharing scope type
    *
    */
   void setResSharingScope(ResourceSharingScopeType resourceSharingScope);

   /**
    * Returns the mapped-name of the resource reference.
    * Returns null if the mapped-name is not set
    *
    */
   String getMappedName();

   /**
    * Sets the mapped-name of the resource reference
    *
    * @param mappedName mapped-name of the resource reference
    */
   void setMappedName(String mappedName);

   /**
    * Returns a list of injection target(s) metadata for
    * this resource reference
    * Returns an empty list if there is no injection-target.
    *
    * It's upto the implementation to return either a modifiable
    * or an unmodifiable list.
    */
   List<InjectionTargetMetaData> getInjectionTargets();

   /**
    * Sets the list of injection targets for this resource reference
    *
    * @param injectionTargets List of injection targets metadata for this resource reference
    */
   void setInjectionTargets(List<InjectionTargetMetaData> injectionTargets);

}
