//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2009.06.08 at 07:12:16 PM IST
//

package org.jboss.ejb3.metadata.spi.javaee;

import java.util.List;

/**
 * Represents the metadata for the env-entry element of a bean
 *
 * 	The env-entryType is used to declare an application's
 * 	environment entry. The declaration consists of an optional
 * 	description, the name of the environment entry, a type
 * 	(optional if the value is injected, otherwise required), and
 * 	an optional value.
 *
 * 	It also includes optional elements to define injection of
 * 	the named resource into fields or JavaBeans properties.
 *
 * 	If a value is not specified and injection is requested,
 * 	no injection will occur and no entry of the specified name
 * 	will be created.  This allows an initial value to be
 * 	specified in the source code without being incorrectly
 * 	changed when no override has been specified.
 *
 * 	If a value is not specified and no injection is requested,
 * 	a value must be supplied during deployment.
 *
 * 	This type is used by env-entry elements.
 *
 *
 *
 * <p>Java class for env-entryType complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="env-entryType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="description" type="{http://java.sun.com/xml/ns/javaee}descriptionType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="env-entry-name" type="{http://java.sun.com/xml/ns/javaee}jndi-nameType"/>
 *         &lt;element name="env-entry-type" type="{http://java.sun.com/xml/ns/javaee}env-entry-type-valuesType" minOccurs="0"/>
 *         &lt;element name="env-entry-value" type="{http://java.sun.com/xml/ns/javaee}xsdStringType" minOccurs="0"/>
 *         &lt;group ref="{http://java.sun.com/xml/ns/javaee}resourceGroup"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 *
 *
 */
public interface EnvEntryMetaData extends IdMetaData
{

   /**
    * Gets the value of the description property.
    *
    * <p>
    * This accessor method returns a reference to the live list,
    * not a snapshot. Therefore any modification you make to the
    * returned list will be present inside the JAXB object.
    * This is why there is not a <CODE>set</CODE> method for the description property.
    *
    * <p>
    * For example, to add a new item, do as follows:
    * <pre>
    *    getDescription().add(newItem);
    * </pre>
    *
    *
    * <p>
    * Objects of the following type(s) are allowed in the list
    * {@link DescriptionMetaData }
    *
    *
    */
   List<DescriptionMetaData> getDescription();

   /**
    * Returns the env-entry-name of the env-entry
    *
    * The env-entry-name element contains the name of a
    *      component's environment entry.  The name is a JNDI
    *      name relative to the java:comp/env context.  The
    *      name must be unique within an component.
    */
   String getEnvEntryName();

   /**
    * Sets the env-entry-name of the env-entry
    *
    * @param name env-entry-name
    */
   void setEnvEntryName(String name);

   /**
    * Returns the fully qualified classname of the type of the env-entry
    *
    */
   String getEnvEntryType();

   /**
    * Sets the fully qualified classname of the type of the env-entry
    *
    * @param envEntryType The env-entry type
    *
    */
   void setEnvEntryType(String envEntryType);

   /**
    * Returns the value of this env-entry
    *
    */
   String getEnvEntryValue();

   /**
    * Sets the value of this entry.
    *
    * @param value The value of the env-entry
    */
   void setEnvEntryValue(String value);

   /**
    * Returns the mapped-name of this env-entry
    *
    */
   String getMappedName();

   /**
    * Sets the mapped-name of this env-entry
    *
    * @param mappedName The mapped-name of this env-entry
    *
    */
   void setMappedName(String mappedName);

   /**
    * Returns a list of injection target(s) metadata for
    * this env-entry
    * Returns an empty list if there is no injection-target.
    *
    * It's upto the implementation to return either a modifiable
    * or an unmodifiable list.
    */
   List<InjectionTargetMetaData> getInjectionTargets();

   /**
    * Sets the list of injection targets for this env-entry
    *
    * @param injectionTargets List of injection targets metadata for this env-entry
    */
   void setInjectionTargets(List<InjectionTargetMetaData> injectionTargets);


}
