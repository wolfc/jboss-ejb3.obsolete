//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.06.08 at 07:12:16 PM IST 
//

package org.jboss.ejb3.metadata.spi.jboss;

import java.util.List;

import org.jboss.ejb3.metadata.spi.javaee.IdMetaData;

/**
 * 
 *                  
 *   Runtime settings for a web service reference. In the simplest case,
 *   there is no runtime information required for a service ref.  Runtime info
 *   is only needed in the following cases :
 * 
 *   * to define the port that should be used to resolve a container-managed port
 *   * to define default Stub property settings for Stub objects
 *   * to define the URL of a final WSDL document to be used
 * 
 *   Example:
 * 
 *   <service-ref>
 *    <service-ref-name>OrganizationService</service-ref-name>
 *    <wsdl-override>file:/wsdlRepository/organization-service.wsdl</wsdl-override>
 *   </service-ref>
 * 
 *   <service-ref>
 *    <service-ref-name>OrganizationService</service-ref-name>
 *    <config-name>Secure Client Config</config-name>
 *    <config-file>META-INF/jbossws-client-config.xml</config-file>
 *    <handler-chain>META-INF/jbossws-client-handlers.xml</handler-chain>
 *   </service-ref>
 * 
 *   <service-ref>
 *    <service-ref-name>SecureService</service-ref-name>
 *    <service-impl-class>org.jboss.tests.ws.jaxws.webserviceref.SecureEndpointService</service-impl-class>
 *    <service-qname>{http://org.jboss.ws/wsref}SecureEndpointService</service-qname>
 *     <port-component-ref>
 *      <service-endpoint-interface>org.jboss.tests.ws.jaxws.webserviceref.SecureEndpoint</service-endpoint-interface>
 *      <port-qname>{http://org.jboss.ws/wsref}SecureEndpointPort</port-qname>
 *      <stub-property>
 *       <name>javax.xml.ws.security.auth.username</name>
 *       <value>kermit</value>
 *      </stub-property>
 *      <stub-property>
 *       <name>javax.xml.ws.security.auth.password</name>
 *       <value>thefrog</value>
 *      </stub-property>
 *    </port-component-ref>
 *   </service-ref>
 *     
 *          
 * 
 * <p>Java class for service-refType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="service-refType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="service-ref-name" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="service-impl-class" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="service-qname" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="config-name" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="config-file" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="handler-chain" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="port-component-ref" type="{http://www.jboss.com/xml/ns/javaee}port-component-refType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="wsdl-override" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
public interface JBossServiceRefMetaData extends IdMetaData
{

   /**
    * @return Returns the service reference name
    *     
    */
   String getServiceRefName();

   /**
    * Sets the service ref name
    * @param serviceRefName    
    *     
    */
   void setServiceRefName(String serviceRefName);

   /**
    * 
    * @return Returns the service implementation class
    *     
    */
   String getServiceImplClass();

   /**
    * Sets the service implementation class
    * @param serviceImplClass
    */
   void setServiceImplClass(String serviceImplClass);

   /**
    * @return Returns the service QName
    *     
    */
   String getServiceQname();

   /**
    * Sets the service QName
    * @param serviceQName
    *     
    */
   void setServiceQname(String serviceQName);

   /**
    * @return Returns the config name
    *     
    */
   String getConfigName();

   /**
    * Sets the config name
    * 
    * @param configName
    *     
    */
   void setConfigName(String configName);

   /**
    * 
    * @return Returns the service config file
    *     
    */
   String getConfigFile();

   /**
    * Sets the value of the configFile property.
    * 
    * @param value
    *     allowed object is
    *     {@link String }
    *     
    */
   void setConfigFile(String configFile);

   /**
    * @return Returns the handler chain
    *     
    */
   String getHandlerChain();

   /**
    * Sets the handler chain
    * 
    * @param handlerChain 
    *     
    */
   void setHandlerChain(String handlerChain);

   /**
    * @return Returns the port component references
    * 
    * 
    */
   List<JBossPortComponentRefMetaData> getPortComponentRefs();
   
   /**
    * Sets the port component refs
    * 
    * @param portComponentRefs
    */
   void setPortComponentRefs(List<JBossPortComponentRefMetaData> portComponentRefs);

   /**
    * @return Returns the wsdl override
    */
   String getWsdlOverride();

   /**
    * Sets the wsdl override
    * @param wsdlOverride
    *     
    */
   void setWsdlOverride(String wsdlOverride);

   

}
