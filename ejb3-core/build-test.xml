<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [
   <!ENTITY libraries SYSTEM "../thirdparty/libraries.ent">
   <!ENTITY modules SYSTEM "../tools/etc/buildmagic/modules.ent">
]>

<!-- ====================================================================== -->
<!--                                                                        -->
<!--  JBoss, the OpenSource J2EE webOS                                      -->
<!--                                                                        -->
<!--  Distributable under LGPL license.                                     -->
<!--  See terms of license at http://www.gnu.org.                           -->
<!--                                                                        -->
<!-- ====================================================================== -->

<!-- $Id$ -->


<project default="main" name="JBoss/EJB3 Tests">
   <import file="../tools/etc/buildmagic/build-common.xml"/>
   &libraries;
   &modules;

   <!-- ======================================================== -->
   <!-- Initialization                                           -->
   <!-- ======================================================== -->
   <tstamp>
      <format property="TIMENOW" pattern="yyyy-MM-dd.HH-mm" timezone="GMT"/>
   </tstamp>
   <echo message="${TIMENOW}" file="run.tstamp"/>

   <property name="results_web" value="http://jboss.sourceforge.net/junit-results/32"/>
   <property name="buildlog.level" value="info" />
   <property environment="env"/>

   <!-- Set a hostname property based on COMPUTERNAME for win32, HOSTNAME
   otherwise and initialize the node0/node1 cluster hostnames to localhost
   and ${hostname} by default. If you cannot route multicast traffic between
   localhost and hostname, then you need to specify node0 and node1 binding
   in the local.properties that can in order to be able to run the clustering
   tests.
   -->
   <condition property="hostname" value="${env.COMPUTERNAME}">
      <os family="windows"/>
   </condition>
   <condition property="hostname" value="${env.HOSTNAME}">
      <not>
         <os family="windows"/>
      </not>
   </condition>

   <!--We will use local.properties file to provide some configuration
       to the testsuite mainly for the Clustering framework. Please
       do not checkin your local.properties file into CVS-->
   <property file="local.properties"/>

   <!-- Cluster node0 defaults -->
   <property name="node0" value="${env.MYTESTIP_1}" />
   <property name="node0.http.url" value="http://${node0}:8080" />
   <property name="node0.jndi.url" value="jnp://${node0}:1099" />
   <property name="node1" value="${env.MYTESTIP_2}" />
   <property name="node1.http.url" value="http://${node1}:8080" />
   <property name="node1.jndi.url" value="jnp://${node1}:1099" />


   <!-- Import the jboss server run targets -->
   <import file="../testsuite/imports/server-config.xml"/>
   <!-- Propagate the dist directory as a jbosstest system property -->
   <property name="jbosstest.dist" value="${jboss.dist}"/>

   <macrodef name="wait-on-host">
      <attribute name="seconds" default="${jboss.startup.timeout}"/>
      <attribute name="host" default="${node0}"/>
      <sequential>
         <echo>Waiting for @{host} to start (max wait @{seconds} seconds)...</echo>
         <waitfor maxwait="@{seconds}" maxwaitunit="second"
            checkevery="5" checkeveryunit="second" timeoutproperty="startup.timeout">
            <http url="http://@{host}:8080/"/>
         </waitfor>
         <fail message="Timeout waiting for nodes to start" if="startup.timeout"/>
      </sequential>
   </macrodef>

   <macrodef name="wait-on-shutdown">
      <attribute name="seconds" default="60"/>
      <attribute name="conf"/>
      <sequential>
         <echo message="Waiting for '@{conf}' server to stop..."/>
         <waitfor maxwait="@{seconds}" maxwaitunit="second"
            checkevery="5" checkeveryunit="second" timeoutproperty="shutdown.timeout">
            <available file="server.log">
               <filepath>
                  <fileset dir="${jboss.dist}/server/@{conf}/log/" includes="server.log">
                     <contains text="[org.jboss.system.server.Server] Shutdown complete"/>
                  </fileset>
               </filepath>
            </available>
         </waitfor>
         <fail message="Timeout waiting for '@{conf}' server to shutdown." if="shutdown.timeout"/>
      </sequential>
   </macrodef>

   <!-- =================== -->
   <!-- Basic Configuration -->
   <!-- =================== -->

   <!-- Module name(s) & version -->
   <property name="module.name" value="ejb3"/>
   <property name="module.Name" value="JBoss Testsuite"/>
   <property name="module.version" value="DEV"/>


   <!-- ========= -->
   <!-- Libraries -->
   <!-- ========= -->
   
   <path id="arjuna.classpath">
      <pathelement path="${module.source}/resources/test-configs/arjuna/lib/jbossjts.jar"/>
   	  <pathelement path="${module.source}/resources/test-configs/arjuna/lib/jbossjts-integration.jar"/>
   	  <pathelement path="${module.source}/resources/test-configs/arjuna/lib/jbossjts-jacorb.jar"/>
   	  <pathelement path="${module.source}/resources/test-configs/arjuna/lib/jbossts-common.jar"/>
   </path>

   <!-- The combined library classpath -->
   <path id="library.classpath">
      <path refid="sun.jaf.classpath"/>
      <path refid="sun.servlet.classpath"/>
      <path refid="javassist.classpath"/>
      <path refid="qdox.classpath"/>
      <path refid="hibernate3.classpath"/>
      <path refid="ejb3-persistence.classpath"/>
      <path refid="dom4j.dom4j.classpath"/>
      <path refid="javassist.classpath"/>
      <path refid="trove.classpath"/>
      <path refid="xdoclet.xdoclet.classpath"/>
      <path refid="apache.ant.classpath"/>
      <path refid="oswego.concurrent.classpath"/>
      <path refid="junit.junit.classpath"/>
      <path refid="apache.log4j.classpath"/>
      <path refid="apache.xerces.classpath"/>
      <path refid="jboss.remoting.classpath"/>
      <path refid="jgroups.jgroups.classpath"/>
      <path refid="apache.httpclient.classpath"/>
      <path refid="apache.logging.classpath"/>
      <path refid="sun.javamail.classpath"/>
      <path refid="jboss.serialization.classpath"/>
      <path refid="jboss.jbossws.classpath"/>
      <path refid="quartz.quartz.classpath"/>
      <path refid="jboss.microcontainer.classpath"/>
      <path refid="jboss.jbossxb.classpath"/>
      <path refid="arjuna.classpath"/>
      <path refid="hsqldb.hsqldb.classpath"/>
   </path>

   <!-- ======= -->
   <!-- Modules -->
   <!-- ======= -->

   <!-- ======= -->
   <!-- Modules -->
   <!-- ======= -->
   <!-- InternalServer -->
   <!-- This could be a mistake.  Perhaps, though, it would be a good idea to separate
   tests that need internal jboss classes from those that don't.  When I put it in, only
   the jca XATxConnectionManagerUnitTestCase needed an internal class (the tx manager)-->
   <property name="jboss.internal-server.root" value="${project.root}/server/output"/>
   <property name="jboss.internal-server.lib" value="${jboss.internal-server.root}/lib"/>
   <path id="jboss.internal-server.classpath">
      <pathelement path="${jboss.server.lib}/jboss.jar"/>
      <pathelement path="${jboss.server.lib}/jboss-system.jar"/>
   </path>

   <!-- The combined dependent module classpath -->
   <path id="dependentmodule.classpath">
      <path refid="jboss.j2ee.classpath"/>
      <path refid="jboss.j2se.classpath"/>
      <path refid="jboss.aop.classpath"/>
      <path refid="jboss.aspects.classpath"/>
      <path refid="jboss.ejb3x.classpath"/>
      <path refid="jboss.common.core.classpath"/>
      <path refid="jboss.common.logging.spi.classpath"/>
      <path refid="jboss.common.logging.log4j.classpath"/>
      <path refid="jboss.common.logging.jdk.classpath"/>
      <path refid="jboss.cache.classpath"/>
      <path refid="jboss.cluster.classpath"/>
      <path refid="jboss.system.classpath"/>
      <path refid="jboss.systemjmx.classpath"/>
      <path refid="jboss.naming.classpath"/>
      <path refid="jboss.transaction.classpath"/>
      <path refid="jboss.security.classpath"/>
      <!-- this is for the NonSerializableFactory -->
      <path refid="jboss.server.classpath"/>
      <path refid="jboss.mq.classpath"/>
      <path refid="jboss.test.classpath"/>
      <path refid="jboss.ejb3.classpath"/>
      <path refid="jboss.embedded.classpath"/>
      <path refid="arjuna.classpath"/>
      <!--path refid="jboss.webservice.classpath"/-->
   </path>

   <!-- RMI Stub generation -->

   <!-- ===== -->
   <!-- Tasks -->
   <!-- ===== -->

   <!-- Where source files live -->
   <property name="source.java" value="${module.source}/test"/>
   <property name="source.etc" value="${module.source}/etc"/>
   <property name="resources" value="${module.source}/resources"/>
   <property name="source.stylesheets" value="../testsuite/src/stylesheets"/>

   <!-- Where build generated files will go -->
   <property name="build.reports" value="${module.output}/reports"/>
   <property name="build.testlog" value="${module.output}/log"/>
   <property name="build.classes" value="${module.output}/test-classes"/>
   <property name="build.lib" value="${module.output}/test-lib"/>
   <property name="build.ejb3.lib" value="${module.output}/lib"/>
   <property name="build.api" value="${module.output}/api"/>
   <property name="build.etc" value="${module.output}/etc"/>
   <property name="build.stylesheets" value="${module.output}/stylesheets"/>
   <!-- build.resources is needed for the test-configs directory used by the create-config macro -->
   <property name="build.resources" value="${module.source}/resources"/>

   <!-- Install/Release structure -->
   <property name="install.id" value="${module.name}-${module.version}"/>
   <property name="release.id" value="${install.id}"/>
   <property name="install.root" value="${module.output}/${install.id}"/>

   <!-- The combined thirdparty classpath -->
   <path id="thirdparty.classpath">
      <path refid="library.classpath"/>
      <path refid="dependentmodule.classpath"/>
   </path>

   <!-- This module is based on Java 1.2 -->
   <property name="javac.target" value="1.2"/>

   <!-- classpath and local.classpath must have a value using with a path -->
   <property name="classpath" value=""/>
   <property name="local.classpath" value=""/>

   <!-- The classpath required to build classes. -->
   <path id="javac.classpath">
      <pathelement path="${classpath}"/>
      <!--pathelement path="${resources}/test/seam/jboss-seam.jar"/-->
      <pathelement path="${local.classpath}"/>
      <path refid="thirdparty.classpath"/>
   </path>

   <path id="client.classpath">
      <path refid="apache.log4j.classpath"/>
      <path refid="apache.logging.classpath"/>
      <path refid="jboss.test.classpath"/>
      <path refid="sun.servlet.classpath"/>
      <pathelement path="${jboss.dist}/client/jbossall-client.jar"/>
      <pathelement path="${jboss.dist}/client/jboss-ejb3-client.jar"/>
   </path>

   <!-- The "security" test needs JaasSecurityManagerServiceMBean -->
   <path id="security.client.classpath">
      <path refid="client.classpath"/>
      <path refid="jboss.security.classpath"/>
      <path refid="jboss.j2se.classpath"/>
   </path>

   <path id="dd.classpath">
      <path refid="client.classpath"/>
      <!-- This test accesses some ejb3 classes directly -->
      <path refid="jboss.ejb3.classpath"/>
   </path>
   
   <path id="arjuna.client.classpath">
      <path refid="client.classpath"/>
      <path refid="arjuna.classpath"/>
   </path>
   
   <path id="dd.web.client.classpath">
      <path refid="client.classpath"/>
      <path refid="apache.httpclient.classpath"/>
   </path>

   <path id="iiop.client.classpath">
      <pathelement path="${resources}/test/iiop"/>
      <path refid="client.classpath"/>
   </path>
   
   <!-- The classpath required to build javadocs. -->
   <path id="javadoc.classpath">
      <path refid="javac.classpath"/>
   </path>

   <!-- Packages to include when generating api documentation -->
   <property name="javadoc.packages" value="javax.*"/>

   <!-- Override JUnit defaults -->
   <property name="jbosstest.iterationcount" value="10"/>
   <property name="jbosstest.threadcount" value="5"/>
   <property name="jbosstest.beancount" value="5"/>
   <property name="jbosstest.nodeploy" value="false"/>

   <target name="init">
      <record name="${basedir}/build.log" append="yes" action="start" loglevel="error"/>
      <!-- Setup the version 1 classes so the tests compile -->
   </target>

   <!-- ================================================================== -->
   <!-- Compile                                                            -->
   <!-- ================================================================== -->

   <!--
      | Compile everything.
      |
      | This target should depend on other compile-* targets for each
      | different type of compile that needs to be performed, short of
      | documentation compiles.
    -->

   <!-- Compile all class files -->
   <target name="compile-classes" depends="init">
      <mkdir dir="${build.classes}"/>
      <javac destdir="${build.classes}"
         optimize="${javac.optimize}"
         debug="${javac.debug}"
         source="1.5"
         target="1.5"
         depend="${javac.depend}"
         verbose="${javac.verbose}"
         deprecation="${javac.deprecation}"
         includeAntRuntime="${javac.include.ant.runtime}"
         includeJavaRuntime="${javac.include.java.runtime}"
         failonerror="${javac.fail.onerror}">
         <src path="${project.root}/testsuite/src/main"/>
         <classpath refid="javac.classpath"/>
         <include name="org/jboss/test/*.java"/>
      </javac>
      <javac destdir="${build.classes}"
         optimize="${javac.optimize}"
         debug="${javac.debug}"
         source="1.5"
         target="1.5"
         depend="${javac.depend}"
         verbose="${javac.verbose}"
         deprecation="${javac.deprecation}"
         includeAntRuntime="${javac.include.ant.runtime}"
         includeJavaRuntime="${javac.include.java.runtime}"
         failonerror="${javac.fail.onerror}">
         <src path="${source.java}"/>
         <classpath refid="javac.classpath"/>
      </javac>
   </target>

   <target name="compile-stylesheets">
      <mkdir dir="${build.stylesheets}"/>
      <copy todir="${build.stylesheets}" filtering="yes">
         <fileset dir="${source.stylesheets}">
            <include name="**/*"/>
         </fileset>
      </copy>
   </target>
   <!-- ================================================================== -->
   <!-- Archives                                                           -->
   <!-- ================================================================== -->

   <target name="initial"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/initial-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/initial/Test.class"/>
            <include name="org/jboss/ejb3/test/initial/TestLocal.class"/>
            <include name="org/jboss/ejb3/test/initial/TestRemote.class"/>
            <include name="org/jboss/ejb3/test/initial/TestBean.class"/>
            <include name="org/jboss/ejb3/test/initial/StatefulTest.class"/>
            <include name="org/jboss/ejb3/test/initial/StatefulTestBean.class"/>
            <include name="org/jboss/ejb3/test/initial/StatefulTestLocal.class"/>
            <include name="org/jboss/ejb3/test/initial/StatefulTestRemote.class"/>
            <include name="org/jboss/ejb3/test/initial/SecuredTest.class"/>
            <include name="org/jboss/ejb3/test/initial/SecuredTestRemote.class"/>
            <include name="org/jboss/ejb3/test/initial/SecuredTestLocal.class"/>
            <include name="org/jboss/ejb3/test/initial/SecuredTestBean.class"/>

            <include name="org/jboss/ejb3/test/initial/FirstInterceptor.class"/>
            <include name="org/jboss/ejb3/test/initial/InterceptedSFTest.class"/>
            <include name="org/jboss/ejb3/test/initial/InterceptedSFTestBean.class"/>
            <include name="org/jboss/ejb3/test/initial/InterceptedSLTest.class"/>
            <include name="org/jboss/ejb3/test/initial/InterceptedSLTestBean.class"/>
            <include name="org/jboss/ejb3/test/initial/SecondInterceptor.class"/>
            <include name="org/jboss/ejb3/test/initial/TestStatus.class"/>
            <include name="org/jboss/ejb3/test/initial/TestStatusBean.class"/>
            <include name="org/jboss/ejb3/test/initial/ExternalCallbackListener.class"/>
            <include name="org/jboss/ejb3/test/initial/ClassInjected.class"/>
            <include name="org/jboss/ejb3/test/initial/ClassInjectedBean.class"/>
         </fileset>
         <fileset dir="${resources}/test/initial">
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
      </jar>


      <jar jarfile="${build.lib}/initial-ejb3-test.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/initial/Tester*.class"/>
            <include name="org/jboss/ejb3/test/initial/TxTester*.class"/>
            <include name="org/jboss/ejb3/test/initial/SecurityTester*.class"/>
         </fileset>
         <fileset dir="${resources}/test">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
         <fileset dir="${build.lib}">
            <include name="initial-test.jar"/>
         </fileset>
      </jar>
   </target>

   <target name="jca/inflowmdb"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/quartzmdb.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/jca/inflowmdb/Quartz*.class"/>
            <include name="org/jboss/ejb3/test/jca/inflowmdb/unit/*.class"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/jcainflowmdb.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/jca/inflowmdb/Test*.class"/>
            <include name="org/jboss/ejb3/test/jca/inflowmdb/unit/*.class"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/jmsinflowmdb.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/jca/inflowmdb/JMS*.class"/>
            <include name="org/jboss/ejb3/test/jca/inflowmdb/Stateless*.class"/>
            <include name="org/jboss/ejb3/test/jca/inflowmdb/unit/*.class"/>
         </fileset>
         <fileset dir="${build.resources}/test/jca/inflow">
            <include name="jmsmdbtest-service.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/jcainflowmdb_dd.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/jca/inflowmdb/DeploymentDescriptorTest*.class"/>
         </fileset>
         <fileset dir="${resources}/test/jca/inflow">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/jcainflow.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/jca/inflow/*.class"/>
         </fileset>
      </jar>
      
      <jar jarfile="${build.lib}/jcainflow.rar">
         <fileset dir="${build.lib}">
            <include name="jcainflow.jar"/>
         </fileset>
         <fileset dir="${resources}/test/jca/inflow">
            <include name="META-INF/ra.xml"/>
         </fileset>
      </jar>

      <copy todir="${build.lib}">
         <fileset dir="${resources}/test/jca/inflow">
            <include name="*.xml"/>
         </fileset>
      </copy>
      
      <copy todir="${build.lib}/embeddable/standalone">
         <fileset dir="${build.lib}">
            <include name="jmsinflowmdb.jar"/>
            <include name="jcainflowmdb.jar"/>
            <include name="quartzmdb.jar"/>
         </fileset>
      </copy>

      <copy todir="${build.ejb3.lib}/embeddable/lib">
         <fileset dir="${build.lib}">
            <include name="jcainflow.jar"/>
            <include name="jcainflow.rar"/>
         </fileset>
      </copy>
   </target>

   <target name="cache"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/cache-test.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/cache/Tester*.class"/>
         </fileset>
         <fileset dir="${resources}/test/cache">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/cache-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/cache/**/*.class"/>
            <exclude name="org/jboss/ejb3/test/cache/unit/*"/>
         </fileset>
      </jar>

      <copy todir="${build.lib}">
         <fileset dir="${resources}/test/cache">
            <include name="*.xml"/>
         </fileset>
      </copy>


   </target>

   <target name="factory"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/session1.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/factory/*1*.class"/>
         </fileset>
         <fileset dir="${resources}/test/factory/session1">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/session2.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/factory/*2*.class"/>
            <include name="org/jboss/ejb3/test/factory/MyService*.class"/>
         </fileset>
         <fileset dir="${resources}/test/factory/session2">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/util.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/factory/Util.class"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/factory-test.ear">
         <fileset dir="${build.lib}">
            <include name="session1.jar"/>
            <include name="session2.jar"/>
            <include name="util.jar"/>
         </fileset>
         <fileset dir="${resources}/test/factory">
            <include name="META-INF/application.xml"/>
            <include name="META-INF/jboss-app.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/session1xml.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/factoryxml/*1*.class"/>
         </fileset>
         <fileset dir="${resources}/test/factoryxml/session1">
            <include name="META-INF/persistence.xml"/>
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/session2xml.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/factoryxml/*2*.class"/>
            <include name="org/jboss/ejb3/test/factoryxml/MyService*.class"/>
         </fileset>
         <fileset dir="${resources}/test/factoryxml/session2">
            <include name="META-INF/persistence.xml"/>
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/utilxml.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/factoryxml/Util.class"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/factoryxml-test.ear">
         <fileset dir="${build.lib}">
            <include name="session1xml.jar"/>
            <include name="session2xml.jar"/>
            <include name="utilxml.jar"/>
         </fileset>
         <fileset dir="${resources}/test/factoryxml">
            <include name="META-INF/application.xml"/>
            <include name="META-INF/jboss-app.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="ear"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/ear-session.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/ear/Facade*.class"/>
         </fileset>
         <fileset dir="${resources}/test/ear/ejbref">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/earpu.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/ear/LibEntity.class"/>
         </fileset>
         <fileset dir="${resources}/test/ear/earlib">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/ref.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/ear/ReferencedEntity.class"/>
         </fileset>
      </jar>
      <zip zipfile="${build.lib}/ear-test.ear">
         <zipfileset dir="${build.lib}">
            <include name="ear-session.jar"/>
         </zipfileset>
         <zipfileset dir="${build.lib}" prefix="lib">
            <include name="ref.jar"/>
            <include name="earpu.jar"/>
         </zipfileset>
      </zip>

   </target>

   <target name="dependency"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/ejbjar.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/dependency/Has*.class"/>
            <include name="org/jboss/ejb3/test/dependency/No*.class"/>
            <include name="org/jboss/ejb3/test/dependency/Customer.class"/>
            <include name="org/jboss/ejb3/test/dependency/Stateless*.class"/>
            <include name="org/jboss/ejb3/test/dependency/AnotherDependedOnMBean.class"/>
            <exclude name="org/jboss/ejb3/test/dependency/*2*.class"/>
         </fileset>
         <fileset dir="${resources}/test/dependency">
            <include name="META-INF/persistence.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/A.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/dependency/ABean.class"/>
            <include name="org/jboss/ejb3/test/dependency/A.class"/>
            <include name="org/jboss/ejb3/test/dependency/B.class"/>
            <!--exclude name="org/jboss/ejb3/test/dependency/Another*.class"/-->
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/B.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/dependency/BBean.class"/>
            <include name="org/jboss/ejb3/test/dependency/B.class"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/ejbdepends.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/dependency/*2*.class"/>
         </fileset>
         <fileset dir="${resources}/test/dependency/session2">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/dependedon.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/dependency/Depended*.class"/>
         </fileset>
         <fileset dir="${resources}/test/dependency/dependedon">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/anotherdependedon.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/dependency/Another*.class"/>
         </fileset>
         <fileset dir="${resources}/test/dependency/another">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>

    <jar jarfile="${build.lib}/yetanother.sar">
       <fileset dir="${build.classes}">
          <include name="org/jboss/ejb3/test/dependency/Another*.class"/>
       </fileset>
       <fileset dir="${resources}/test/dependency/session2">
          <include name="META-INF/jboss-service.xml"/>
       </fileset>
    </jar>
      <jar jarfile="${build.lib}/dependency-test.ear">
         <fileset dir="${build.lib}">
            <include name="ejbjar.jar"/>
         </fileset>
         <fileset dir="${resources}/test/dependency">
            <include name="mydatasource-ds.xml"/>
            <include name="META-INF/application.xml"/>
            <include name="META-INF/jboss-app.xml"/>
         </fileset>
      </jar>



   </target>

   <target name="benchmark"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/benchmark-ejb3.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/microbench/StatelessBean.class"/>
            <include name="org/jboss/ejb3/test/microbench/StatelessRemote.class"/>
            <include name="org/jboss/ejb3/test/microbench/StatelessLocal.class"/>
            <include name="org/jboss/ejb3/test/microbench/StatelessTest.class"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/benchmark.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/microbench/StatelessBean21.class"/>
            <include name="org/jboss/ejb3/test/microbench/StatelessRemote21.class"/>
            <include name="org/jboss/ejb3/test/microbench/StatelessLocal21.class"/>
            <include name="org/jboss/ejb3/test/microbench/StatelessHomeRemote.class"/>
            <include name="org/jboss/ejb3/test/microbench/StatelessHomeLocal.class"/>
         </fileset>
         <fileset dir="${resources}/test/microbench">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>


      <jar jarfile="${build.lib}/benchmark-ejb3-test.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/microbench/Bench*.class"/>
         </fileset>
         <fileset dir="${resources}/test/microbench">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
         <fileset dir="${build.lib}">
            <include name="benchmark-ejb3.jar"/>
            <include name="benchmark.jar"/>
         </fileset>
      </jar>
   </target>

   <target name="appclient"
      description="Builds appclient-test.ear."
      depends="compile-classes">
      
      <mkdir dir="${build.lib}"/>
      
      <jar jarfile="${build.lib}/appclient-test-client.jar" manifest="${resources}/test/appclient/Manifest">
         <zipfileset prefix="META-INF" dir="${resources}/test/appclient">
            <include name="application-client.xml"/>
            <include name="jboss-client.xml"/>
         </zipfileset>
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/appclient/HelloWorldService.class"/>
            <include name="org/jboss/ejb3/test/appclient/client/HelloWorldClient.class"/>
         </fileset>
      </jar>
      
      <jar jarfile="${build.lib}/appclient-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/appclient/*.class"/>
         </fileset>
      </jar>
      
      <ear appxml="${resources}/test/appclient/application.xml" earfile="${build.lib}/appclient-test.ear">
         <fileset dir="${build.lib}">
            <include name="appclient-test-client.jar"/>
            <include name="appclient-test.jar"/>
         </fileset>
      </ear>
      
      <jar jarfile="${build.lib}/appclient-simpleresource-client.jar">
         <manifest>
            <attribute name="Main-Class" value="org.jboss.ejb3.test.appclient.client.SimpleResourceClient"/>
         </manifest>
         <zipfileset prefix="META-INF" dir="${resources}/test/appclient/simpleresource">
            <include name="application-client.xml"/>
         </zipfileset>
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/appclient/client/SimpleResourceClient.class"/>
         </fileset>
      </jar>
      
      <jar jarfile="${build.lib}/appclient-simpleresource.ear">
         <fileset dir="${build.lib}">
            <include name="appclient-simpleresource-client.jar"/>
         </fileset>
      </jar>
   </target>

   <target name="asynchronous"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/asynchronous-test.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/asynchronous/Tester*.class"/>
         </fileset>
         <fileset dir="${resources}/test/asynchronous">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>
      <jar jarfile="${build.lib}/asynchronous-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/asynchronous/*.class"/>
         </fileset>
         <fileset dir="${resources}/test">
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
         <fileset dir="${resources}/test/asynchronous">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="localcall"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/localcall-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/localcall/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="webservices"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/webservices-ejb3.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/webservices/*.class"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/jsr181.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/webservices/jsr181/EJB3*.class"/>
            <include name="org/jboss/ejb3/test/webservices/jsr181/Stateless*.class"/>
         </fileset>
         <fileset dir="${resources}/test/webservices">
         	<include name="META-INF/ejb-jar.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/jsr181-client.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/webservices/jsr181/EndpointInterface.class"/>
         </fileset>
         <fileset dir="${resources}/test/webservices">
            <include name="META-INF/application-client.xml"/>
            <include name="META-INF/jaxrpc-mapping.xml"/>
            <include name="META-INF/jboss-client.xml"/>
            <include name="META-INF/wsdl/*.wsdl"/>
         </fileset>
      </jar>
   </target>

   <target name="interceptors"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/interceptors-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/interceptors/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/interceptors">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="interceptors2"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/interceptors2-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/interceptors2/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/interceptors2">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>
      <copy todir="${build.lib}">
         <fileset dir="${resources}/test/interceptors2">
            <include name="*.xml"/>
         </fileset>
      </copy>

   </target>

   <target name="interceptors3"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/interceptors3-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/interceptors3/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/interceptors3">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>
      <copy todir="${build.lib}">
         <fileset dir="${resources}/test/interceptors3">
            <include name="*.xml"/>
         </fileset>
      </copy>

   </target>

   <target name="clientinterceptor"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/clientinterceptor-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/clientinterceptor/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/clientinterceptor">
            <include name="*.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="timer"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/timer-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/timer/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="timerdependency"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/timerdependency.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/timerdependency/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="pkg"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/pkg-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/pkg/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/entity">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="txexceptions"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/txexceptions-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/txexceptions/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/txexceptions">
            <include name="META-INF/persistence.xml"/>
            <include name="META-INF/ejb-jar.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="dd"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/dd.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/dd/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="pool"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/pool.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/pool/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="naming"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

	<delete file="${resources}/test/naming/META-INF/jboss.xml"/>
	<copy file="${resources}/test/naming/META-INF/jboss1.xml" tofile="${resources}/test/naming/META-INF/jboss.xml"/>
      <jar jarfile="${build.lib}/naming.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/naming/Test*.class"/>
         </fileset>
         <fileset dir="${resources}/test/naming">
		<include name="*.xml"/>
            <include name="*.properties"/>
         </fileset>
         <fileset dir="${resources}/test/naming">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>

      <delete file="${resources}/test/naming/META-INF/jboss.xml"/>
	<copy file="${resources}/test/naming/META-INF/jboss2.xml" tofile="${resources}/test/naming/META-INF/jboss.xml"/>
      <jar jarfile="${build.lib}/naming-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/naming/Stateful.class"/>
            <include name="org/jboss/ejb3/test/naming/StatefulOverrideBean.class"/>
         </fileset>
         <fileset dir="${resources}/test/naming">
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>

      <delete file="${resources}/test/naming/META-INF/jboss.xml"/>
      <jar jarfile="${build.lib}/bind-failure-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/naming/Stateful*.class"/>
            <exclude name="org/jboss/ejb3/test/naming/StatefulOverrideBean.class"/>
         </fileset>
      </jar>

      <!-- bad-field-method.jar -->
      <jar destfile="${build.lib}/bad-field-method.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/naming/bad/BadInjector.class"/>
            <include name="org/jboss/ejb3/test/naming/bad/BadFieldMethodBean.class"/>
         </fileset>
         <zipfileset dir="${resources}/test/naming-errors"
            fullpath="META-INF/ejb-jar.xml">
            <include name="ejb-jar-method-field.xml"/>
         </zipfileset>
      </jar>
   </target>

   <target name="bmt"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/bmt-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/bmt/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/bmt">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="schema"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/ejbjar-validation.jar">
         <fileset dir="${resources}/test/schema">
            <include name="META-INF/ejb-jar.xml"/>
         </fileset>
      </jar>

       <jar jarfile="${build.lib}/jboss-validation.jar">
         <fileset dir="${resources}/test/schema">
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="bank"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/bank.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/bank/*.class"/>
         </fileset>
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/bank/ejbutil/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/bank">
            <include name="META-INF/*.xml"/>
            <include name="bank-ejb3-interceptors-aop.xml"/>
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
      </jar>
   </target>
   
   <!--target name="transaction"
      description="Builds all jar files."
      depends="compile-classes">
      
      <mkdir dir="${build.lib}"/>
      
      <jar jarfile="${build.lib}/transaction-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/transaction/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/transaction">
            <include name="META-INF/*.xml"/>
            <include name="*.xml"/>
         </fileset>
      </jar>
   </target-->

   <target name="mail"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/mail-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/mail/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/mail">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="securitydomain"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/securitydomain.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/securitydomain/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/securitydomain">
            <include name="META-INF/*.xml"/>
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
      </jar>
   </target>

   <target name="unauthenticatedprincipal"
      description="Builds all jar files."
      depends="compile-classes">
      
      <mkdir dir="${build.lib}"/>
      
      <jar jarfile="${build.lib}/unauthenticatedprincipal.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/unauthenticatedprincipal/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/unauthenticatedprincipal">
            <include name="META-INF/*.xml"/>
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
      </jar>
   </target>

   <target name="reference21_30"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

   <delete file="${resources}/test/reference21_30/META-INF/ejb-jar.xml"/>
   <copy file="${resources}/test/reference21_30/META-INF/global-ejb-jar.xml" tofile="${resources}/test/reference21_30/META-INF/ejb-jar.xml"/>
	<delete file="${resources}/test/reference21_30/META-INF/jboss.xml"/>
   	<copy file="${resources}/test/reference21_30/META-INF/jboss-reference.xml" tofile="${resources}/test/reference21_30/META-INF/jboss.xml"/>

   <jar jarfile="${build.lib}/globalReference.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/reference21_30/*21*.class"/>
         </fileset>
         <fileset dir="${resources}/test/reference21_30">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
      </jar>
      <jar jarfile="${build.lib}/globalReference-ejb3.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/reference21_30/GlobalSession30Bean.class"/>
            <include name="org/jboss/ejb3/test/reference21_30/Session30.class"/>
         </fileset>
      </jar>

      <delete file="${resources}/test/reference21_30/META-INF/ejb-jar.xml"/>
      <copy file="${resources}/test/reference21_30/META-INF/reference-ejb-jar.xml" tofile="${resources}/test/reference21_30/META-INF/ejb-jar.xml"/>
      <delete file="${resources}/test/reference21_30/META-INF/jboss.xml"/>
   	<copy file="${resources}/test/reference21_30/META-INF/jboss-reference2.xml" tofile="${resources}/test/reference21_30/META-INF/jboss.xml"/>
      <jar jarfile="${build.lib}/reference.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/reference21_30/Local*.class"/>
            <include name="org/jboss/ejb3/test/reference21_30/Homed*.class"/>
            <include name="org/jboss/ejb3/test/reference21_30/Session*.class"/>
            <include name="org/jboss/ejb3/test/reference21_30/StatefulSession*.class"/>
         </fileset>
         <fileset dir="${resources}/test/reference21_30">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
       </jar>

       <delete file="${resources}/test/reference21_30/META-INF/ejb-jar.xml"/>
      <copy file="${resources}/test/reference21_30/META-INF/ejb-jar2.xml" tofile="${resources}/test/reference21_30/META-INF/ejb-jar.xml"/>
      <delete file="${resources}/test/reference21_30/META-INF/jboss.xml"/>
   	<copy file="${resources}/test/reference21_30/META-INF/jboss2.xml" tofile="${resources}/test/reference21_30/META-INF/jboss.xml"/>
	<jar jarfile="${build.lib}/multideploy.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/reference21_30/Test2*.class"/>
         </fileset>
         <fileset dir="${resources}/test/reference21_30">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
       </jar>

      <delete file="${resources}/test/reference21_30/META-INF/ejb-jar.xml"/>
      <copy file="${resources}/test/reference21_30/META-INF/ejb-jar3.xml" tofile="${resources}/test/reference21_30/META-INF/ejb-jar.xml"/>
      <delete file="${resources}/test/reference21_30/META-INF/jboss.xml"/>
   	<copy file="${resources}/test/reference21_30/META-INF/jboss3.xml" tofile="${resources}/test/reference21_30/META-INF/jboss.xml"/>
	<jar jarfile="${build.lib}/multideploy-ejb3.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/reference21_30/Test3*.class"/>
         </fileset>
         <fileset dir="${resources}/test/reference21_30">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
       </jar>


       <delete file="${resources}/test/reference21_30/META-INF/ejb-jar.xml"/>
       <delete file="${resources}/test/reference21_30/META-INF/jboss.xml"/>

       	<ear earfile="${build.lib}/multideploy.ear"
			appxml="${build.resources}/test/reference21_30/META-INF/application.xml">
	         <fileset dir="${build.lib}">
	            <include name="multideploy.jar"/>
	            <include name="multideploy-ejb3.jar"/>
	         </fileset>
	 	</ear>
   </target>

   <!--target name="jca"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar destfile="${build.lib}/jca.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/jca/**"/>
         </fileset>
      </jar>
      <jar destfile="${build.lib}/jca.rar">
         <fileset dir="${build.lib}">
            <include name="jca.jar"/>
         </fileset>
         <fileset dir="${build.resources}/test/jca">
            <include name="META-INF/ra.xml"/>
         </fileset>
      </jar>

      <jar destfile="${build.lib}/jcamdb.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/jca/**"/>
         </fileset>
      </jar>
   </target-->

   <target name="dd/mdb"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/dd-mdb.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/dd/mdb/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/dd/mdb">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>
      <copy todir="${build.lib}">
         <fileset dir="${resources}/test/dd/mdb">
            <include name="*.xml"/>
         </fileset>
      </copy>
   </target>

   <target name="jms"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/jms.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/jms/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/jms">
            <include name="*.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="jms/managed"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/jms-managed.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/jms/managed/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/jms">
            <include name="*.xml"/>
         </fileset>
         <fileset dir="${resources}/test/jms/managed">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="enventry"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/enventry.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/enventry/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/enventry">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>
   </target>

   <!--target name="loginmodule"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/loginmodule.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/loginmodule/*Login*.class"/>
         </fileset>
         <fileset dir="${resources}/test/loginmodule">
            <include name="*.properties"/>
         </fileset>

      </jar>

      <war warfile="${build.lib}/loginmodule.war"
         webxml="${build.resources}/test/loginmodule/WEB-INF/web.xml">
         <classes dir="${build.classes}">
            <include name="org/jboss/ejb3/test/loginmodule/*.class"/>
            <exclude name="org/jboss/ejb3/test/loginmodule/Login*.class"/>
         </classes>
      </war>
   </target-->

   <target name="dd/web"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/dd-web-ejbs.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/dd/web/ejb/*.class"/>
            <include name="org/jboss/ejb3/test/dd/web/interfaces/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/dd/web">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
            <include name="META-INF/persistence.xml"/>
         </fileset>
         <fileset dir="${resources}/test/dd/web">
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
      </jar>

      <war warfile="${build.lib}/dd-web.war"
         webxml="${build.resources}/test/dd/web/WEB-INF/jbosstest-web.xml">
         <webinf dir="${build.resources}/test/dd/web/html/jbosstest/WEB-INF">
            <include name="*"/>
         </webinf>
         <lib dir="${build.resources}/test/dd/web/WEB-INF/lib">
        <!--    <include name="jbosstest-web-util.jar"/> -->
            <include name="resources.jar"/>
         </lib>
         <classes dir="${build.classes}">
            <include name="org/jboss/ejb3/test/dd/web/servlets/**"/>
            <include name="org/jboss/ejb3/test/dd/web/util/*.class"/>
         </classes>
         <fileset dir="${build.resources}/test/dd/web/html/jbosstest">
            <include name="**/*.jsp"/>
            <include name="**/*.html"/>
         </fileset>
         <fileset dir="${source.java}/org/jboss/ejb3/test/dd/web/jsp">
            <include name="*.jsp"/>
         </fileset>
      </war>

      <ear earfile="${build.lib}/dd-web.ear"
         appxml="${build.resources}/test/dd/web/META-INF/application.xml">
         <metainf dir="${build.resources}/test/dd/web/META-INF">
            <include name="jboss-app.xml"/>
         </metainf>
         <fileset dir="${build.lib}">
            <include name="dd-web-ejbs.jar"/>
            <include name="dd-web.war"/>
         </fileset>
         <fileset dir="${build.resources}/test/dd/web">
            <include name="scripts/*"/>
         </fileset>
      </ear>
   </target>

   <target name="jsp"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/jsp-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/jsp/*.class"/>
         </fileset>
      </jar>

      <war warfile="${build.lib}/jsp-test.war"
         webxml="${build.resources}/test/jsp/WEB-INF/jbosstest-jsp.xml">
         <fileset dir="${build.resources}/test/jsp">
            <include name="**/*.jsp"/>
         </fileset>
      </war>

      <ear earfile="${build.lib}/jsp-test.ear"
         appxml="${build.resources}/test/jsp/META-INF/application.xml">
         <fileset dir="${build.lib}">
            <include name="jsp-test.jar"/>
            <include name="jsp-test.war"/>
         </fileset>
      </ear>
   </target>

   <target name="classloader"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/classloader.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/classloader/Session30*.class"/>
         </fileset>
         <fileset dir="${resources}/test/classloader">
            <include name="META-INF/jboss.xml"/>
            <include name="*.jar"/>
            <include name="*.properties"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/classloader-shared.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/classloader/Shared*.class"/>
            <include name="org/jboss/ejb3/test/classloader/Session30.class"/>
         </fileset>
         <fileset dir="${resources}/test/classloader">
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/classloader-unshared.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/classloader/Unshared*.class"/>
            <include name="org/jboss/ejb3/test/classloader/Session30.class"/>
         </fileset>
      </jar>
   </target>
   
   <target name="clusteredservice"
      description="Builds all jar files."
      depends="compile-classes">
      
      <mkdir dir="${build.lib}"/>
      
      <jar jarfile="${build.lib}/clusteredservice.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/clusteredservice/*.class"/>
            <exclude name="org/jboss/ejb3/test/clusteredservice/ServiceWeb.class"/>
         </fileset>
      </jar>
      
      <war warfile="${build.lib}/clusteredservice.war"
         webxml="${build.resources}/test/clusteredservice/WEB-INF/web.xml">
         <classes dir="${build.classes}">
            <include name="org/jboss/ejb3/test/clusteredservice/servlets/*.class"/>
            <include name="org/jboss/ejb3/test/clusteredservice/ServiceRemote.class"/>
            <include name="org/jboss/ejb3/test/clusteredservice/ServiceWeb.class"/>
         </classes>
      </war>
   </target>

   <target name="servlet"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/servlet-ejbs.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/servlet/*.class"/>
            <exclude name="org/jboss/ejb3/test/servlet/War*.class"/>
         </fileset>
         <fileset dir="${resources}/test/servlet">
            <include name="*.properties"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/servlet-client.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/servlet/War*.class"/>
         </fileset>
      </jar>

      <war warfile="${build.lib}/servlet.war"
         webxml="${build.resources}/test/servlet/WEB-INF/test-web.xml">
         <webinf dir="${build.resources}/test/servlet/WEB-INF">
            <include name="jboss-web.xml"/>
         </webinf>
         <classes dir="${build.classes}">
            <include name="org/jboss/ejb3/test/servlet/servlets/**"/>
         </classes>
         <lib dir="${build.lib}">
            <include name="servlet-client.jar"/>
         </lib>
      </war>

      <ear earfile="${build.lib}/servlet.ear"
         appxml="${build.resources}/test/servlet/META-INF/application.xml"
         manifest="${build.resources}/test/servlet/META-INF/MANIFEST.MF">
         <fileset dir="${build.lib}">
            <include name="servlet-ejbs.jar"/>
            <include name="servlet.war"/>
            <include name="servlet-client.jar"/>
         </fileset>
         <fileset dir="${resources}/test/servlet">
            <include name="META-INF/jboss-app.xml"/>
            <include name="servlet-security-service.xml"/>
         </fileset>
      </ear>
      
      <copy todir="${build.lib}">
         <fileset dir="${resources}/test/servlet">
            <include name="servlet-security-service.xml"/>
         </fileset>
      </copy>
   </target>

   <target name="ejbthree440"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/ejbthree440.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree440/session/**/*.class"/>
            <include name="org/jboss/ejb3/test/regression/ejbthree440/model/*.class"/>
         </fileset>
         <fileset dir="${build.resources}/test/regression/ejbthree440">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>

      <ear earfile="${build.lib}/ejbthree440.ear"
         appxml="${build.resources}/test/regression/ejbthree440/META-INF/application.xml">
         <fileset dir="${build.lib}">
            <include name="ejbthree440.jar"/>
         </fileset>
      </ear>

   </target>


   <target name="ejbthree454"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/shared-a-ejb.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree454/Shared*.class"/>
         </fileset>
         <fileset dir="${build.resources}/test/regression/ejbthree454/a">
            <include name="META-INF/ejb-jar.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/shared-b-ejb.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree454/Shared*.class"/>
         </fileset>
         <fileset dir="${build.resources}/test/regression/ejbthree454/b">
            <include name="META-INF/ejb-jar.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/a-ejb.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree454/A*.class"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/b-ejb.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree454/B*.class"/>
         </fileset>
      </jar>
      <ear earfile="${build.lib}/ejbthree454-a.ear"
         appxml="${build.resources}/test/regression/ejbthree454/a/META-INF/application.xml">
         <fileset dir="${build.lib}">
            <include name="a-ejb.jar"/>
            <include name="shared-a-ejb.jar"/>
         </fileset>
      </ear>
      <ear earfile="${build.lib}/ejbthree454-b.ear"
         appxml="${build.resources}/test/regression/ejbthree454/b/META-INF/application.xml">
         <fileset dir="${build.lib}">
            <include name="b-ejb.jar"/>
            <include name="shared-b-ejb.jar"/>
         </fileset>
      </ear>
   </target>

   <target name="ejbthree485"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/ejbthree485.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree485/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="ejbthree620"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/ejbthree620.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree620/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="ejbthree653"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/ejbthree653.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree653/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="ejbthree670"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/ejbthree670.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree670/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="ejbthree712"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/ejbthree712.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/ejbthree712/*.class"/>
         </fileset>
         <zipfileset dir="${build.resources}/test/ejbthree712" prefix="META-INF" includes="*"/>
      </jar>
   </target>

   <target name="ejbthree751"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/ejbthree751-fail.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/ejbthree751/fail/*.class"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/ejbthree751-pass.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/ejbthree751/pass/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="ejbthree832"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/ejbthree832.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/ejbthree832/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/ejbthree832">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>
   
   <target name="jaxws"
      description="Builds a simple jar."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/jaxws-context.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/jaxws/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="wolfc"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/wolfc.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/wolfc/*.class"/>
         </fileset>
      </jar>
      
      <ear destfile="${build.lib}/wolfc.ear" appxml="${build.resources}/test/wolfc/application.xml">
         <zipfileset prefix="META-INF" dir="${build.resources}/test/wolfc">
            <include name="jboss-app.xml"/>
         </zipfileset>
         <fileset dir="${build.lib}" includes="wolfc.jar"/>
      </ear>
   </target>

   <target name="scopedclassloader"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/search-ejbs.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/scopedclassloader/StatelessBean.class"/>
            <include name="org/jboss/ejb3/test/regression/scopedclassloader/StatelessRemote.class"/>
            <include name="org/jboss/ejb3/test/regression/scopedclassloader/ValueObject.class"/>
            <include name="org/jboss/ejb3/test/regression/scopedclassloader/Customer.class"/>
            <include name="org/jboss/ejb3/test/regression/scopedclassloader/ScopedException.class"/>
         </fileset>
         <fileset dir="${build.resources}/test/scopedclassloader/ejbear">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/sf-clientejb.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/scopedclassloader/Client*.class"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/search-ejbs-client.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/scopedclassloader/ValueObject.class"/>
            <include name="org/jboss/ejb3/test/regression/scopedclassloader/StatelessRemote.class"/>
            <include name="org/jboss/ejb3/test/regression/scopedclassloader/Customer.class"/>
            <include name="org/jboss/ejb3/test/regression/scopedclassloader/ScopedException.class"/>
         </fileset>
      </jar>

      <war warfile="${build.lib}/webtools.war"
              manifest="${build.resources}/test/scopedclassloader/webtools/META-INF/MANIFEST.MF"
         webxml="${build.resources}/test/scopedclassloader/webtools/WEB-INF/web.xml">
         <fileset dir="${build.resources}/test/scopedclassloader/webtools">
            <include name="*.jsp"/>
         </fileset>
      </war>

      <ear earfile="${build.lib}/scopedclassloader-web.ear"
         appxml="${build.resources}/test/scopedclassloader/webear/META-INF/application.xml">
         <metainf dir="${build.resources}/test/scopedclassloader/webear/META-INF">
            <include name="jboss-app.xml"/>
         </metainf>
         <fileset dir="${build.lib}">
            <include name="sf-clientejb.jar"/>
            <include name="search-ejbs-client.jar"/>
            <include name="webtools.war"/>
         </fileset>
      </ear>

      <ear earfile="${build.lib}/scopedclassloader-ejb.ear"
         appxml="${build.resources}/test/scopedclassloader/ejbear/META-INF/application.xml">
         <metainf dir="${build.resources}/test/scopedclassloader/ejbear/META-INF">
            <include name="jboss-app.xml"/>
         </metainf>
         <fileset dir="${build.lib}">
            <include name="search-ejbs.jar"/>
         </fileset>
      </ear>

   </target>

   <target name="exception"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/exception.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/exception/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="dd/override"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <copy file="${resources}/test/dd/override/META-INF/ejb-jarB.xml" tofile="${resources}/test/dd/override/META-INF/ejb-jar.xml"/>

      <jar jarfile="${build.lib}/dd-override1B.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/dd/override/FooBean1.class"/>
            <include name="org/jboss/ejb3/test/dd/override/Foo.class"/>
            <include name="org/jboss/ejb3/test/dd/override/LocalFoo.class"/>
            <include name="org/jboss/ejb3/test/dd/override/LocalFooBean.class"/>
         </fileset>
         <fileset dir="${resources}/test/dd/override">
            <include name="META-INF/ejb-jar.xml"/>
         </fileset>
      </jar>
   </target>


   <target name="hbm"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/hbm-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/hbm/*.class"/>
            <exclude name="org/jboss/ejb3/test/hbm/HBM2.class"/>
         </fileset>
         <fileset dir="${resources}/test/hbm">
           <include name="META-INF/hbm.hbm.xml"/>
	     <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
      <jar jarfile="${build.lib}/hbm2-test.par">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/hbm/HBM2.class"/>
         </fileset>
         <fileset dir="${resources}/test/hbm">
           <include name="META-INF/hbm2.hbm.xml"/>
         </fileset>
         <fileset dir="${resources}/test/hbm/hbm2">
           <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="regressionHHH275"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/regressionHHH275-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regressionHHH275/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/regressionHHH275">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="regression"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/salesforce-7123.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/salesforce7123/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/regression/salesforce7123">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
      <jar jarfile="${build.lib}/regression-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/*.class"/>
         </fileset>
      </jar>
      <jar jarfile="${build.lib}/regression-ejbthree249-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree249/*.class"/>
         </fileset>
      </jar>
      <jar jarfile="${build.lib}/regression-ejbthree290-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree290/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/regression/ejbthree290">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
      <jar jarfile="${build.lib}/regression-ejbthree625-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree625/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/regression/ejbthree625">
            <include name="META-INF/ejb-jar.xml"/>
         </fileset>
      </jar>
      <jar jarfile="${build.lib}/regression-ejbthree231.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree231/*.class"/>
         </fileset>
      </jar>
      <jar jarfile="${build.lib}/regression-ejbthree315.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree315/*.class"/>
         </fileset>
      </jar>
      <jar jarfile="${build.lib}/regression-ejbthree316.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree316/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/regression/ejbthree316">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
      <jar jarfile="${build.lib}/regression-ejbthree376.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/regression/ejbthree376/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="strictpool"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/strictpool-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/strictpool/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/strictpool">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>
      <copy todir="${build.lib}">
         <fileset dir="${resources}/test/strictpool">
            <include name="*.xml"/>
         </fileset>
      </copy>
   </target>

   <target name="relationships"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/relationships-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/relationships/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="ssl"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/ssl-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/ssl/*.class"/>
         </fileset>
      </jar>
   </target>
   
   <target name="arjuna"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/arjuna-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/arjuna/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/arjuna">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="ssladvanced"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/ssladvanced-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/ssladvanced/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/ssladvanced">
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="entity"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/entity-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/entity/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/entity">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="timestampentity"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/timestampentity-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/timestampentity/*.class"/>
            <include name="org/jboss/ejb3/test/timestampentity/entity/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/timestampentity">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>
   
   <target name="mdbtransactions"
      description="Builds all jar files."
      depends="compile-classes">
      
      <mkdir dir="${build.lib}"/>
      
      <jar jarfile="${build.lib}/mdbtransactions-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/mdbtransactions/*.class"/>
            <exclude name="org/jboss/ejb3/test/mdbtransactions/*21.class"/>
         </fileset>
         <fileset dir="${resources}/test/mdbtransactions">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
      
      <jar jarfile="${build.lib}/mdbtransactions21-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/mdbtransactions/*21.class"/>
         </fileset>
         <fileset dir="${resources}/test/mdbtransactions">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>
      
      <copy todir="${build.lib}">
         <fileset dir="${resources}/test/mdbtransactions">
            <include name="*.xml"/>
         </fileset>
      </copy>
   </target>

   <target name="longlived"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/longlived-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/longlived/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/longlived">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="entityexception"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/entityexception-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/entityexception/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/entityexception">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="composite"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/composite-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/composite/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/composite">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="composite2"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/composite2-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/composite2/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/composite2">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="lob"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/lob-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/lob/*.class"/>
         </fileset>
          <fileset dir="${resources}/test/lob">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="manytomany"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/manytomany-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/manytomany/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/manytomany">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="joininheritance"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/join-inheritance-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/joininheritance/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/joininheritance">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="singletable"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/single-table-inheritance-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/singletableinheritance/*.class"/>
         </fileset>
          <fileset dir="${resources}/test/singletable">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>
   
   <target name="invalidtxmdb"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/invalidtxmdb-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/invalidtxmdb/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/invalidtxmdb">
            <include name="*.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="mdb"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/mdb-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/mdb/*.class"/>
            <include name="org/jboss/ejb3/test/mdb/unit/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/mdb">
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
         <fileset dir="${resources}/test/mdb">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>
      
      <copy todir="${build.lib}">
         <fileset dir="${resources}/test/mdb">
            <include name="*.xml"/>
         </fileset>
      </copy>
      
      <copy todir="${build.lib}/embeddable/standalone">
         <fileset dir="${build.lib}">
            <include name="mdb-test.jar"/>
         </fileset>
      </copy>
   </target>

   <target name="mdbtopic"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/mdbtopic-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/mdbtopic/*.class"/>
            <include name="org/jboss/ejb3/test/mdbtopic/unit/*.class"/>
         </fileset>
         <!--
         <fileset dir="${resources}/test/mdb">
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
         <fileset dir="${resources}/test/mdb">
            <include name="META-INF/*.xml"/>
         </fileset>
         -->
      </jar>
      
      <!--
      <copy todir="${build.lib}/embeddable/standalone">
         <fileset dir="${build.lib}">
            <include name="mdbtopic-test.jar"/>
         </fileset>
      </copy>
      -->
   </target>

   <target name="concurrent"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/concurrent.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/concurrent/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="consumer"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/consumer-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/consumer/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/consumer">
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>
      <copy todir="${build.lib}">
         <fileset dir="${resources}/test/consumer">
            <include name="*.xml"/>
         </fileset>
      </copy>
   </target>

   <target name="tableperclass"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/table-per-class-inheritance-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/tableperinheritance/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/tableperinheritance">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="dependent"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/dependent-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/dependent/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/dependent">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>
   
   <!--target name="concurrent"
      description="Builds all jar files."
      depends="compile-classes">
      
      <mkdir dir="${build.lib}"/>
      
      <jar jarfile="${build.lib}/concurrent-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/concurrent/**/*.class"/>
            <include name="org/jboss/ejb3/test/concurrent/unit/*.class"/>
         </fileset>
      </jar>
   </target-->
   
   <target name="descriptortypo"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/descriptortypo-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/descriptortypo/**/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/descriptortypo">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="stateful"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/stateful-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/stateful/**/*.class"/>
            <include name="org/jboss/ejb3/test/stateful/unit/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/stateful">
            <include name="META-INF/*.xml"/>
         </fileset>
         <fileset dir="${resources}/test/stateful">
            <include name="*.xml"/>
            <include name="*.properties"/>
         </fileset>
      </jar>
   </target>

   <!--target name="seam"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/seam-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/seam/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/seam">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="seam.properties"/>
         </fileset>
      </jar>
   </target-->

   <target name="aspectdomain"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/aspectdomain.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/aspectdomain/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/aspectdomain">
            <include name="*.xml"/>
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="ejbcontext"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/ejbcontext.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/ejbcontext/*.class"/>
         </fileset>
         <!--fileset dir="${resources}/test/ejbcontext">
            <include name="META-INF/ejb-jar.xml"/>
         </fileset-->
      </jar>
   </target>

   <target name="iiop"
      description="Builds iiop.jar."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/iiop.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/iiop/*.class"/>
         </fileset>
         <fileset dir="${resources}/test">
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
      </jar>
   </target>

   <target name="security"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/security.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/security/*.class"/>
            <exclude name="org/jboss/ejb3/test/security/UncheckedStateless*.class"/>
            <exclude name="org/jboss/ejb3/test/security/Timer*.class"/>
            <exclude name="org/jboss/ejb3/test/security/Unauthenticated*.class"/>
         </fileset>
         <fileset dir="${resources}/test/security">
            <include name="users.properties"/>
            <include name="roles.properties"/>
            <include name="security-spec.sar"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/timer-runas-security.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/security/UncheckedStateless*.class"/>
            <include name="org/jboss/ejb3/test/security/Timer*.class"/>
         </fileset>
         <fileset dir="${resources}/test/security">
            <include name="jboss-service.xml"/>
         </fileset>
         <fileset dir="${resources}/test/security">
            <include name="META-INF/jaas-test-config.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/security-extensions.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/security/Unauthenticated*.class"/>
         </fileset>
         <fileset dir="${resources}/test/security">
            <include name="META-INF/jboss.xml"/>
         </fileset>
         <fileset dir="${resources}/test/security">
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
      </jar>

      <copy file="${resources}/test/security/META-INF/jaas-test-config.xml" tofile="${build.classes}/jaas-test-config.xml"/>

      <war warfile="${build.lib}/security-web.war"
         webxml="${build.resources}/test/security/WEB-INF/web.xml">
         <webinf dir="${build.resources}/test/security/WEB-INF">
            <include name="jboss-web.xml"/>
         </webinf>
         <classes dir="${build.classes}">
            <include name="org/jboss/ejb3/test/security/servlets/**"/>
         </classes>
      </war>
   </target>
   
   <target name="homeinterface"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/homeinterface-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/homeinterface/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/homeinterface">
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="libdeployment"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/libdeployment-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/libdeployment/Stateless*.class"/>
         </fileset>
         <fileset dir="${resources}/test/libdeployment">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/libdeployment.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/libdeployment/Stateful*.class"/>
         </fileset>
      </jar>

      <copy todir="${resources}/test-configs/libdeployment/lib">
         <fileset dir="${build.lib}">
            <include name="libdeployment.jar"/>
         </fileset>
      </copy>
   </target>
   

   <target name="stateless"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/stateless-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/stateless/*.class"/>
         </fileset>
         <fileset dir="${resources}/test">
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
      </jar>
   </target>
   
   <target name="invoker"
      description="Builds all jar files."
      depends="compile-classes">
      
      <mkdir dir="${build.lib}"/>
      
      <jar jarfile="${build.lib}/invoker-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/invoker/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="circulardependency"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/circulardependency-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/circulardependency/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/circulardependency">
            <include name="META-INF/jboss.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="servicedependency"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/servicedependency.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/servicedependency/*.class"/>
         </fileset>
      </jar>
   </target>

   <target name="stateless14"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/stateless14-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/stateless14/*.class"/>
         </fileset>
      </jar>

      <delete>
      	 <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/stateless14/**/*.class"/>
         </fileset>
      </delete>

      <javac destdir="${build.classes}"
         optimize="${javac.optimize}"
         debug="${javac.debug}"
         source="1.4"
         target="1.4"
         depend="${javac.depend}"
         verbose="${javac.verbose}"
         deprecation="${javac.deprecation}"
         includeAntRuntime="${javac.include.ant.runtime}"
         includeJavaRuntime="${javac.include.java.runtime}"
         failonerror="${javac.fail.onerror}">
         <src path="${source.java}"/>
         <classpath refid="javac.classpath"/>
         <include name="org/jboss/ejb3/test/stateless14/**/*.java"/>
         <exclude name="org/jboss/ejb3/test/stateless14/**/*Bean.java"/>
      </javac>
   </target>

   <!-- TODO use the other jacc target once the jars from hibernate are updated (changes already made to hibernate) -->
      <target name="jacc"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/jacc-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/jacc/*.class"/>
         </fileset>
         <fileset dir="${resources}/test">
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
         <fileset dir="${resources}/test/jacc">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

<!--
   <target name="jacc"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/jacc-test.par">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/jacc/*Entity.class"/>
         </fileset>
         <fileset dir="${resources}/test">
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
         <fileset dir="${resources}/test/jacc">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
      <jar jarfile="${build.lib}/jacc-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/jacc/*.class"/>
            <exclude name="org/jboss/ejb3/test/jacc/*Entity.class"/>
         </fileset>
         <fileset dir="${resources}/test">
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
      </jar>
   </target>
-->

   <target name="service"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/service-test.sar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/service/Tester*.class"/>
         </fileset>
         <fileset dir="${resources}/test/service">
            <include name="META-INF/jboss-service.xml"/>
         </fileset>
      </jar>
      <jar jarfile="${build.lib}/service-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/service/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/service">
            <include name="META-INF/ejb-jar.xml"/>
            <include name="META-INF/jboss.xml"/>
            <include name="META-INF/persistence.xml"/>
            <include name="test-destination-service.xml"/>
         </fileset>
         <fileset dir="${resources}/test">
            <include name="users.properties"/>
            <include name="roles.properties"/>
         </fileset>
      </jar>
   </target>

   <target name="entitycallback"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/entitycallback-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/entitycallback/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/entitycallback">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="secondary"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/secondary-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/secondary/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/secondary">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>
   </target>

   <target name="xmlcfg"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/xmlcfg-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/xmlcfg/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/xmlcfg">
            <include name="META-INF/**"/>
         </fileset>
      </jar>
   </target>

   <target name="clusteredentity"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/clusteredentity-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/clusteredentity/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/clusteredentity">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>

    <jar jarfile="${build.lib}/clusteredentity-optimistic-test.jar">
       <fileset dir="${build.classes}">
          <include name="org/jboss/ejb3/test/clusteredentity/*.class"/>
       </fileset>
       <fileset dir="${resources}/test/clusteredentity/optimistic">
          <include name="META-INF/persistence.xml"/>
       </fileset>
    </jar>

      <jar jarfile="${build.lib}/clusteredentity-classloader-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/clusteredentity/classloader/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/clusteredentity/classloader">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>

    <jar jarfile="${build.lib}/clusteredentity-classloader-optimistic-test.jar">
       <fileset dir="${build.classes}">
          <include name="org/jboss/ejb3/test/clusteredentity/classloader/*.class"/>
       </fileset>
       <fileset dir="${resources}/test/clusteredentity/classloader/optimistic">
          <include name="META-INF/persistence.xml"/>
          <!--include name="META-INF/jboss.xml"/-->
       </fileset>
    </jar>

    <jar jarfile="${build.lib}/clusteredentity-classloader-test.ear">
       <fileset dir="${build.lib}">
          <include name="clusteredentity-classloader-test.jar"/>
       </fileset>
       <fileset dir="${resources}/test/clusteredentity/classloader">
          <include name="META-INF/application.xml"/>
          <include name="META-INF/jboss-app.xml"/>
        <include name="clusteredentity-ds.xml"/>
       </fileset>
    </jar>

    <jar jarfile="${build.lib}/clusteredentity-classloader-optimistic-test.ear">
       <fileset dir="${build.lib}">
          <include name="clusteredentity-classloader-optimistic-test.jar"/>
       </fileset>
       <fileset dir="${resources}/test/clusteredentity/classloader">
          <include name="META-INF/jboss-app.xml"/>
          <include name="clusteredentity-ds.xml"/>
       </fileset>
       <fileset dir="${resources}/test/clusteredentity/classloader/optimistic">
          <include name="META-INF/application.xml"/>
          <include name="META-INF/jboss-app.xml"/>
          <include name="clusteredentity-ds.xml"/>
       </fileset>
    </jar>

    <jar jarfile="${build.lib}/clusteredentity-embeddedid-test.jar">
       <fileset dir="${build.classes}">
          <include name="org/jboss/ejb3/test/clusteredentity/embeddedid/*.class"/>
       </fileset>
       <fileset dir="${resources}/test/clusteredentity/classloader">
          <include name="META-INF/persistence.xml"/>
       </fileset>
    </jar>

    <jar jarfile="${build.lib}/clusteredentity-embeddedid-optimistic-test.jar">
       <fileset dir="${build.classes}">
          <include name="org/jboss/ejb3/test/clusteredentity/embeddedid/*.class"/>
       </fileset>
       <fileset dir="${resources}/test/clusteredentity/classloader/optimistic">
          <include name="META-INF/persistence.xml"/>
          <!--include name="META-INF/jboss.xml"/-->
       </fileset>
    </jar>

    <jar jarfile="${build.lib}/clusteredentity-embeddedid-test.ear">
       <fileset dir="${build.lib}">
          <include name="clusteredentity-embeddedid-test.jar"/>
       </fileset>
       <fileset dir="${resources}/test/clusteredentity/classloader">
          <include name="META-INF/jboss-app.xml"/>
          <include name="clusteredentity-ds.xml"/>
       </fileset>
       <fileset dir="${resources}/test/clusteredentity/embeddedid">
         <include name="META-INF/application.xml"/>
       </fileset>
    </jar>

    <jar jarfile="${build.lib}/clusteredentity-embeddedid-optimistic-test.ear">
       <fileset dir="${build.lib}">
          <include name="clusteredentity-embeddedid-optimistic-test.jar"/>
       </fileset>
       <fileset dir="${resources}/test/clusteredentity/classloader">
          <include name="META-INF/jboss-app.xml"/>
          <include name="clusteredentity-ds.xml"/>
       </fileset>
       <fileset dir="${resources}/test/clusteredentity/embeddedid/optimistic">
         <include name="META-INF/application.xml"/>
       </fileset>
    </jar>
    
    <!-- Copy the optimistic locking JBC config to ${build.lib} so we can deploy it -->
    <copy todir="${build.lib}">
       <fileset dir="${resources}/test/clusteredentity/optimistic">
          <include name="optimistic-entity-cache-*.xml"/>
       </fileset>
    </copy>
   
   </target>

   <target name="clusteredsession"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/clusteredsession-test.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/clusteredsession/**/*.class"/>
         </fileset>
        <fileset dir="${build.classes}">
           <include name="org/jboss/ejb3/test/stateful/nested/base/**/*.class"/>
        </fileset>
         <fileset dir="${resources}/test/clusteredsession">
            <include name="META-INF/*.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/clusteredsession-test-scoped.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/clusteredsession/**/*.class"/>
         </fileset>
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/stateful/nested/base/**/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/clusteredsession">
            <include name="META-INF/*.xml"/>
	        <exclude name="META-INF/jboss.xml"/>
         </fileset>
         <fileset dir="${resources}/test/clusteredsession/scoped">
             <include name="META-INF/*.xml"/>
         </fileset>
      </jar>
   </target>
   
   <target name="jars" depends="invalidtxmdb, descriptortypo, libdeployment, homeinterface, timestampentity, arjuna, mdbtransactions, unauthenticatedprincipal, clusteredservice, invoker, classloader, 
      circulardependency, jsp, timerdependency, servicedependency, servlet, stateless14, webservices, ear, ejbthree440, 
      ejbthree454, ejbthree653, ejbthree670, ejbthree712, ejbthree751, aspectdomain, ejbcontext, schema, mail, scopedclassloader, dependency, 
      securitydomain, enventry, 
      jms/managed, naming, bmt, jca/inflowmdb, pool, jms, security, reference21_30, factory, dd/web, txexceptions, 
      exception, dd/override, stateless, standalone-jar, dd/mdb, bank, dd, longlived, xmlcfg, hbm, pkg, regressionHHH275, 
      entityexception, asynchronous, consumer, clusteredentity, secondary, stateful, service, lob, cache, initial, 
      timer, benchmark, entity, joininheritance, singletable, tableperclass, dependent, mdb, manytomany, regression, 
      composite, composite2, entitycallback, relationships, ssl, ssladvanced, clusteredsession, strictpool, jacc, 
      localcall, interceptors, interceptors2, interceptors3, iiop, clientinterceptor"/>

   <target name="test" depends="init" if="test"
      description="Execute all tests in the given test directory.">
      <!-- For use when we do not need to pass in any special jvmargs; forks the test process -->
      <antcall target="test-with-jvmargs" inheritRefs="true">
         <param name="test" value="${test}"/>
         <param name="jvmargs" value=""/>
      </antcall>
   </target>

   <target name="test-with-jvmargs" if="test">
      <!-- For use when we need to pass in special jvmargs -->

      <mkdir dir="${build.reports}"/>
      <mkdir dir="${build.testlog}"/>
      <!-- Remove the test.log so each run has a fresh log -->
      <delete file="${build.testlog}/test.log"/>

     <!-- These tests need extra stuff on classpath -->
      <condition property="client.run.classpath" value="security.client.classpath">
         <equals arg1="${test}" arg2="security"/>
      </condition>
      <condition property="client.run.classpath" value="dd.web.client.classpath">
         <equals arg1="${test}" arg2="dd/web"/>
      </condition>
      <condition property="client.run.classpath" value="dd.classpath">
         <equals arg1="${test}" arg2="dd"/>
      </condition>
      <condition property="client.run.classpath" value="arjuna.client.classpath">
         <equals arg1="${test}" arg2="arjuna"/>
      </condition>
      <condition property="client.run.classpath" value="iiop.client.classpath">
         <equals arg1="${test}" arg2="iiop"/>
      </condition>
      <condition property="client.run.classpath" value="client.classpath">
         <not>
            <isset property="client.run.classpath"/>
         </not>
      </condition>

      <condition property="test.jndi.url" value="${node0.jndi.url}">
         <not>
            <isset property="test.jndi.url"/>
         </not>
      </condition>
      
      <junit dir="${module.output}"
         printsummary="yes"
         haltonerror="false"
         haltonfailure="false"
         showoutput="yes"
         fork="true">

         <sysproperty key="jbosstest.deploy.dir" value="${build.lib}"/>
         <sysproperty key="build.testlog" value="${build.testlog}"/>
         <sysproperty key="log4j.configuration" value="file:${resources}/test/log4j.xml"/>
         <sysproperty key="jbosstest.threadcount" value="${jbosstest.threadcount}"/>
         <sysproperty key="jbosstest.iterationcount" value="${jbosstest.iterationcount}"/>
         <sysproperty key="jbosstest.beancount" value="${jbosstest.beancount}"/>
         <sysproperty key="java.security.auth.login.config" value="${resources}/test/security/auth.conf"/>


         <!-- properties needed for clustering -->
         <sysproperty key="jbosstest.cluster.node0" value="${node0}"/>
         <sysproperty key="jbosstest.cluster.node0.http.url" value="${node0.http.url}"/>
         <sysproperty key="jbosstest.cluster.node0.jndi.url" value="${node0.jndi.url}"/>
         <sysproperty key="jbosstest.cluster.node1" value="${node1}"/>
         <sysproperty key="jbosstest.cluster.node1.http.url" value="${node1.http.url}"/>
         <sysproperty key="jbosstest.cluster.node1.jndi.url" value="${node1.jndi.url}"/>
         <sysproperty key="java.naming.provider.url" value="${test.jndi.url}"/>


         <jvmarg line="${jvmargs}" />

         <classpath>
            <path refid="asm.asm.classpath"/>
            <path refid="hibernate.hibernate.classpath"/>
            <pathelement location="${build.classes}"/>
            <path refid="${client.run.classpath}"/>
            <pathelement location="${resources}/test"/>
            <path refid="jboss.jbossws.classpath"/>
            <path refid="apache.xerces.classpath"/>
            <path refid="sun.jaf.classpath"/>
            <path refid="sun.javamail.classpath"/>
            <path refid="apache.httpclient.classpath"/>
            <path refid="jboss.server.classpath"/>
            <path refid="jboss.security.classpath"/>
            <path refid="jboss.naming.classpath"/>
            <path refid="trove.classpath"/>
      <path refid="jboss.common.core.classpath"/>
      <path refid="jboss.common.logging.spi.classpath"/>
      <path refid="jboss.common.logging.log4j.classpath"/>
      <path refid="jboss.common.logging.jdk.classpath"/>
            <path refid="jboss.aop.classpath"/>
            <path refid="jboss.aspects.classpath"/>
            <path refid="jboss.jbossxb.classpath"/>
         	<!-- for Corba -->
            <path refid="jboss.iiop.classpath"/>
         	<path refid="jacorb.jacorb.classpath"/>
         	<path refid="apache.avalon.classpath"/>
         	<path refid="apache.avalon.logkit.classpath"/>

            <!-- EJBTHREE-485 needs javassist -->
            <path refid="javassist.classpath"/>
            
            <!-- For clustered entities -->
            <path refid="hsqldb.hsqldb.classpath"/>

            <!-- For JBossWS testing -->
            <path refid="sun.jaxb.classpath"/>
            <pathelement path="${sun.jaxb.lib}/jaxb-impl.jar"/>
         </classpath>

         <formatter type="plain" usefile="true"/>
         <formatter type="xml" usefile="true" unless="test.extension"/>
         <formatter type="xml" extension="-${test.extension}.xml" usefile="true" if="test.extension"/>

         <batchtest todir="${build.reports}"
            haltonerror="false"
            haltonfailure="false"
            fork="true">

            <fileset dir="${build.classes}">
               <include name="org/jboss/ejb3/test/${test}/unit/*TestCase.class"/>
            </fileset>
         </batchtest>
      </junit>
   </target>

   <!-- Single unit test -->
   <target name="one-test-with-jvmargs" if="test">
      <!-- For use when we need to pass in special jvmargs -->

      <mkdir dir="${build.reports}"/>
      <mkdir dir="${build.testlog}"/>
      <!-- Remove the test.log so each run has a fresh log -->
      <delete file="${build.testlog}/test.log"/>

     <!-- These tests need extra stuff on classpath -->
      <condition property="client.run.classpath" value="client.classpath">
         <not>
            <isset property="client.run.classpath"/>
         </not>
      </condition>

      <junit dir="${module.output}"
         printsummary="yes"
         haltonerror="false"
         haltonfailure="false"
         showoutput="yes"
         fork="true">

         <sysproperty key="jbosstest.deploy.dir" value="${build.lib}"/>
         <sysproperty key="build.testlog" value="${build.testlog}"/>
         <sysproperty key="log4j.configuration" value="file:${resources}/test/log4j.xml"/>
         <sysproperty key="jbosstest.threadcount" value="${jbosstest.threadcount}"/>
         <sysproperty key="jbosstest.iterationcount" value="${jbosstest.iterationcount}"/>
         <sysproperty key="jbosstest.beancount" value="${jbosstest.beancount}"/>
         <sysproperty key="java.security.auth.login.config" value="${resources}/test/security/auth.conf"/>


         <!-- properties needed for clustering -->
         <sysproperty key="jbosstest.cluster.node0" value="${node0}"/>
         <sysproperty key="jbosstest.cluster.node0.http.url" value="${node0.http.url}"/>
         <sysproperty key="jbosstest.cluster.node0.jndi.url" value="${node0.jndi.url}"/>
         <sysproperty key="jbosstest.cluster.node1" value="${node1}"/>
         <sysproperty key="jbosstest.cluster.node1.http.url" value="${node1.http.url}"/>
         <sysproperty key="jbosstest.cluster.node1.jndi.url" value="${node1.jndi.url}"/>
         <sysproperty key="java.naming.provider.url" value="${node0.jndi.url}"/>


         <jvmarg line="${jvmargs}" />
         <classpath>
            <path refid="asm.asm.classpath"/>
            <path refid="hibernate.hibernate.classpath"/>
            <pathelement location="${build.classes}"/>
            <path refid="${client.run.classpath}"/>
            <pathelement location="${resources}/test"/>
            <path refid="jboss.jbossws.classpath"/>
            <path refid="apache.xerces.classpath"/>
            <path refid="sun.jaf.classpath"/>
            <path refid="sun.javamail.classpath"/>
            <path refid="apache.httpclient.classpath"/>
            <path refid="jboss.server.classpath"/>
            <path refid="jboss.security.classpath"/>
            <path refid="jboss.naming.classpath"/>
            <path refid="trove.classpath"/>
            <path refid="jboss.common.core.classpath"/>
            <path refid="jboss.common.logging.spi.classpath"/>
            <path refid="jboss.common.logging.log4j.classpath"/>
            <path refid="jboss.common.logging.jdk.classpath"/>
            <path refid="jboss.aop.classpath"/>
            <path refid="jboss.aspects.classpath"/>
            <path refid="jboss.jbossxb.classpath"/>
         	<!-- for Corba -->
            <path refid="jboss.iiop.classpath"/>
         	<path refid="jacorb.jacorb.classpath"/>
         	<path refid="apache.avalon.classpath"/>
         	<path refid="apache.avalon.logkit.classpath"/>

            <!-- EJBTHREE-485 needs javassist -->
            <path refid="javassist.classpath"/>
            
            <!-- For clustered entities -->
            <path refid="hsqldb.hsqldb.classpath"/>
         </classpath>

         <formatter type="plain" usefile="true"/>
         <formatter type="xml" usefile="true"/>
         <test name="${test}" todir="${build.reports}"/>
      </junit>
   </target>

   <target name="standalone-jar"
      description="Builds all jar files."
      depends="compile-classes">

      <mkdir dir="${build.lib}/embeddable/standalone"/>

      <jar jarfile="${build.lib}/embeddable/standalone/standalone.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/standalone/*.class"/>
            <include name="org/jboss/ejb3/test/standalone/unit/*.class"/>
         </fileset>
         <fileset dir="${build.resources}/test/standaloneWar">
            <include name="marker.txt"/>
         </fileset>
         <fileset dir="${build.resources}/test/standalone">
            <include name="deployer.xml"/>
            <include name="kernel-test.xml"/>
         </fileset>
         <fileset dir="${resources}/test/standalone">
            <include name="META-INF/persistence.xml"/>
            <include name="META-INF/ejb-jar.xml"/>
         </fileset>
      </jar>

      <war warfile="${build.lib}/standalone.war"
         webxml="${build.resources}/test/standaloneWar/WEB-INF/web.xml">
         <lib dir="${module.output}/lib/embeddable/lib">
            <include name="*.jar"/>
         </lib>
         <!--lib dir="${module.output}/lib/embeddable/conf/">
            <include name="standalone.jar"/>
         </lib-->
         <lib dir="${build.lib}/embeddable/standalone">
            <include name="*.jar"/>
         </lib>
         <!--classes dir="${module.output}/lib/embeddable/conf">
            <include name="*.xml"/>
            <include name="default.persistence.properties"/>
         </classes-->
         <fileset dir="${source.java}">
            <include name="EmbeddedEJB3.jsp"/>
         </fileset>
      </war>

      <jar jarfile="${build.lib}/embeddable/standalone/jms.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/standalone/jms/*.class"/>
            <include name="org/jboss/ejb3/test/standalone/jms/unit/*.class"/>
         </fileset>
      </jar>
      
      <mkdir dir="${build.lib}/embeddable/standalone/standard"/>
      <copy todir="${build.lib}/embeddable/standalone/standard" file="${build.resources}/test/standalone/standard/testjms.xml"/>
      <copy todir="${build.lib}/embeddable/standalone/standard" file="${build.resources}/test/standalone/standard/jca-inflowmdb-beans.xml"/>
      
      <mkdir dir="${build.lib}/embeddable/standalone/embeddedjms"/>
      <copy todir="${build.lib}/embeddable/standalone/embeddedjms" file="${build.resources}/test/standalone/embeddedjms/testjms.xml"/>
      <jar jarfile="${build.lib}/embeddable/standalone/mdb.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/standalone/embeddedjms/*.class"/>
            <include name="org/jboss/ejb3/test/standalone/embeddedjms/unit/*.class"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/embeddable/standalone/flushmodenever-session1.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/standalone/flushmodenever/*1*.class"/>
            <include name="org/jboss/ejb3/test/standalone/flushmodenever/unit/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/standalone/flushmodenever/session1">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/embeddable/standalone/flushmodenever-session2.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/standalone/flushmodenever/*2*.class"/>
         </fileset>
         <fileset dir="${resources}/test/standalone/flushmodenever/session2">
            <include name="META-INF/persistence.xml"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/embeddable/standalone/flushmodenever-util.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/standalone/flushmodenever/Util.class"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/embeddable/standalone/embedded-security.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/standalone/security/**/*.class"/>
         </fileset>
         <fileset dir="${resources}/test/standalone/security/">
            <include name="*.properties"/>
         </fileset>
      </jar>

      <jar jarfile="${build.lib}/embeddable/standalone/embedded-servicepojo.jar">
         <fileset dir="${build.classes}">
            <include name="org/jboss/ejb3/test/standalone/servicepojo/**/*.class"/>
         </fileset>
         <!--
         <fileset dir="${resources}/test/standalone/servicepojo/">
            <include name="*.properties"/>
         </fileset>
         -->
      </jar>

   </target>

   <target name="client14-tests" depends="init"
      description="Execute all tests for Java1.4 client compatibility.">
      <mkdir dir="${build.reports}"/>
      <mkdir dir="${build.testlog}"/>

      <junit dir="${module.output}"
         printsummary="yes"
         haltonerror="false"
         haltonfailure="false"
         jvm="java"
         fork="true">

         <sysproperty key="jbosstest.deploy.dir" value="${build.lib}"/>
         <sysproperty key="build.testlog" value="${build.testlog}"/>
         <sysproperty key="log4j.configuration" value="file:${resources}/test/log4j.xml"/>
         <sysproperty key="jbosstest.threadcount" value="${jbosstest.threadcount}"/>
         <sysproperty key="jbosstest.iterationcount" value="${jbosstest.iterationcount}"/>
         <sysproperty key="jbosstest.beancount" value="${jbosstest.beancount}"/>

         <classpath>
            <pathelement location="${build.classes}"/>
            <pathelement location="${resources}/test"/>
            <path refid="jboss.test.classpath"/>
            <path refid="client.classpath"/>
         </classpath>

         <formatter type="plain" usefile="true"/>
         <formatter type="xml" usefile="true"/>

         <batchtest todir="${build.reports}"
            haltonerror="false"
            haltonfailure="false"
            fork="true">

            <fileset dir="${build.classes}">
               <include name="org/jboss/ejb3/test/stateless14/unit/*TestCase.class"/>
            </fileset>
         </batchtest>
      </junit>
   </target>

   <target name="embedded-test" depends="init" if="test"
      description="Execute all tests in the given test directory.">
      <mkdir dir="${build.reports}"/>
      <mkdir dir="${build.testlog}"/>
      <!-- Remove the test.log so each run has a fresh log -->
      <delete file="${build.testlog}/test.log"/>
      <path id="test.classpath">
         <pathelement location="${build.classes}"/>
         <pathelement location="${resources}/test/${test}"/>
         <path refid="junit.junit.classpath"/>
         <path refid="jboss.test.classpath"/>
         <path refid="jboss.embedded.classpath"/>
      </path>
      <junit dir="${module.output}"
         printsummary="yes"
         haltonerror="false"
         haltonfailure="false"
         fork="true">

         <sysproperty key="jbosstest.deploy.dir" value="${build.lib}"/>
         <sysproperty key="build.testlog" value="${build.testlog}"/>
         <sysproperty key="jbosstest.threadcount" value="${jbosstest.threadcount}"/>
         <sysproperty key="jbosstest.iterationcount" value="${jbosstest.iterationcount}"/>
         <sysproperty key="jbosstest.beancount" value="${jbosstest.beancount}"/>

         <classpath>
            <path refid="test.classpath"/>
         </classpath>

         <formatter type="plain" usefile="true"/>
         <formatter type="xml" usefile="true"/>

         <batchtest todir="${build.reports}"
            haltonerror="false"
            haltonfailure="false"
            fork="true">

            <fileset dir="${build.classes}">
               <include name="org/jboss/ejb3/test/${test}/unit/*EmbeddedTest.class"/>
            </fileset>
         </batchtest>
      </junit>
   </target>


   <target name="standalone-test" depends="init" if="test"
      description="Execute all tests in the given test directory.">
      <mkdir dir="${build.reports}"/>
      <mkdir dir="${build.testlog}"/>
      <!-- Remove the test.log so each run has a fresh log -->
      <delete file="${build.testlog}/test.log"/>
      <path id="standalone.classpath">
         <fileset dir="${module.output}/lib/embeddable/lib">
            <include name="*.jar"/>
         </fileset>
         <pathelement location="${module.output}/lib/embeddable/conf"/>
         <pathelement location="${module.output}/lib/embeddable/lib"/>
         <pathelement location="${build.lib}/embeddable/standalone"/>
         <pathelement location="${build.lib}/embeddable/standalone/standard"/>
         <!-- TODO: deployment should take care of adding jars to classpath -->
         <fileset dir="${build.lib}/embeddable/standalone">
            <include name="*.jar"/>
         </fileset>
      </path>
      <junit dir="${module.output}"
         printsummary="yes"
         haltonerror="false"
         haltonfailure="false"
         fork="true">
         
         <jvmarg value="-Dorg.jboss.jms.asf.useold=true"/>

         <sysproperty key="jbosstest.deploy.dir" value="${build.lib}"/>
         <sysproperty key="build.testlog" value="${build.testlog}"/>
         <sysproperty key="log4j.configuration" value="file:${resources}/test/log4j.xml"/>
         <sysproperty key="jbosstest.threadcount" value="${jbosstest.threadcount}"/>
         <sysproperty key="jbosstest.iterationcount" value="${jbosstest.iterationcount}"/>
         <sysproperty key="jbosstest.beancount" value="${jbosstest.beancount}"/>

         <classpath>
            <path refid="standalone.classpath"/>
            <path refid="jboss.test.classpath"/>
            <path refid="jboss.jmx.classpath"/>
         </classpath>

         <formatter type="plain" usefile="true"/>
         <formatter type="xml" usefile="true"/>

         <batchtest todir="${build.reports}"
            haltonerror="false"
            haltonfailure="false"
            fork="true">

            <fileset dir="${build.classes}">
               <include name="org/jboss/ejb3/test/${test}/unit/*TestCase.class"/>
            </fileset>
         </batchtest>
      </junit>
   </target>

   <target name="test-standalone-with-jboss" if="test">
      <!-- For use when we're doing a standalone test with jboss -->

      <mkdir dir="${build.reports}"/>
      <mkdir dir="${build.testlog}"/>
      <!-- Remove the test.log so each run has a fresh log -->
      <delete file="${build.testlog}/test.log"/>
      <path id="standalone.classpath">
         <fileset dir="${module.output}/lib/embeddable/lib">
            <include name="*.jar"/>
         </fileset>
         <pathelement location="${module.output}/lib/embeddable/conf"/>
         <fileset dir="${build.lib}/embeddable/${test}">
            <include name="*.jar"/>
         </fileset>
      </path>
      <junit dir="${module.output}"
         printsummary="yes"
         haltonerror="false"
         haltonfailure="false"
         fork="true">

         <sysproperty key="jbosstest.deploy.dir" value="${build.lib}"/>
         <sysproperty key="build.testlog" value="${build.testlog}"/>
         <sysproperty key="log4j.configuration" value="file:${resources}/test/log4j.xml"/>
         <sysproperty key="jbosstest.threadcount" value="${jbosstest.threadcount}"/>
         <sysproperty key="jbosstest.iterationcount" value="${jbosstest.iterationcount}"/>
         <sysproperty key="jbosstest.beancount" value="${jbosstest.beancount}"/>
         <sysproperty key="java.security.auth.login.config" value="${resources}/test/security/auth.conf"/>

         <classpath>
            <path refid="standalone.classpath"/>
            <path refid="jboss.test.classpath"/>
            <path refid="hsqldb.hsqldb.classpath"/>
            <!-- this must come last -->
            <pathelement location="${build.classes}"/>
            <pathelement location="${resources}/test"/>
            <path refid="javac.classpath"/>
         </classpath>

         <formatter type="plain" usefile="true"/>
         <formatter type="xml" usefile="true"/>

         <batchtest todir="${build.reports}"
            haltonerror="false"
            haltonfailure="false"
            fork="true">

            <fileset dir="${build.classes}">
               <include name="org/jboss/ejb3/test/${test}/unit/*TestCase.class"/>
            </fileset>
         </batchtest>
      </junit>
   </target>

   <target name="run-clusteredentity" depends="init"
      description="Runs the clusteredentity stuff in a cluster">

      <!-- clusteredentity-test.ejb3 file needs to be deployed manually-->

      <!-- IP:port of the two nodes in the cluster -->
      <property name="naming1" value="192.168.1.1:1099"/>
      <property name="naming1" value="192.168.1.2:1099"/>

      <java fork="yes" className="org.jboss.ejb3.test.clusteredentity.unit.CachedEntityRun">
         <arg value="${naming1}"/>
         <arg value="${naming2}"/>
         <classpath>
            <pathelement location="${build.classes}"/>
            <pathelement location="${resources}/test"/>
            <path refid="javac.classpath"/>
         </classpath>
      </java>
   </target>

   

   <target name="run" depends="init" if="class"
      description="Execute all tests in the given test directory.">
      <java fork="true" classname="${class}">
         <jvmarg value="-Dorg.jboss.jms.asf.useold=true"/>
         <classpath>
            <pathelement location="${build.classes}"/>
            <pathelement location="${resources}/test"/>
            <path refid="javac.classpath"/>
         </classpath>
      </java>
   </target>

   <target name="tests" depends="init" description="Execute all tests">
      <antcall target="standalone-tests" inheritRefs="true"/>
      <antcall target="ejb-tests" inheritRefs="true"/>
      <antcall target="entity-tests" inheritRefs="true"/>
      <antcall target="ssl-simple-test"  inheritRefs="true"/>
      <antcall target="ssl-advanced-test"  inheritRefs="true"/>
      <antcall target="jacc-test" inheritRefs="true"/>
      <antcall target="clustered-tests" inheritRefs="true"/>
      <antcall target="invoker-test"  inheritRefs="true"/>
      <antcall target="iiop-tests"  inheritRefs="true"/>
      <antcall target="arjuna-test"  inheritRefs="true"/>
      <antcall target="libdeployment-test"  inheritRefs="true"/>
   </target>

   <target name="no-start-jboss-tests" depends="init" description="Execute all tests">
      <antcall target="standalone-tests" inheritRefs="true"/>
      <antcall target="no-start-jboss-ejb-tests" inheritRefs="true"/>
      <antcall target="no-start-jboss-entity-tests" inheritRefs="true"/>
      <antcall target="no-start-jboss-iiop-tests" inheritRefs="true"/>
   </target>

   <target name="standalone-tests" depends="init">
      <antcall target="standalone-test" inheritRefs="true">
         <param name="test" value="standalone"/>
      </antcall>
      <antcall target="standalone-test" inheritRefs="true">
         <param name="test" value="standalone/flushmodenever"/>
      </antcall>
      <antcall target="standalone-test" inheritRefs="true">
         <param name="test" value="standalone/embeddedjms"/>
      </antcall>
      <antcall target="standalone-test" inheritRefs="true">
         <param name="test" value="standalone/security"/>
      </antcall>
      <antcall target="standalone-test" inheritRefs="true">
         <param name="test" value="standalone/servicepojo"/>
      </antcall>
   </target>

   <target name="ejb-tests" depends="init" description="Execute all tests">

      <start-jboss conf="all" host="${node0}" jvmargs="-Xmx128M"/>
      <wait-on-host/>

      <antcall target="no-start-jboss-ejb-tests" inheritRefs="true"/>

      <stop-jboss/>
      <wait-on-shutdown conf="all"/>
   </target>

   <target name="start-stop-test" depends="init" description="Start and stop JBoss">

      <start-jboss conf="all" host="${node0}" jvmargs="-Xmx128M"/>
      <wait-on-host/>

      <stop-jboss/>
      <wait-on-shutdown conf="all"/>
   </target>

   <target name="no-start-jboss-ejb-tests" depends="init" description="Execute all tests">
      <antcall target="test" inheritRefs="true">
         <param name="test" value="webservices"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="regression/ejbthree454"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="regression/ejbthree670"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="regression/salesforce7123"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="regression/scopedclassloader"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="dependency"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="bmt"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="regression/ejbthree249"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="regression/ejbthree316"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="regression/ejbthree231"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="clientinterceptors"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="interceptors2"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="interceptors3"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="interceptors"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="jaxws"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="txexceptions"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="localcall"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="service"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="stateful"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="descriptortypo"/>
      </antcall>
      <!--antcall target="test" inheritRefs="true">
         <param name="test" value="concurrent"/>
      </antcall-->
      <!--antcall target="test" inheritRefs="true">
         <param name="test" value="seam"/>
      </antcall-->
      <antcall target="test" inheritRefs="true">
         <param name="test" value="aspectdomain"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="ejbcontext"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="initial"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="timer"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="timerdependency"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="classloader"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="arjuna"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="asynchronous"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="mdb"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="invalidtxmdb"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="mdbtransactions"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="consumer"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="cache"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="strictpool"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="stateless"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="homeinterface"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="deployer"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="container"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="circulardependency"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="servicedependency"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="security"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="dd"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="bank"/>
      </antcall>
      <!--antcall target="test" inheritRefs="true">
         <param name="test" value="transaction"/>
      </antcall-->
      <antcall target="test" inheritRefs="true">
         <param name="test" value="schema"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="mail"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="unauthenticatedprincipal"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="securitydomain"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="naming"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="pool"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="reference21_30"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="dd/mdb"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="jca/inflowmdb"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="jms"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="jms/managed"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="enventry"/>
      </antcall>
      <!--antcall target="test" inheritRefs="true">
         <param name="test" value="jca"/>
      </antcall-->
      <antcall target="test" inheritRefs="true">
         <param name="test" value="dd/override"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="dd/web"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="jsp"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="servlet"/>
      </antcall>
      <!--antcall target="test" inheritRefs="true">
         <param name="test" value="loginmodule"/>
      </antcall-->
      <antcall target="test" inheritRefs="true">
         <param name="test" value="exception"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="microbench"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="ejbthree712"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="ejbthree751"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="ejbthree832"/>
      </antcall>
   </target>

   <target name="entity-tests" depends="init" description="Execute all tests">

      <start-jboss conf="all" host="${node0}" jvmargs="-Xmx128M"/>
      <wait-on-host/>

      <antcall target="no-start-jboss-entity-tests" inheritRefs="true"/>

      <stop-jboss/>
      <wait-on-shutdown conf="all"/>
   </target>

   <target name="no-start-jboss-entity-tests" depends="init" description="Execute all tests">
      <antcall target="test" inheritRefs="true">
         <param name="test" value="regression/ejbthree440"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="regression/ejbthree290"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="longlived"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="factory"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="ear"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="factoryxml"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="hbm"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="pkg"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="entityexception"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="secondary"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="xmlcfg"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="lob"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="composite"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="composite2"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="entity"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="manytomany"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="joininheritance"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="singletableinheritance"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="tableperinheritance"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="dependent"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="entitycallback"/>
      </antcall>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="regressionHHH275"/>
      </antcall>

   </target>

   <target name="clustered-test" depends="init">
      <antcall target="tests-clustering-startup"/>
      <antcall target="tests-clustering-wait"/>

      <antcall target="test-with-jvmargs" inheritRefs="true">
         <param name="jvmargs" value=""/>
         <!--
         <param name="jvmargs"
                value="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=/dt_socket,address=8787,server=n,suspend=n"/>
         -->
      </antcall>

      <antcall target="tests-clustering-shutdown"/>
   </target>

   <target name="clustered-one-test" depends="init, clusteredsession, clusteredentity">
<!--
-->
      <antcall target="tests-clustering-startup"/>
      <antcall target="tests-clustering-wait"/>

      <antcall target="one-test-with-jvmargs" inheritRefs="true">
         <!--param name="test" value="clusteredsession"/-->
         <param name="jvmargs" value=""/>
         <!--
         <param name="jvmargs"
                value="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=/dt_socket,address=8787,server=n,suspend=n"/>
         -->
      </antcall>

      <!--
         Test in test-cluster-session shuts down both nodes. It needs to shut down one
         anyway as part of the tests, so simplest is to shut down the other from within
         the test rather than figure out what to shut down here.
      -->
<!--
-->
      <antcall target="tests-clustering-shutdown"/>

   </target>

   <target name="clustered-tests" depends="init, clusteredsession, clusteredentity">
      <antcall target="tests-clustering-startup"/>
      <antcall target="tests-clustering-wait"/>

      <antcall target="test-clustered-entity"/>
      <antcall target="test-cluster-session"/>

      <!--
         Test in test-cluster-session shuts down both nodes. It needs to shut down one
         anyway as part of the tests, so simplest is to shut down the other from within
         the test rather than figure out what to shut down here.
      -->
      <antcall target="tests-clustering-shutdown"/>

   </target>
   
   <target name="arjuna-test" depends="init">
      <create-config baseconf="default" newconf="arjuna">
         <patternset>
            <include name="conf/**"/>
            <include name="deploy*/**"/>
            <include name="lib/**"/>
         </patternset>
      </create-config>
     
      <start-jboss conf="arjuna" host="${node0}" jvmargs="-Xmx128M"/>
      <wait-on-host/>
      
      <antcall target="test" inheritRefs="true">
         <param name="test" value="arjuna"/>
      </antcall>
      
      <stop-jboss/>
      <wait-on-shutdown conf="arjuna"/>
   </target>
   
   <target name="libdeployment-test" depends="init">
      <create-config baseconf="all" newconf="libdeployment" jboss.dist="${ejb3.dist}">
         <patternset>
            <include name="conf/**"/>
            <include name="deploy*/**"/>
            <include name="lib/**"/>
         </patternset>
      </create-config>
     
      <start-jboss conf="libdeployment" host="${node0}" jboss.dist="${ejb3.dist}" jvmargs="${ejb3.jboss.jvmargs}"/>
      <wait-on-host/>
      
      <antcall target="test" inheritRefs="true">
         <param name="test" value="libdeployment"/>
      </antcall>
      
      <stop-jboss jboss.dist="${ejb3.dist}"/>
      <wait-on-shutdown conf="libdeployment"/>
   </target>

   <target name="ssl-simple-test" depends="init">
     <create-config baseconf="all" newconf="ejb3-ssl">
         <patternset>
            <include name="conf/**"/>
            <include name="deploy*/**"/>
            <include name="lib/**"/>
         </patternset>
      </create-config>

      <!--
         We are using the simplest remoting sslsocket configuration possible, we
         need to tell JBoss to use the supplied keystore via system properties
      -->
      <property name="ssl-args" value="-Xmx128M -Djavax.net.ssl.keyStore=${jboss.dist}/server/ejb3-ssl/conf/localhost.keystore -Djavax.net.ssl.keyStorePassword=opensource"/>
      <start-jboss conf="ejb3-ssl" host="${node0}" jvmargs="${ssl-args}"/>
      <wait-on-host/>

      <!-- Tell client to use the supplied truststore -->
      <property name="jvmargs" value="-Djavax.net.ssl.trustStore=${resources}/test/ssl/localhost.truststore -Djavax.net.ssl.trustStorePassword=opensource"/>

      <antcall target="test-with-jvmargs" inheritRefs="true">
         <param name="test" value="ssl"/>
         <param name="jvmargs" value="${jvmargs}"/>
      </antcall>

      <stop-jboss/>
      <wait-on-shutdown conf="ejb3-ssl"/>
   </target>

   <target name="ssl-advanced-test" depends="init">
     <create-config baseconf="all" newconf="ejb3-ssl-advanced">
         <patternset>
            <include name="conf/**"/>
            <include name="deploy*/**"/>
            <include name="lib/**"/>
         </patternset>
      </create-config>

      <!--
         "Advanced" remoting sslsocket configuration contains keystore info
      -->
      <start-jboss conf="ejb3-ssl-advanced" host="${node0}" jvmargs="-Xmx128M"/>
      <wait-on-host/>

      <!-- Tell client to use the supplied truststore -->
      <property name="jvmargs" value="-Djavax.net.ssl.trustStore=${resources}/test/ssl/localhost.truststore -Djavax.net.ssl.trustStorePassword=opensource"/>

      <antcall target="test-with-jvmargs" inheritRefs="true">
         <param name="test" value="ssladvanced"/>
         <param name="jvmargs" value="${jvmargs}"/>
      </antcall>

      <stop-jboss/>
      <wait-on-shutdown conf="ejb3-ssl-advanced"/>
   </target>
   
   <target name="invoker-test" depends="init">
      <create-config baseconf="all" newconf="invoker">
         <patternset>
            <include name="conf/**"/>
            <include name="deploy*/**"/>
            <include name="lib/**"/>
         </patternset>
      </create-config>
      
      <start-jboss conf="invoker" host="${node0}" jvmargs="-Xmx128M"/>
      <wait-on-host/>
      
      <property name="jvmargs" value=""/>      
      
      <!--antcall target="test-with-jvmargs" inheritRefs="true">
         <param name="test" value="invoker"/>
         <param name="jvmargs" value="${jvmargs}"/>
      </antcall-->
      
      <antcall target="test" inheritRefs="true">
         <param name="test" value="invoker"/>
      </antcall>
      
      <stop-jboss/>
      <wait-on-shutdown conf="invoker"/>
   </target>

   <target name="jacc-test" depends="init">
      <create-config baseconf="all" newconf="ejb3-jacc">
         <patternset>
            <include name="conf/**"/>
            <include name="deploy*/**"/>
            <include name="lib/**"/>
         </patternset>
      </create-config>
      <start-jboss conf="ejb3-jacc" host="${node0}" jvmargs="-Xmx128M"/>
      <wait-on-host/>
      <antcall target="test" inheritRefs="true">
         <param name="test" value="jacc"/>
      </antcall>
      <stop-jboss/>
      <wait-on-shutdown conf="ejb3-jacc"/>
   </target>

   <!-- ================================================================== -->
   <!-- Clustering                                                         -->
   <!-- ================================================================== -->

   <!-- Stuff needed for clustering -->

   <target name="test-clustered-entity">
      <antcall target="test-with-jvmargs" inheritRefs="true">
         <param name="test" value="clusteredentity"/>
         <param name="jvmargs" value=""/>
      </antcall>

   </target>

   <target name="test-cluster-session">
      <antcall target="test-with-jvmargs" inheritRefs="true">
         <param name="test" value="clusteredsession"/>
         <param name="jvmargs" value=""/>
         <!--
         <param name="jvmargs"
                value="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=8787,server=n,suspend=n"/>
         -->
      </antcall>

   </target>

   <target name="tests-clustering-wait" unless="${tests.clustering.skip.startup}">
      <echo message="Waiting for nodes to start..."/>
      <waitfor maxwait="240" maxwaitunit="second"
         checkevery="5" checkeveryunit="second" timeoutproperty="cluster.timeout">
         <and>
            <http url="${node0.http.url}"/>
            <http url="${node1.http.url}"/>
         </and>
      </waitfor>
      <fail message="Timeout waiting for nodes to start" if="cluster.timeout"/>
      <echo message="Nodes have started, waiting for cluster to stablize..."/>
   </target>

   <target name="tests-clustering-startup" unless="${tests.clustering.skip.startup}">
      <create-cluster-node conf="node0"/>
      <start-jboss  conf="node0" host="${node0}" jvmargs="-Xmx128M"/>
      <create-cluster-node conf="node1"/>
      <start-jboss  conf="node1" host="${node1}" jvmargs="-Xmx128M"/>
   </target>

   <target name="tests-clustering-shutdown" unless="${tests.clustering.skip.startup}">
      <stop-jboss url="${node0.jndi.url}"/>
      <stop-jboss url="${node1.jndi.url}"/>
   </target>

   <!-- ================================================================== -->
   <!-- Cleaning                                                           -->
   <!-- ================================================================== -->

   <!-- Clean up all build output -->
   <target name="clean"
      description="Cleans up most generated files." depends="init">
      <delete dir="${build.classes}/org/jboss/test"/>
      <delete dir="${build.classes}/org/jboss/ejb3/test"/>
   </target>

   <!-- ================================================================== -->
   <!-- Misc.                                                              -->
   <!-- ================================================================== -->

   <target name="main"
      description="Executes the default target (most)."
      depends="jars"/>


   <target name="tests-report-html" depends="compile-stylesheets">
      <mkdir dir="${build.reports}/html"/>

      <junitreport todir="${build.reports}">
         <fileset dir="${build.reports}">
            <include name="TEST-*.xml"/>
         </fileset>
         <report format="frames"
            todir="${build.reports}/html"
            styledir="${build.stylesheets}"
            />
      </junitreport>
   </target>

  <target name="tests-report-text" depends="tests-report-html">
    <mkdir dir="${build.reports}/text"/>

    <style basedir="${build.reports}"
      destdir="${build.reports}/text"
      extension=".txt"
      style="${build.stylesheets}/summary1b.xsl"
      includes="TESTS-TestSuites.xml">
      <param name="thedate" expression="${TIMENOW}"/>
      <param name="java_version" expression="${java.version}"/>
      <param name="java_vendor" expression="${java.vendor}"/>
      <param name="java_vm_specification_version" expression="${java.vm.specification.version}"/>
      <param name="java_vm_version" expression="${java.vm.version}"/>
      <param name="java_vm_name" expression="${java.vm.name}"/>
      <param name="java_vm_info" expression="${java.vm.info}"/>
      <param name="java_specification_version" expression="${java.specification.version}"/>
      <param name="java_class_version" expression="${java.class.version}"/>
      <param name="os_name" expression="${os.name}"/>
      <param name="os_arch" expression="${os.arch}"/>
      <param name="os_version" expression="${os.version}"/>
      <param name="builduid" expression="${TIMENOW}"/>
      <param name="results_web" expression="${results_web}"/>
    </style>
  </target>


   <target name="tests-report-clean">
      <delete dir="${build.reports}"/>
   </target>

   <target name="jacorb-test" depends="init" if="test"
      description="Execute all tests in the given test directory using JacORB.">
      <!--property name="debugFlags" value="-Xdebug -Xrunjdwp:transport=dt_socket,address=8888,server=y,suspend=y"/-->
      <property name="debugFlags" value=""/>
      <!-- For use when we do not need to pass in any special jvmargs; forks the test process -->
      <antcall target="test-with-jvmargs" inheritRefs="true">
         <param name="test" value="${test}"/>
         <param name="test.extension" value="jacorb"/>
         <param name="test.jndi.url" value="corbaloc::localhost:3528/JBoss/Naming/root"/>
      	 <!-- using jacorb -->
         <param name="jvmargs" value="${debugFlags} 
            -Djava.security.manager 
            -Djava.security.policy=${resources}/security/tst.policy 
            -Dorg.omg.CORBA.ORBClass=org.jacorb.orb.ORB 
            -Dorg.omg.CORBA.ORBSingletonClass=org.jacorb.orb.ORBSingleton 
            -Dorg.omg.PortableInterceptor.ORBInitializerClass.org.jboss.tm.iiop.TxClientInterceptorInitializer 
            -Dorg.omg.PortableInterceptor.ORBInitializerClass.org.jboss.iiop.csiv2.SASClientInitializer 
            -DORBInitRef.NameService=corbaloc::localhost:3528/JBoss/Naming/root 
            -Djacorb.log.default.verbosity=10 
            -Djacorb.log.loggerFactory=org.jboss.util.Log4jLoggerFactory" />
      </antcall>
   </target>

   <target name="sunorb-test" depends="init" if="test"
      description="Execute all tests in the given test directory using Sun ORB.">
      <!--property name="debugFlags" value="-Xdebug -Xrunjdwp:transport=dt_socket,address=8888,server=y,suspend=y"/-->
      <property name="debugFlags" value=""/>
      <!-- For use when we do not need to pass in any special jvmargs; forks the test process -->
      <antcall target="test-with-jvmargs" inheritRefs="true">
         <param name="test" value="${test}"/>
         <param name="test.extension" value="sunorb"/>
         <!-- using sun jdk -->
         <param name="jvmargs" value="-Djava.security.manager -Djava.security.policy=${resources}/security/tst.policy -Dorg.omg.PortableInterceptor.ORBInitializerClass.org.jboss.tm.iiop.TxClientInterceptorInitializer -Dorg.omg.CORBA.ORBInitRef.NameService=corbaloc::localhost:3528/JBoss/Naming/root"/>
      </antcall>
   </target>

   <target name="iiop-tests" depends="init" description="Execute all tests">

      <start-jboss conf="all" host="${node0}" jvmargs="-Xmx128M"/>
      <wait-on-host/>

      <antcall target="no-start-jboss-iiop-tests" inheritRefs="true"/>

      <stop-jboss/>
      <wait-on-shutdown conf="all"/>
   </target>

   <target name="no-start-jboss-iiop-tests" depends="init" description="Execute all iiop tests">
      <antcall target="jacorb-test" inheritRefs="true">
         <param name="test" value="iiop"/>
      </antcall>
      <!-- TODO: call sunorb-test, but the report gets overwritten -->
   </target>
   
   <target name="stop-jboss">
      <stop-jboss/>
   </target>
</project>
