<?xml version="1.0" encoding="UTF-8"?>

<deployment xmlns="urn:jboss:bean-deployer:2.0">

   <bean name="EjbAnnotationMetaDataDeployer" class="org.jboss.ejb3.deployers.EjbAnnotationMetaDataDeployer"/>
 <bean name="MergedJBossMetaDataDeployer" class="org.jboss.ejb3.deployers.MergedJBossMetaDataDeployer"/>

    <!--  A deployer which creates mocked containers for tests 
   <bean name="MockContainerDeployer" class="org.jboss.ejb3.nointerface.test.deployers.MockContainerDeployer"/> -->
   
   <!-- Comes from ejb3-embedded. Will be moved later -->
   <bean name="EjbModuleDeployer" class="org.jboss.ejb3.embedded.deployers.EjbModuleDeployer"/>
   <bean name="EjbComponentDeployer" class="org.jboss.ejb3.embedded.deployers.EjbComponentDeployer">
      <property name="additionalContainerDependencies">
         <set elementClass="java.lang.String">
            <!-- We need the registrar so proxy can bind/unbind -->
            <value>Ejb3Registrar</value>
         </set>
      </property>
   </bean>
   
   <bean name="MessageDestinationReferenceResolver" class="org.jboss.ejb3.embedded.resolvers.EmbeddedMessageDestinationReferenceResolver"/>
   
   
   
   <!-- The Ejb3Registrar provides static access to the kernel -->
   <!-- It should actually not be used. -->
   <bean name="Ejb3RegistrarService" class="org.jboss.ejb3.embedded.registrar.Ejb3RegistrarService"/>
   
   <bean name="Ejb3Registrar">
      <constructor factoryMethod="getRegistrar">
         <factory bean="Ejb3RegistrarService"/>
      </constructor>
   </bean>
   
      <!-- EJB3 Cache Factory Registry -->
   <bean name="EJB3CacheFactoryRegistry" class="org.jboss.ejb3.cache.CacheFactoryRegistry">
      <property name="factories">
         <!-- Define each of the registered factories -->
         <map class="java.util.HashMap" keyClass="java.lang.String"
            valueClass="java.lang.Class">
            <!-- NoPassivationCache -->
            <entry>
               <key>NoPassivationCache</key>
               <value>org.jboss.ejb3.cache.NoPassivationCacheFactory</value>
            </entry>
            <!-- SimpleStatefulCache -->
            <entry>
               <key>SimpleStatefulCache</key>
               <value>org.jboss.ejb3.cache.simple.SimpleStatefulCacheFactory</value>
            </entry>
            <!-- StatefulTreeCache -->
            <entry>
               <key>StatefulTreeCache</key>
               <value>org.jboss.ejb3.cache.tree.StatefulTreeCacheFactory</value>
            </entry>
         </map>
      </property>
   </bean>

   <!-- EJB3 Persistence Manager Factory Registry -->
   <bean name="EJB3PersistenceManagerFactoryRegistry" class="org.jboss.ejb3.cache.persistence.PersistenceManagerFactoryRegistry">
      <property name="factories">
         <!-- Define each of the registered factories -->
         <map class="java.util.HashMap" keyClass="java.lang.String"
            valueClass="java.lang.Class">
            <!-- StatefulSessionFilePersistenceManager -->
            <entry>
               <key>StatefulSessionFilePersistenceManager</key>
               <value>org.jboss.ejb3.cache.simple.StatefulSessionFilePersistenceManagerFactory</value>
            </entry>
         </map>
      </property>
   </bean>

   <!-- EJB3 Pool Factory Registry -->
   <bean name="EJB3PoolFactoryRegistry" class="org.jboss.ejb3.pool.PoolFactoryRegistry">
      <property name="factories">
         <!-- Define each of the registered factories -->
         <map class="java.util.HashMap" keyClass="java.lang.String"
            valueClass="java.lang.Class">
            <!-- ThreadlocalPool -->
            <entry>
               <key>ThreadlocalPool</key>
               <value>org.jboss.ejb3.pool.ThreadlocalPoolFactory</value>
            </entry>
            <!-- StrictMaxPool -->
            <entry>
               <key>StrictMaxPool</key>
               <value>org.jboss.ejb3.pool.StrictMaxPoolFactory</value>
            </entry>
         </map>
      </property>
   </bean>

   <!-- SFSB JNDI Registrar -->
   <bean name="org.jboss.ejb3.JndiRegistrar.Session.SFSBJndiRegistrar"
      class="org.jboss.ejb3.proxy.impl.jndiregistrar.JndiStatefulSessionRegistrar">
      <constructor>
         <parameter>
            org.jboss.ejb3.proxy.impl.objectfactory.session.stateful.StatefulSessionProxyObjectFactory
         </parameter>
      </constructor>
   </bean>

   <!-- SLSB JNDI Registrar -->
   <bean name="org.jboss.ejb3.JndiRegistrar.Session.SLSBJndiRegistrar"
      class="org.jboss.ejb3.proxy.impl.jndiregistrar.JndiStatelessSessionRegistrar">
      <constructor>
         <parameter>
            org.jboss.ejb3.proxy.impl.objectfactory.session.stateless.StatelessSessionProxyObjectFactory
         </parameter>
      </constructor>
   </bean>

   <!-- We could have directly used the org.jboss.ejb3.Ejb3Registry as a MC bean
        and added the "register" and "unregister" methods as callbacks, but since
        those methods are "static", MC complains and throws exception. So let's use
        this indirection for the time being.

        The Ejb3Registry is looked up by the IsLocalInterceptor for EJB containers.
    -->

    <bean name="EJB3ComponentRegistry" class="org.jboss.ejb3.embedded.Ejb3ComponentRegistry">
      <!-- Accept any implementor of org.jboss.ejb3.EJBContainer -->
      <incallback method="addContainer"/>
      <uncallback method="removeContainer"/>
    </bean>

    <bean name="ScopedEjbReferenceResolver" class="org.jboss.ejb3.core.resolvers.ScopedEJBReferenceResolver"/>

</deployment>