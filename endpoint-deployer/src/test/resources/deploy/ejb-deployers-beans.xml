<?xml version="1.0" encoding="UTF-8"?>
<deployment xmlns="urn:jboss:bean-deployer:2.0">
   <!-- TODO: move SchemaResolverConfig to a more general beans.xml -->
   <bean name="SchemaResolverConfig" class="org.jboss.xb.binding.sunday.unmarshalling.SchemaResolverConfig">
      <property name="bindingClassesByLocations">
         <map keyClass="java.lang.String" valueClass="java.lang.String">
            <entry>
               <key>ejb-jar_3_0.xsd</key>
               <value>org.jboss.metadata.ejb.spec.EjbJar30MetaData</value>
            </entry>
            <entry>
               <key>jboss_5_0.xsd</key>
               <value>org.jboss.metadata.ejb.jboss.JBoss50MetaData</value>
            </entry>
            <entry>
               <key>persistence_1_0.xsd</key>
               <value>org.jboss.metadata.jpa.spec.PersistenceMetaData</value>
            </entry>
         </map>
      </property>
   </bean>

   <!--  Deployer which parses the ejb-jar.xml -->
   <bean name="EjbParsingDeployer" class="org.jboss.deployers.vfs.spi.deployer.SchemaResolverDeployer">

      <constructor>
        <parameter class="java.lang.Class">org.jboss.metadata.ejb.spec.EjbJarMetaData</parameter>
      </constructor>
      <property name="name">ejb-jar.xml</property>
      <!-- We need to be fast, so no schema validation -->
      <property name="useSchemaValidation">false</property>
   </bean>

   <!-- Deployer which parses jboss.xml -->
   <bean name="JBossEjbParsingDeployer" class="org.jboss.deployers.vfs.spi.deployer.SchemaResolverDeployer">

      <constructor>
        <parameter class="java.lang.Class">org.jboss.metadata.ejb.jboss.JBossMetaData</parameter>
      </constructor>
      <property name="name">jboss.xml</property>
      <!-- We need to be fast, so no schema validation -->
      <property name="useSchemaValidation">false</property>
   </bean>


   <bean name="EjbAnnotationMetaDataDeployer" class="org.jboss.ejb3.deployers.EjbAnnotationMetaDataDeployer"/>

   <bean name="MergedJBossMetaDataDeployer" class="org.jboss.ejb3.deployers.MergedJBossMetaDataDeployer"/>

   <bean name="EjbMetadataJndiPolicyDecoratorDeployer" class="org.jboss.ejb3.deployers.EjbMetadataJndiPolicyDecoratorDeployer"/>

   <!-- EJB3 ProcessorChain Deployer -->
   <bean name="Ejb3MetadataProcessingDeployer" class="org.jboss.ejb3.deployers.Ejb3MetadataProcessingDeployer" />

   <bean name="EjbModuleDeployer" class="org.jboss.ejb3.embedded.deployers.EjbModuleDeployer"/>
   <bean name="EjbComponentDeployer" class="org.jboss.ejb3.embedded.deployers.EjbComponentDeployer"/>

   <bean name="MessageDestinationReferenceResolver" class="org.jboss.ejb3.embedded.resolvers.EmbeddedMessageDestinationReferenceResolver"/>

   <!-- EJB3 Cache Factory Registry -->
   <bean name="EJB3CacheFactoryRegistry" class="org.jboss.ejb3.cache.CacheFactoryRegistry">
      <property name="factories">
         <!-- Define each of the registered factories -->
         <map class="java.util.HashMap" keyClass="java.lang.String"
            valueClass="java.lang.Class">
            <!-- NoPassivationCache -->
            <entry>
               <key>NoPassivationCache</key>
               <value>org.jboss.ejb3.cache.NoPassivationCacheFactory</value>
            </entry>
            <!-- SimpleStatefulCache -->
            <entry>
               <key>SimpleStatefulCache</key>
               <value>org.jboss.ejb3.cache.simple.SimpleStatefulCacheFactory</value>
            </entry>
            <!-- StatefulTreeCache -->
            <entry>
               <key>StatefulTreeCache</key>
               <value>org.jboss.ejb3.cache.tree.StatefulTreeCacheFactory</value>
            </entry>
         </map>
      </property>
   </bean>

   <!-- EJB3 Persistence Manager Factory Registry -->
   <bean name="EJB3PersistenceManagerFactoryRegistry" class="org.jboss.ejb3.cache.persistence.PersistenceManagerFactoryRegistry">
      <property name="factories">
         <!-- Define each of the registered factories -->
         <map class="java.util.HashMap" keyClass="java.lang.String"
            valueClass="java.lang.Class">
            <!-- StatefulSessionFilePersistenceManager -->
            <entry>
               <key>StatefulSessionFilePersistenceManager</key>
               <value>org.jboss.ejb3.cache.simple.StatefulSessionFilePersistenceManagerFactory</value>
            </entry>
         </map>
      </property>
   </bean>

   <!-- EJB3 Pool Factory Registry -->
   <bean name="EJB3PoolFactoryRegistry" class="org.jboss.ejb3.pool.PoolFactoryRegistry">
      <property name="factories">
         <!-- Define each of the registered factories -->
         <map class="java.util.HashMap" keyClass="java.lang.String"
            valueClass="java.lang.Class">
            <!-- ThreadlocalPool -->
            <entry>
               <key>ThreadlocalPool</key>
               <value>org.jboss.ejb3.pool.ThreadlocalPoolFactory</value>
            </entry>
            <!-- StrictMaxPool -->
            <entry>
               <key>StrictMaxPool</key>
               <value>org.jboss.ejb3.pool.StrictMaxPoolFactory</value>
            </entry>
         </map>
      </property>
   </bean>

   <!-- SFSB JNDI Registrar -->
   <bean name="org.jboss.ejb3.JndiRegistrar.Session.SFSBJndiRegistrar"
      class="org.jboss.ejb3.proxy.impl.jndiregistrar.JndiStatefulSessionRegistrar">
      <constructor>
         <parameter>
            org.jboss.ejb3.proxy.impl.objectfactory.session.stateful.StatefulSessionProxyObjectFactory
         </parameter>
      </constructor>
   </bean>

   <!-- SLSB JNDI Registrar -->
   <bean name="org.jboss.ejb3.JndiRegistrar.Session.SLSBJndiRegistrar"
      class="org.jboss.ejb3.proxy.impl.jndiregistrar.JndiStatelessSessionRegistrar">
      <constructor>
         <parameter>
            org.jboss.ejb3.proxy.impl.objectfactory.session.stateless.StatelessSessionProxyObjectFactory
         </parameter>
      </constructor>
   </bean>

   <!-- We could have directly used the org.jboss.ejb3.Ejb3Registry as a MC bean
        and added the "register" and "unregister" methods as callbacks, but since
        those methods are "static", MC complains and throws exception. So let's use
        this indirection for the time being.

        The Ejb3Registry is looked up by the IsLocalInterceptor for EJB containers.
    -->

    <bean name="EJB3ComponentRegistry" class="org.jboss.ejb3.embedded.Ejb3ComponentRegistry">
      <!-- Accept any implementor of org.jboss.ejb3.EJBContainer -->
      <incallback method="addContainer"/>
      <uncallback method="removeContainer"/>
    </bean>

</deployment>