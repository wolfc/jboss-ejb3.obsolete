<?xml version="1.0" encoding="UTF-8"?>
<deployment xmlns="urn:jboss:bean-deployer:2.0">
   <bean name="SimpleClassLoaderDeployer" class="org.jboss.ejb3.core.test.common.SimpleClassLoaderDeployer"/>
   
   <bean name="AspectManager" class="org.jboss.aop.AspectManager">
      <constructor factoryClass="org.jboss.aop.AspectManager" factoryMethod="instance"/>
   </bean>
   
   <bean name="AspectAppParsingDeployer" class="org.jboss.aop.deployers.AspectAppParsingDeployer"/>
   <bean name="AspectDeployer" class="org.jboss.aop.deployers.AspectDeployer">
      <property name="type">aop</property>
      <property name="aspectManager"><inject bean="AspectManager"/></property>
   </bean>
    
   <!-- The MainDeployer -->
   <bean name="MainDeployer" class="org.jboss.deployers.plugins.main.MainDeployerImpl">
      <property name="structuralDeployers"><inject bean="StructuralDeployers"/></property>
      <property name="deployers"><inject bean="Deployers"/></property>
      <!--property name="mgtDeploymentCreator"><inject bean="ManagedDeploymentCreator"/></property-->
   </bean>
      
   <!-- The holder for deployers that determine structure -->
   <bean name="StructuralDeployers" class="org.jboss.deployers.vfs.plugins.structure.VFSStructuralDeployersImpl">
      <property name="structureBuilder">
         <!-- The consolidator of the structure information -->
         <bean name="StructureBuilder" class="org.jboss.deployers.vfs.plugins.structure.VFSStructureBuilder"/>
      </property>
      <!-- Accept any implementor of structure deployer -->
      <incallback method="addDeployer"/>
      <uncallback method="removeDeployer"/>
   </bean>
   
   <!-- The holder for deployers that do real deployment -->
   <bean name="Deployers" class="org.jboss.deployers.plugins.deployers.DeployersImpl">
      <constructor><parameter><inject bean="jboss.kernel:service=KernelController"/></parameter></constructor>
      <!-- Accept any implementor of deployer -->
      <incallback method="addDeployer"/>
      <uncallback method="removeDeployer"/>
   </bean>
   
   <!-- File Structure -->
   <bean name="FileStructure" class="org.jboss.deployers.vfs.plugins.structure.file.FileStructure"/>
   
   <!-- JNDI -->
   <bean name="NameServer" class="org.jnp.server.SingletonNamingServer"/>
   
   <bean name="JavaCompInitializer" class="org.jboss.ejb3.core.test.common.JavaCompInitializer"/>
   
   <bean name="TransactionManager" class="org.jboss.ejb3.core.test.common.SimpleTransactionService">
      <depends>NameServer</depends>
   </bean>
   
   <!-- 
   <bean name="AspectDeployment" class="org.jboss.ejb3.test.tx.common.AspectDeployment">
      <property name="mainDeployer"><inject bean="MainDeployer"/></property>
      <property name="resource">instance/jboss-aop.xml</property>
      <depends>TransactionManager</depends>
   </bean>
   
   <bean name="TestContainer" class="org.jboss.ejb3.test.tx.common.SimpleContainer">
      <constructor>
         <parameter>TestContainer</parameter>
         <parameter>Stateful Container</parameter>
         <parameter>org.jboss.ejb3.test.tx.instance.InstanceTestBean</parameter>
      </constructor>
      <depends>AspectDeployment</depends>
      <depends>TransactionManager</depends>
   </bean>
   -->
   
   <!-- 
    
    JNDI Registrars
    
    
    The JNDI Registrar is responsible for all JNDI Bindings for
    an EJB.  Its constructor takes the following arguments, in order:
    
    javax.naming.Context (JNDI Context into which to bind objects)
    org.jboss.ejb3.proxy.spi.registry.ProxyFactoryRegistry (Implementation of ProxyFactoryRegistry)
    String statelessSessionProxyObjectFactoryType The JNDI ObjectFactory implementation to use for SLSB
    ...more later when SFSB, @Service, MDB Implemented
    
  -->

  <!-- SLSB JNDI Registrar -->
  <bean name="org.jboss.ejb3.JndiRegistrar.Session.SLSBJndiRegistrar"
    class="org.jboss.ejb3.proxy.impl.jndiregistrar.JndiStatelessSessionRegistrar">
    <constructor>
      <parameter>
        org.jboss.ejb3.proxy.impl.objectfactory.session.stateless.StatelessSessionProxyObjectFactory
      </parameter>
    </constructor>
    <depends>NameServer</depends>
  </bean>

  <!-- SFSB JNDI Registrar -->
  <bean name="org.jboss.ejb3.JndiRegistrar.Session.SFSBJndiRegistrar"
    class="org.jboss.ejb3.proxy.impl.jndiregistrar.JndiStatefulSessionRegistrar">
    <constructor>
      <parameter>
        org.jboss.ejb3.proxy.impl.objectfactory.session.stateful.StatefulSessionProxyObjectFactory
      </parameter>
    </constructor>
    <depends>NameServer</depends>
  </bean>
    
   <!-- Remoting Proxy Factory Registry -->
   <bean name="EJB3RemoteProxyFactoryRegistry" class="org.jboss.ejb3.proxy.factory.RemoteProxyFactoryRegistry">
      <property name="factories">
         <!-- Define each of the registered factories -->
         <map class="java.util.HashMap" keyClass="java.lang.String"
            valueClass="java.lang.Class">
            <!-- RemoteProxyFactory -->
            <entry>
               <key>RemoteProxyFactory</key>
               <value>org.jboss.ejb3.proxy.factory.RemoteProxyFactory</value>
            </entry>
            <!-- IORFactory -->
            <!-- Only available in AS 
            <entry>
               <key>IORFactory</key>
               <value>org.jboss.ejb3.iiop.IORFactory</value>
            </entry>
            -->
            <!-- ServiceRemoteProxyFactory -->
            <entry>
               <key>ServiceRemoteProxyFactory</key>
               <value>org.jboss.ejb3.proxy.factory.service.ServiceRemoteProxyFactory</value>
            </entry>
            <!-- StatefulClusterProxyFactory -->
            <entry>
               <key>StatefulClusterProxyFactory</key>
               <value>org.jboss.ejb3.proxy.factory.stateful.StatefulClusterProxyFactory</value>
            </entry>
            <!-- StatefulRemoteProxyFactory -->
            <entry>
               <key>StatefulRemoteProxyFactory</key>
               <value>org.jboss.ejb3.proxy.factory.stateful.StatefulRemoteProxyFactory</value>
            </entry>
            <!-- StatelessClusterProxyFactory -->
            <entry>
               <key>StatelessClusterProxyFactory</key>
               <value>org.jboss.ejb3.proxy.factory.stateless.StatelessClusterProxyFactory</value>
            </entry>
            <!-- StatelessRemoteProxyFactory -->
            <entry>
               <key>StatelessRemoteProxyFactory</key>
               <value>org.jboss.ejb3.proxy.factory.stateless.StatelessRemoteProxyFactory</value>
            </entry>            
         </map>
      </property>
   </bean>
   
   <!-- EJB3 Persistence Manager Factory Registry -->
   <bean name="EJB3PersistenceManagerFactoryRegistry" class="org.jboss.ejb3.cache.persistence.PersistenceManagerFactoryRegistry">
      <property name="factories">
         <!-- Define each of the registered factories -->
         <map class="java.util.HashMap" keyClass="java.lang.String"
            valueClass="java.lang.Class">
            <!-- StatefulSessionFilePersistenceManager -->
            <entry>
               <key>StatefulSessionFilePersistenceManager</key>
               <!-- A dummy persistence manager which doesn't rely on the jboss mbean -->
               <value>org.jboss.ejb3.test.cachepassivation.MyStatefulSessionFilePersistenceManagerFactory</value>
            </entry>
         </map>
      </property>
   </bean>
   
   <!-- REMOTING -->
      
   <bean name="ServerConfiguration" class="org.jboss.remoting.ServerConfiguration">
      <property name="invocationHandlers">
         <map keyClass="java.lang.String" valueClass="java.lang.String">
            <entry>
               <key>AOP</key>
               <value>org.jboss.aspects.remoting.AOPRemotingInvocationHandler</value>
            </entry>
         </map>
      </property>
   </bean>
   
   <bean name="org.jboss.ejb3.RemotingConnector" class="org.jboss.remoting.transport.Connector">
      <property name="invokerLocator">socket://0.0.0.0:3875</property>
      <property name="serverConfiguration"><inject bean="ServerConfiguration"/></property>
   </bean>
</deployment>